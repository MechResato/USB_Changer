   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_VADC_GLOBAL_GetDetailedResult,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_VADC_GLOBAL_GetDetailedResult:
  23              	.LFB66:
  24              	 .file 1 "C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc/xmc_vadc.h"
   1:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
   2:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @file xmc_vadc.h
   3:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @date 2019-12-02
   4:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   5:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @cond
   6:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   9:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  12:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  14:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  21:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * a source language processor.
  27:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  28:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  36:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  41:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Change History
  42:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * --------------
  43:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  44:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-15:
  45:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Initial <br>
  46:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  47:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-20:
  48:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised for XMC1201 device.<br>
  49:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  50:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-04-27:
  51:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for SHS.<br>
  52:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added New APIs for trigger edge selection.<BR>
  53:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  54:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  55:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  56:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-20:
  57:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  58:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-25:
  59:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - BFL configuration in channel initialization fixed.
  60:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  61:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-07-28:
  62:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  63:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  64:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  65:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  66:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  67:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  68:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAlias
  69:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetInputClass
  70:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  71:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  72:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  73:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  74:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  75:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  76:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added:
  77:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC4300 device supported
  78:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  79:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed:
  80:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_TriggerEvent API updated. OR operation removed.
  81:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_ClearEvent API updated. Multiple events triggering on clearing the event i
  82:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Wrong MACRO name defined in xmc_vadc_map.h file corrected for XMC4200/4100 devices.
  83:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *       XMC_VADC_G3_SAMPLE renamed to XMC_VADC_G1_SAMPLE
  84:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  85:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  86:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  87:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled
  88:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled
  89:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  90:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  91:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  92:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-09:
  93:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Optimization of write only registers
  94:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  95:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-18:
  96:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_IsConverterReady(): API checks the STEPCFG register for the read
  97:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *       SHSCFG SFR.
  98:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  99:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-06-17:
 100:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New macros added XMC_VADC_SHS_FULL_SET_REG, XMC_VADC_RESULT_PRIORITY_AVAILABLE
 101:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New Enum added XMC_VADC_SHS_GAIN_LEVEL_t and XMC_VADC_SYNCTR_EVAL_t
 102:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs added are:
 103:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncSlaveReadySignal
 104:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetAssertedEvents
 105:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAssertedResultEvents
 106:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultRegPriority
 107:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncReadySignal
 108:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetSyncReadySignal
 109:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetResultRegPriority
 110:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 111:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-02-06:
 112:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new functions to remove channels from background request source, XMC_VADC_GLOBAL_Bac
 113:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 114:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-06-24:
 115:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new function XMC_VADC_GLOBAL_SHS_SetAnalogReference() for XMC1 family
 116:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 117:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-08-14:
 118:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added XMC_VADC_GLOBAL_DETAILED_RESULT_t
 119:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *       You can cast the return of XMC_VADC_GLOBAL_GetDetailedResult() to a varible of type XMC_VA
 120:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_SetAnalogReference() to update AREF bitfield correctly
 121:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 122:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2019-03-30:
 123:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Changed XMC_VADC_GROUP_SetChannelAlias() to inline function
 124:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added XMC_VADC_GROUP_GetChannelAlias()
 125:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 126:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2019-12-02:
 127:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
 128:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 129:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2020-09-03:
 130:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added XMC_VADC_GROUP_GetPowerMode()
 131:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
 132:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2020-11-11:
 133:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_SetAnalogReference() and XMC_VADC_GROUP_SetChannelAlias()
 134:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
 135:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @endcond
 136:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 137:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 138:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 139:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #ifndef XMC_VADC_H
 140:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_H
 141:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 142:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 143:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * HEADER FILES
 144:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 145:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #include "xmc_common.h"
 146:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #include "xmc_scu.h"
 147:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #include "xmc_vadc_map.h"
 148:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 149:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 150:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup XMClib XMC Peripheral Library
 151:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 152:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 153:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 154:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 155:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup VADC
 156:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @brief Versatile Analog to Digital Converter (VADC) driver for XMC microcontroller family.
 157:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 158:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC microcontroller provides a series of analog input channels connected to a cluster of Ana
 159:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Converters using the Successive Approximation Register (SAR) principle to convert analog input v
 160:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * to discrete digital values.
 161:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC1
 162:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC1x is based on Sample & Hold converters, where a cluster contains 2 Sample&Hold units whi
 163:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter.
 164:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 165:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 166:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter of the ADC cluster can operate independent of the others, controlled by a dedicat
 167:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * registers and triggered by a dedicated group request source. The results of each channel can be 
 168:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * dedicated channel-specific result register or in a group-specific result register.<BR>
 169:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 170:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * The Versatile Analog to Digital Converter module (VADC) of the XMC comprises a set of converter 
 171:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be operated either independently or via a common request source that emulates a background c
 172:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter block is equipped with a dedicated input multiplexer and dedicated request source
 173:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * which together build separate groups.
 174:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 175:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC4
 176:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc4x.png"
 177:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \else
 178:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc1x.png"
 179:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 180:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 181:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * The VADC LLD is split into GLOBAL and GROUP related APIs.<BR>
 182:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GLOBAL: </B><BR>
 183:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 184:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Global APIs act on the entire ADC module. Configures global configuration registers</LI>
 185:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Allows configuration of the background request source of the VADC.</LI>
 186:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The clock related configurations for the VADC module are configured in the Global APIs/</LI>
 187:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Global API names are prefixed by the \b XMC_VADC_GLOBAL_ and they accept ::XMC_VADC_GLOB
 188:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 189:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the background request source of the VADC. The APIs which act on the background r
 190:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_Background</LI>
 191:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the sample and hold unit of the VADC. The APIs which act on the SHS related regis
 192:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_SHS_</LI>
 193:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 194:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 195:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GROUP: </B><BR>
 196:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 197:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Group APIs act on a VADC group. Configures the group configuration registers</LI>
 198:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the queue request source of the VADC. The APIs which act on the queue related reg
 199:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Queue</LI>
 200:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the scan request source of the VADC. The APIs which act on the scan related regis
 201:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Scan</LI>
 202:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configuration of the channels of each group are done by the API which have a prefix as
 203:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     \b XMC_VADC_GROUP_Channel.</LI>
 204:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Group API names are prefixed by the \b XMC_VADC_GROUP_ and they accept ::XMC_VADC_GROUP_
 205:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 206:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 207:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 208:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 209:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 210:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 211:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * MACROS
 212:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 213:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 214:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if ((UC_SERIES == XMC42)||(UC_SERIES == XMC41) || (UC_SERIES == XMC43))
 215:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE           (1U) /*  Defines the availability of group resource in a
 216:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE           (1U) /*  Defines the availability of scan request resour
 217:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE           (1U) /*  Defines the availability of queue request resou
 218:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE            (1U) /*  Defines the availability of external multiplexe
 219:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 220:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE        (1U) /*  Defines the availability of boundary check supp
 221:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS      (1U) /*  Defines the availability of synchronous request
 222:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS        (2U) /*  Defines the maximum number of groups available 
 223:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT      (1U) /*  Defines the availability of boundary flags in a
 224:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE         (1U) /*  Defines the external multiplexer channel select
 225:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 226:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE             (0U) /* Defines the availability of sample and hold modu
 227:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG          (0U) /* Defines the availability of sample and hold modu
 228:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE    (1U) /* Define the availability of a source specific res
 229:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 230:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 231:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 232:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC44 || UC_SERIES == XMC47 || UC_SERIES == XMC48)
 233:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 234:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 235:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 236:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 237:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 238:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 239:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 240:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 241:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 242:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 243:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 244:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 245:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 246:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 247:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 248:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 249:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 250:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC45)
 251:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 252:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 253:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 254:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 255:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 256:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 257:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 258:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 259:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 260:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 261:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 262:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 263:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 264:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 265:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 266:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 267:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 268:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC14 || UC_SERIES == XMC13 || UC_SERIES == XMC12)
 269:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 270:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 271:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 272:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 273:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 274:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 275:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 276:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 277:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 278:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 279:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 280:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 281:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (1U) /* Defines the availability of sample and hold module
 282:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 283:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (1U) /* Define the availability of a priority for result
 284:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 285:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 286:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC11)
 287:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (0U) /*  Defines the availability of group resource in a d
 288:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (0U) /*  Defines the availability of scan request resource
 289:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (0U) /*  Defines the availability of queue request resourc
 290:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (0U) /*  Defines the availability of external multiplexer 
 291:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 292:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (0U) /*  Defines the availability of boundary check suppor
 293:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (0U) /*  Defines the availability of synchronous request s
 294:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 295:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 296:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_START_UP_CAL_ACTIVE (3U) /*  Defines the need for SHS startup calibration acti
 297:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 devices */
 298:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_CONV_ENABLE_FOR_XMC11   (*(uint32_t*) 0x40010500UL) /*  Defines the additional err
 299:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 device for effective working*/
 300:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 301:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 302:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 303:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 304:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 305:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 306:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 307:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 308:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_PORTS               (16U) /* Defines the number of hardware ports that can be 
 309:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     as triggers and gating signals */
 310:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 311:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_RESULT_REGISTERS    (16U) /* Defines the number of result holding registers pe
 312:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 313:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_CHANNELS_PER_GROUP  (8U)  /**< Defines the number of ADC channels per group */
 314:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 315:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 316:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * ENUMS
 317:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 318:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef uint16_t XMC_VADC_RESULT_SIZE_t; /**< Type defined the converted result size to unsigned 16
 319:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_GLOBAL_TypeDef XMC_VADC_GLOBAL_t; /**< Type defined the device header file vadc global
 320:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC type*/
 321:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 322:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 323:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_G_TypeDef XMC_VADC_GROUP_t; /**< Type defined the device header file vadc group regist
 324:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC Group type*/
 325:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 326:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 327:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 328:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef SHS_Type XMC_VADC_GLOBAL_SHS_t; /**< Type defined the sample and hold register structure*/
 329:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 330:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 331:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the return status after execution of VADC specific API's. Use @ref XMC_VADC_STATUS_t fo
 332:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 333:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STATUS
 334:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 335:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_SUCCESS = 0,   /**< Returned when the API has been able to fulfill the callers re
 336:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_ERROR          /**< Returned when the API cannot fulfill the request */
 337:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STATUS_t;
 338:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 339:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 340:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various service requests lines. Each group can raise up to 4 service requests indep
 341:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  all groups together have the possibility of raising 4 module wide service requests. Use @ref XM
 342:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 343:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 344:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SR
 345:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 346:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR0 = 0, /**< Group specific Service Request-0 */
 347:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR1,     /**< Group specific Service Request-1 */
 348:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR2,     /**< Group specific Service Request-2 */
 349:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR3,     /**< Group specific Service Request-3 */
 350:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR0,    /**< Module Wide Common Service Request-0 */
 351:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR1,    /**< Module Wide Common Service Request-1 */
 352:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR2,    /**< Module Wide Common Service Request-2 */
 353:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR3    /**< Module Wide Common Service Request-3 */
 354:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SR_t;
 355:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 356:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 357:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the mode of operation of a channel, when an ongoing conversion gets interrupted in betw
 358:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_STARTMODE_t for this enumeration.
 359:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 360:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STARTMODE
 361:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 362:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_WFS = 0, /**< An ongoing conversion completes without interruption */
 363:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CIR,     /**< An ongoing conversion can be interrupted and resumed later*/
 364:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CNR     /**< An ongoing conversion can be interrupted and never resumed */
 365:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STARTMODE_t;
 366:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 367:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 368:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the edge sensitivity of the trigger signal which can assert a conversion.
 369:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_EDGE_t for this enumeration.
 370:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 371:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_EDGE
 372:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 373:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_NONE = 0, /**< No external trigger. Conversion request can be asserted by s
 374:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_FALLING,  /**< The falling edge of the external trigger can assert conversi
 375:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_RISING,   /**< The rising edge of the external trigger can assert conversio
 376:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_ANY       /**< Both the edges can assert conversion request */
 377:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_EDGE_t;
 378:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 379:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 380:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external trigger input selection possibilities, to assert a conversion. Refer the V
 381:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  section of the reference manual for details of peripherals which can be used. Also refer xmc_va
 382:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  detailed definitions of the peripherals which can take the control of these enumeration items.
 383:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_INPUT_SELECT_t for this enumeration.
 384:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 385:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_INPUT_SELECT
 386:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 387:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_A = 0, /**< Trigger select signal A */
 388:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_B,     /**< Trigger select signal B */
 389:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_C,     /**< Trigger select signal C */
 390:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_D,     /**< Trigger select signal D */
 391:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_E,     /**< Trigger select signal E */
 392:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_F,     /**< Trigger select signal F */
 393:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_G,     /**< Trigger select signal G */
 394:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_H,     /**< Trigger select signal H */
 395:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_I,     /**< Trigger select signal I */
 396:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_J,     /**< Trigger select signal J */
 397:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_K,     /**< Trigger select signal K */
 398:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_L,     /**< Trigger select signal L */
 399:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_M,     /**< Trigger select signal M */
 400:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_N,     /**< Trigger select signal N */
 401:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_O,     /**< Trigger select signal O */
 402:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_P      /**< Trigger select signal P */
 403:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 404:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_INPUT_SELECT_t;
 405:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 406:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 407:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external gating input selection possibilities, to gate the conversion requests. Ref
 408:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  interconnects section of the reference manual for details of peripherals which can be used. Als
 409:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  xmc_vadc_map.h file for detailed definitions of the peripherals which can take the control of t
 410:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  items. Use @ref XMC_VADC_GATE_INPUT_SELECT_t for this enumeration.
 411:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 412:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATE_INPUT_SELECT
 413:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 414:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_A = 0, /**< Gating select signal A */
 415:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_B,     /**< Gating select signal B */
 416:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_C,     /**< Gating select signal C */
 417:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_D,     /**< Gating select signal D */
 418:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_E,     /**< Gating select signal E */
 419:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_F,     /**< Gating select signal F */
 420:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_G,     /**< Gating select signal G */
 421:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_H,     /**< Gating select signal H */
 422:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_I,     /**< Gating select signal I */
 423:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_J,     /**< Gating select signal J */
 424:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_K,     /**< Gating select signal K */
 425:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_L,     /**< Gating select signal L */
 426:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_M,     /**< Gating select signal M */
 427:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_N,     /**< Gating select signal N */
 428:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_O,     /**< Gating select signal O */
 429:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_P      /**< Gating select signal P */
 430:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 431:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATE_INPUT_SELECT_t;
 432:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 433:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 434:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the condition for gating the conversion requests. It can be used to set the ENGT field
 435:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * of ASMR/BSMR/QMR register respectively for auto_scan/background_scan/queue request sources.
 436:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_GATEMODE_t for this enumeration.
 437:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 438:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATEMODE
 439:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 440:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_BLOCK = 0,  /**< External triggers are permanently blocked */
 441:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_IGNORE,     /**< External triggers are unconditionally passed */
 442:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVEHIGH, /**< External trigger is passed only if the gate signal is high */
 443:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVELOW  /**< External trigger is passed only if the gate signal is low */
 444:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATEMODE_t;
 445:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 446:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 447:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion result handling mode. Use @ref XMC_VADC_DMM_t for this enumeration.
 448:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 449:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_DMM
 450:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 451:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_REDUCTION_MODE = 0, /**< Standard Data reduction mode*/
 452:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_FILTERING_MODE,     /**< Provide option to select Finite Impulse Response Filter (FI
 453:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                         Infinite Impulse Response Filter (IIR)*/
 454:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_DIFFERENCE_MODE,    /**< Difference mode is selected*/
 455:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DMM_t;
 456:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 457:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 458:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the conversion mode. It defines the resolution of conversion. Use XMC_VADC_CONVMODE_t f
 459:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 460:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CONVMODE
 461:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 462:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_12BIT       = 0,  /**< Results of conversion are 12bits wide */
 463:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_10BIT       = 1,  /**< Results of conversion are 10bits wide */
 464:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_8BIT        = 2,  /**< Results of conversion are 8bits wide */
 465:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_FASTCOMPARE = 5  /**< Input signal compared with a preset range */
 466:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CONVMODE_t;
 467:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 468:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 469:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the output of a fast compare mode. Use @ref XMC_VADC_FAST_COMPARE_t for
 470:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  this enumeration.
 471:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 472:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_FAST_COMPARE
 473:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 474:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_LOW = 0, /**< Input lower than than programmed reference */
 475:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_HIGH,    /**< Input higher than than programmed reference */
 476:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_UNKNOWN  /**< Unknown, Conversion probably still ongoing */
 477:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_FAST_COMPARE_t;
 478:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 479:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 480:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the type of scan request source to be used. It can choose between auto scan and backgrou
 481:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * source methods. Use @ref XMC_VADC_SCAN_TYPE_t for this enumeration.
 482:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 483:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_TYPE
 484:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 485:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_GROUPSCAN = 0, /**< Auto scan mode of operation selected. Also called as Group
 486:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_BACKGROUND    /**< Background scan mode of operation selected. Also called as 
 487:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_TYPE_t;
 488:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 489:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 490:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the behavior of load event for the scan request source. Use @ref XMC_VADC_SCAN_LOAD_t fo
 491:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 492:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_LOAD
 493:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 494:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_OVERWRITE = 0, /**< The old set of channels is discarded in favor of the new s
 495:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                          awaiting conversion */
 496:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_COMBINE       /**< The new set of channels are combined with the pending chann
 497:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                          previous set */
 498:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_LOAD_t;
 499:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 500:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 501:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion classes that can be selected for each channel. The enumeration members ho
 502:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * global classes. The conversion classes decides the properties of conversion, like resolution, sa
 503:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_CHANNEL_CONV_t for this enumeration.
 504:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 505:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 506:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_CONV
 507:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 508:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 = 0, /**< Conversion property set-0 specific to the group */
 509:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS1,     /**< Conversion property set-1 specific to the group */
 510:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS0,    /**< Conversion property set-0, Module wide */
 511:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1    /**< Conversion property set-1, Module wide */
 512:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONV_t;
 513:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 514:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 515:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the references to boundary values used for limit checking feature. Each of these can be 
 516:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * either an upper bound or a lower bound. Use @ref XMC_VADC_CHANNEL_BOUNDARY_t for this enumeratio
 517:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 518:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 519:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY
 520:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 521:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 = 0, /**< Group specific Boundary-0 value */
 522:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1,     /**< Group specific Boundary-1 value */
 523:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0,    /**< Module wide Boundary-0 value */
 524:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1    /**< Module wide Boundary-1 value */
 525:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_t;
 526:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 527:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 528:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the voltage which the capacitor is charged to. Used in Broken wire detection feature. Us
 529:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_CHANNEL_BWDCH_t for this enumeration.
 530:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 531:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BWDCH
 532:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 533:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAGND = 0, /**< Capacitor pre-charged to ground*/
 534:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAREF     /**< Capacitor pre-charged to reference voltage*/
 535:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BWDCH_t;
 536:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 537:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 538:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Defines the criteria for event generation by the channel. Use @ref XMC_VADC_CHANNEL_EVGEN_t fo
 539:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 540:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_EVGEN
 541:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 542:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_NEVER     = 0,  /**< No event generated */
 543:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_INBOUND   = 1U, /**< Event generated when the result is within the normal 
 544:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPHIGH  = 1U, /**< Event generated when the result of fast compare opera
 545:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_OUTBOUND  = 2U, /**< Event generated when the result is outside the normal
 546:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPLOW   = 2U, /**< Event generated when the result result of fast compar
 547:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_ALWAYS    = 3U /**< Event generated always after conversion - unconditiona
 548:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_EVGEN_t;
 549:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 550:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 551:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the reference voltage selection for conversion. Use @ref XMC_VADC_CHANNEL_REF_t for this
 552:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 553:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_REF
 554:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 555:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_INTREF = 0, /**< Internal VARef */
 556:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_ALT_CH0    /**< External voltage available on Channel-0 of the perticular gr
 557:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_REF_t;
 558:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 559:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 560:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the criteria for boundary flag assertion. Use @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t
 561:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 562:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 563:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY_CONDITION
 564:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 565:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_ABOVE_BAND = 0, /**< Set Boundary condition criteria to asser
 566:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_BELOW_BAND     /**< Set Boundary condition criteria to assert
 567:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t;
 568:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 569:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 570:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the event which can lead to a global service request assertion. Use @ref XMC_VADC_GLOBAL
 571:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 572:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 573:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_EVENT
 574:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 575:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE = VADC_GLOBEFLAG_SEVGLB_Msk, /**< Background scan request sourc
 576:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_RESULT      = VADC_GLOBEFLAG_REVGLB_Msk  /**< Global result event */
 577:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_EVENT_t;
 578:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 579:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 580:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the power modes of a VADC Group. Use @ref XMC_VADC_GROUP_POWERMODE_t for this enumeratio
 581:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 582:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_POWERMODE
 583:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 584:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_OFF       = 0, /**< Group is powered down */
 585:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED1,     /**< Reserved */
 586:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED2,     /**< Reserved */
 587:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_NORMAL        /**< Group is powered up */
 588:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_POWERMODE_t;
 589:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 590:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 591:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the status of a VADC group (also known as kernel). Use @ref XMC_VADC_GROUP_STATE_t for 
 592:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 593:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_STATE
 594:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 595:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_IDLE = 0, /**< Idle and can convert if requested */
 596:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_BUSY      /**< Busy with an ongoing conversion */
 597:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_STATE_t;
 598:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 599:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 600:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the reference to sample time and conversion mode settings. Use @ref XMC_VADC_GROUP_CONV
 601:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 602:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 603:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_CONV
 604:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 605:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_STD = 0, /**< Settings pertaining to channels directly attached to VADC modul
 606:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_EMUX    /**< Settings pertaining to channels connected to VADC via EMUX */
 607:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONV_t;
 608:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 609:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 610:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbiter behavior. Use @ref XMC_VADC_GROUP_ARBMODE_t for this enumera
 611:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 612:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_ARBMODE
 613:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 614:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ALWAYS = 0, /**< Arbiter runs all the time */
 615:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ONDEMAND    /**< Arbiter runs only if a conversion request is asserted by 
 616:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                           request sources */
 617:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_ARBMODE_t;
 618:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 619:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 620:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX mode of operation. Use @ref XMC_VADC_GROUP_EMUXMODE_t for this enumeration.
 621:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 622:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXMODE
 623:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 624:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SWCTRL = 0,     /**< Perform EMUX in Software control mode*/
 625:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_STEADYMODE,     /**< Perform EMUX in Steady mode (Use EMUX set value)*/
 626:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SINGLEMODE,     /**< Perform EMUX in Single step mode*/
 627:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SEQUENCEMODE,   /**< Perform EMUX in Sequence mode*/
 628:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXMODE_t;
 629:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 630:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 631:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX channel selection encoding scheme. Use @ref XMC_VADC_GROUP_EMUXCODE_t for this
 632:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 633:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXCODE
 634:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 635:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_BINARY = 0, /**< A linearly incrementing code serves are MUX-SEL */
 636:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_GRAY       /**< The MUX-SEL is gray encoded */
 637:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCODE_t;
 638:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 639:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 640:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the service request set used. Use @ref XMC_VADC_GROUP_IRQ_t for this enumeration.
 641:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 642:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_IRQ
 643:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 644:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_KERNEL = 0, /**< Refers to Group specific service request */
 645:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_SHARED     /**< Refers to Module wide service request */
 646:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_IRQ_t;
 647:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 648:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 649:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the alignment of the converted result. Use @ref XMC_VADC_RESULT_ALIGN_t for this enumer
 650:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 651:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_ALIGN
 652:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 653:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_LEFT = 0,  /**< Always align result to left */
 654:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_RIGHT      /**< Always align result to right */
 655:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_ALIGN_t;
 656:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 657:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_SUBTRATION
 658:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 659:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_LEFT_ALIGN  = 0U,  /**< Always align result to left */
 660:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 661:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_LEFT_ALIGN  = 2U,  /**< Always align result to left */
 662:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 663:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_LEFT_ALIGN   = 4U,  /**< Always align result to left */
 664:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_RIGHT_ALIGN  = 0U,  /**< Always align result to right */
 665:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_SUBTRATION_t;
 666:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 667:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 668:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbitration priority. Use @ref XMC_VADC_GROUP_RS_PRIORITY_t for this
 669:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 670:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_RS_PRIORITY
 671:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 672:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_RS_PRIORITY_0 = 0, /**< Lowest priority for the request source*/
 673:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_RS_PRIORITY_1,     /**< Second lowest priority for the request source*/
 674:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_RS_PRIORITY_2,     /**< Second highest priority for the request source*/
 675:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_RS_PRIORITY_3,     /**< Highest priority for the request source*/
 676:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_RS_PRIORITY_t;
 677:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 678:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 679:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various modes for the boundary flag. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t f
 680:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 681:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_BOUNDARY_FLAG_MODE
 682:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 683:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_DISABLED = 0,       /**< Disable boundary flag*/
 684:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED,            /**< Always enable boundary*/
 685:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_LOW, /**< Enable boundary flag when gate level i
 686:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_HIGH /**< Enable boundary flag when gate level i
 687:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t;
 688:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 689:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 690:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 691:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the boundary select for Channel. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t for this 
 692:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 693:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_SELECT
 694:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 695:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_LOWER_BOUND = 0U,       /**< Select the lower boundary*/
 696:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_UPPER_BOUND = 2U        /**< Selects the upper boundary*/
 697:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_BOUNDARY_SELECT_t;
 698:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 699:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 700:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 701:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the group indices. Use @ref XMC_VADC_GROUP_INDEX_t for this enumeration.
 702:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 703:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_INDEX
 704:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 705:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_INDEX_0   = 0,
 706:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_INDEX_1,
 707:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 708:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_INDEX_2,
 709:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_INDEX_3
 710:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 711:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_INDEX_t;
 712:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 713:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 714:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** * Defines channel alias.
 715:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** * All enum items are available for channels 0 and 1. Other Channels can accept only XMC_VADC_CHANNE
 716:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** */
 717:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_ALIAS
 718:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 719:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_DISABLED = -1,
 720:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH0 = 0,
 721:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH1 = 1,
 722:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH2 = 2,
 723:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH3 = 3,
 724:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH4 = 4,
 725:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH5 = 5,
 726:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH6 = 6,
 727:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH7 = 7
 728:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_ALIAS_t;
 729:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 730:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 731:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 732:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 733:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selection of the reference voltage that is required for conversions (VREF).
 734:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 735:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_AREF
 736:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 737:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_EXTERNAL_VDD_UPPER_RANGE = 0 << SHS_SHSCFG_AREF_Pos, /**< External refer
 738:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_UPPER_RANGE = 2 << SHS_SHSCFG_AREF_Pos, /**< Internal refer
 739:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_LOWER_RANGE = 3 << SHS_SHSCFG_AREF_Pos, /**< Internal refer
 740:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_AREF_t;
 741:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 742:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 743:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 744:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the gain calibration selection.
 745:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 746:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_GAIN_LEVEL
 747:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 748:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_0 = SHS_CALOC0_CALOFFVAL0_Pos, /**< Select the calibration value for gain
 749:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_1 = SHS_CALOC0_CALOFFVAL1_Pos, /**< Select the calibration value for gain
 750:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_2 = SHS_CALOC0_CALOFFVAL2_Pos, /**< Select the calibration value for gain
 751:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_3 = SHS_CALOC0_CALOFFVAL3_Pos  /**< Select the calibration value for gain
 752:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SHS_GAIN_LEVEL_t;
 753:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 754:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 755:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 756:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the Delta sigma loop.
 757:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 758:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_LOOP_CH
 759:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 760:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_0 = SHS_LOOP_LPCH0_Pos, /**< Select Delta-sigma loop 0*/
 761:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_1 = SHS_LOOP_LPCH1_Pos /**< Select Delta-sigma loop 1*/
 762:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SHS_LOOP_CH_t;
 763:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 764:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 765:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides the order in which the SHS should do the calibration
 766:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 767:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER
 768:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 769:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_POST_CONV = 0, /**< Calibration occur after conversion take
 770:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_PRE_CONV   /**< Calibration occur before conversion takes p
 771:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t;
 772:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 773:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 774:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 775:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 776:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides possible routing values for the boundary flag.
 777:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 778:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_NODE
 779:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 780:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_0 = 0U, /**<Route the Group boundary flag to Common b
 781:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_1,      /**<Route the Group boundary flag to Common b
 782:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_2,      /**<Route the Group boundary flag to Common b
 783:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_3,      /**<Route the Group boundary flag to Common b
 784:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_0,  /**<Route the Group boundary flag to Common Service Req
 785:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_1,  /**<Route the Group boundary flag to Common Service Req
 786:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_2,  /**<Route the Group boundary flag to Common Service Req
 787:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_3   /**<Route the Group boundary flag to Common Service Req
 788:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_BOUNDARY_NODE_t;
 789:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 790:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 791:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 792:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 793:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the ready signal selection
 794:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 795:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SYNCTR_EVAL
 796:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 797:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_1 = VADC_G_SYNCTR_EVALR1_Msk, /**<Mask to set the EVAL1 bits of SYNCTR */
 798:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 799:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_2 = VADC_G_SYNCTR_EVALR2_Msk, /**<Mask to set the EVAL2 bits of SYNCTR */
 800:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_3 = VADC_G_SYNCTR_EVALR3_Msk  /**<Mask to set the EVAL3 bits of SYNCTR */
 801:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 802:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SYNCTR_EVAL_t;
 803:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 804:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 805:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * DATA STRUCTURES
 806:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 807:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard start*/
 808:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
 809:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma push
 810:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma anon_unions
 811:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
 812:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma warning 586
 813:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 814:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 815:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 816:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC scan request source. Use type @ref XMC_VADC_SCAN_CONFIG_t for t
 817:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 818:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_SCAN_CONFIG
 819:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 820:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request s
 821:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how scan request source would
 822:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 823:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter. If the Conversion s
 824:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                          selected as Cancel inject repeat/Never mode then this fiel
 825:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                          priority of scan request source. Uses @ref XMC_VADC_GROUP_
 826:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 827:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 828:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 829:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 830:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 831:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t src_specific_result_reg : 4;  /**< Use any one Group related result register as the 
 832:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 833:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 834:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 835:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
 836:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 837:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
 838:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigger. U
 839:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_INPUT_SELECT_t enumeration*/
 840:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 1;
 841:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal. Uses @ref
 842:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_EDGE_t */
 843:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 1;
 844:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating. Us
 845:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GATE_INPUT_SELECT_t */
 846:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 8;
 847:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t timer_mode              : 1;  /**< Decides whether timer mode for equi-distant sampl
 848:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       activated or not.*/
 849:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 3;
 850:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 851:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t asctrl;
 852:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 853:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 854:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 855:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 856:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 857:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                    : 2;
 858:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t external_trigger   : 1;  /**< Conversions be initiated by external hardware trigger 
 859:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t req_src_interrupt  : 1;  /**< Request source event can be generated after a conversi
 860:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_auto_scan   : 1;  /**< Enables the continuous conversion mode. Conversion com
 861:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  of the last channel in a scan sequence will cause 
 862:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t load_mode          : 1;  /**< Selects load event mode. Uses @ref XMC_VADC_SCAN_LOAD_
 863:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                    : 26;
 864:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 865:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t asmr;
 866:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 867:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_CONFIG_t;
 868:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 869:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 870:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef XMC_VADC_SCAN_CONFIG_t XMC_VADC_BACKGROUND_CONFIG_t; /**< Type defined the scan configurati
 871:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                  structure for background Request S
 872:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 873:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 874:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC channel. Use type XMC_VADC_CHANNEL_CONFIG_t for this enumeratio
 875:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 876:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_CHANNEL_CONFIG
 877:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 878:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 879:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 880:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 881:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 882:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t input_class                : 2;  /**< Input conversion class selection.
 883:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_CONV_t */
 884:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                            : 2;
 885:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t lower_boundary_select      : 2;  /**< Which boundary register serves as lower bound?
 886:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 887:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t upper_boundary_select      : 2;  /**< Which boundary register serves as upper bound?
 888:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 889:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t event_gen_criteria         : 2;  /**< When should an event be generated?
 890:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_EVGEN_t */
 891:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sync_conversion            : 1;  /**< Enables synchronous conversion for the configu
 892:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t alternate_reference        : 1;  /**< Input reference voltage selection either VARef
 893:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_REF_t*/
 894:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                            : 4;
 895:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result_reg_number          : 4;  /**< Group result register number */
 896:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t use_global_result          : 1;  /**< Use global result register for background requ
 897:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result_alignment           : 1;  /**< Alignment of the results read in the result re
 898:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_RESULT_ALIGN_t */
 899:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                            : 6;
 900:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t broken_wire_detect_channel : 2;  /**< Source to be used to charge the capacitor for 
 901:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BWDCH_t. */
 902:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t broken_wire_detect         : 1;  /**< Configures extra phase before the capacitor is
 903:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 904:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t chctr;
 905:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 906:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 907:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 908:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 909:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 910:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 8;
 911:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 912:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t flag_output_condition_ch0 : 1; /**< Condition for which the boundary flag should cha
 913:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITIO
 914:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t flag_output_condition_ch1 : 1; /**< Condition for which the boundary flag should cha
 915:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 916:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t flag_output_condition_ch2 : 1; /**< Condition for which the boundary flag should cha
 917:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 918:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t flag_output_condition_ch3 : 1; /**< Condition for which the boundary flag should cha
 919:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 920:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 921:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 4;
 922:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 923:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 4;
 924:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 925:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t invert_boundary_flag_ch0  : 1; /**< Inverts boundary flag output.*/
 926:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t invert_boundary_flag_ch1  : 1; /**< Inverts boundary flag output.*/
 927:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t invert_boundary_flag_ch2  : 1; /**< Inverts boundary flag output.*/
 928:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t invert_boundary_flag_ch3  : 1; /**< Inverts boundary flag output.*/
 929:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 930:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 931:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_output_ch0  : 1; /**< Enable the boundary flag output on the specific 
 932:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_output_ch1  : 1; /**< Enable the boundary flag output on the specific 
 933:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_output_ch2  : 1; /**< Enable the boundary flag output on the specific 
 934:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_output_ch3  : 1; /**< Enable the boundary flag output on the specific 
 935:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 936:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 12;
 937:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 938:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t bfl;
 939:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 940:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 941:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 942:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 943:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 944:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 945:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_mode_ch0    : 4; /**< Specify the basic operation of boundary flag 0
 946:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 947:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_mode_ch1    : 4; /**< Specify the basic operation of boundary flag 1
 948:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 949:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_mode_ch2    : 4; /**< Specify the basic operation of boundary flag 2
 950:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 951:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_mode_ch3    : 4; /**< Specify the basic operation of boundary flag 3
 952:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 953:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 16;
 954:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 955:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t bflc;
 956:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 957:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 958:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   bool    channel_priority;  /**< Only non priority channels can be converted by Background Request
 959:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   int8_t  alias_channel;     /**< Specifies the channel which has to be aliased with CH0/CH1 (which
 960:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Force the value to \b(int8_t)-1 to bypass alias feature.
 961:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Uses @ref XMC_VADC_CHANNEL_ALIAS_t  for configuration.*/
 962:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONFIG_t;
 963:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 964:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 965:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize a queue entry. Use type @ref XMC_VADC_QUEUE_ENTRY_t.
 966:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 967:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_ENTRY
 968:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 969:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 970:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 971:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 972:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 973:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_num        : 5;  /**< Channel number associated with this queue entry.<BR>Ra
 974:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t refill_needed      : 1;  /**< Conversion completed channel gets inserted back into t
 975:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t generate_interrupt : 1;  /**< Generates a queue request source event */
 976:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t external_trigger   : 1;  /**< Conversion requests are raised on an external trigger.
 977:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                    : 24;
 978:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 979:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 980:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t qinr0;
 981:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 982:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_ENTRY_t;
 983:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
 984:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 985:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing a VADC queue request source. Use type @ref XMC_VADC_QUEUE_CONFIG_t.
 986:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 987:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_CONFIG
 988:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
 989:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request s
 990:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how queue request source woul
 991:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 992:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter.Uses @ref XMC_VADC_G
 993:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 994:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 995:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 996:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 997:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 998:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t src_specific_result_reg : 4;  /**< Uses any one Group related result register as the
 999:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
1000:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
1001:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1002:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
1003:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1004:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
1005:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigger.
1006:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_INPUT_SELECT_t */
1007:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 1;
1008:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal.
1009:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_EDGE_t */
1010:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 1;
1011:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating.
1012:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GATE_INPUT_SELECT_t */
1013:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 8;
1014:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t timer_mode              : 1;  /**< Timer mode for equi-distant sampling shall be act
1015:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 3;
1016:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1017:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t qctrl0;
1018:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1019:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1020:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1021:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1022:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1023:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                   : 2;
1024:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t external_trigger  : 1;  /**< Are external triggers supported? */
1025:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                   : 29;
1026:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1027:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t qmr0;
1028:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1029:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_CONFIG_t;
1030:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1031:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1032:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1033:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the global input class configuration. Configured parameters are sample 
1034:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1035:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1036:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLASS
1037:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1038:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1039:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1040:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1041:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1042:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly connect
1043:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1044:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 3;
1045:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly con
1046:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1047:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 5;
1048:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
1049:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected via EM
1050:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1051:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 3;
1052:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connected vi
1053:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1054:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 5;
1055:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1056:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 16;
1057:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1058:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1059:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t globiclass;
1060:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1061:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLASS_t;
1062:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1063:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1064:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1065:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize converter and arbiter clock configuration
1066:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1067:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLOCK
1068:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1069:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1070:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1071:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1072:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1073:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1074:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t analog_clock_divider     : 5;  /**< Clock for the converter. <BR>Range: [0x0 to 0x1F
1075:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 2;
1076:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t msb_conversion_clock     : 1;  /**< Additional clock cycle for analog converter */
1077:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t arbiter_clock_divider    : 2;  /**< Request source arbiter clock divider. <BR>Range:
1078:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 5;
1079:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 17;
1080:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1081:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t globcfg;
1082:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1083:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLOCK_t;
1084:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1085:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1086:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1087:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1088:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize the VADC Global functions
1089:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1090:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CONFIG
1091:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1092:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1093:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1094:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1095:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1096:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1097:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t            : 4;
1098:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1099:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t            : 4;
1100:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1101:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t globbound;
1102:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1103:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1104:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_CLOCK_t clock_config; /**< ADC clock configurations*/
1105:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1106:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_CLASS_t  class0;      /**< ADC input conversion configurations for GLOBICLASS[0]*
1107:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_CLASS_t  class1;      /**< ADC input conversion configurations for GLOBICLASS[1]*
1108:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1109:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1110:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1111:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1112:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 16;
1113:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_control  : 4;  /**< Data reduction stages */
1114:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
1115:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t wait_for_read_mode      : 1;  /**< Results of the next conversion will not be overwr
1116:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       result register until the previous value is r
1117:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 6;
1118:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new result.
1119:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1120:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t globrcr;
1121:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1122:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1123:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1124:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1125:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1126:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t module_disable              : 1;  /**< Disables the module clock.*/
1127:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                             : 2;
1128:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t disable_sleep_mode_control  : 1;  /**< Set it to true in order to disable the Sleep 
1129:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                             : 28;
1130:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1131:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t clc;
1132:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1133:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CONFIG_t;
1134:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1135:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1136:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1137:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the group input class configuration. Configured parameters are sample t
1138:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1139:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1140:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CLASS
1141:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1142:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1143:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1144:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1145:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1146:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly connect
1147:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1148:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 3;
1149:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly con
1150:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1151:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 5;
1152:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected via EM
1153:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1154:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 3;
1155:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connected vi
1156:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1157:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 5;
1158:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1159:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_iclass0;
1160:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1161:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CLASS_t;
1162:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1163:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1164:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1165:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  EMUX related configuration structure.
1166:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1167:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_EMUXCFG
1168:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1169:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1170:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1171:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1172:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1173:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t starting_external_channel : 3;  /**< External channel number to which the VADC will
1174:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         generate a control signal (needed to select
1175:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         the analog multiplexer)*/
1176:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 13;
1177:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1178:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t connected_channel         : 10; /**< The Channel to which the EMUX is connected. */
1179:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1180:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t connected_channel         : 5;  /**< The Channel to which the EMUX is connected. */
1181:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 5;
1182:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1183:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_mode                 : 2;  /**< Selects the external multiplexer modes: Steady,
1184:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         Uses @ref XMC_VADC_GROUP_EMUXMODE_t*/
1185:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_coding               : 1;  /**< Select Binary or Gray coding. Uses @ref XMC_VAD
1186:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t stce_usage                : 1;  /**< Use STCE for each conversion of an external cha
1187:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1188:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_select_style : 1;  /**< Selects the style of configuring the \b connect
1189:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         (Each bit represents the channel or entire 
1190:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 1;
1191:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1192:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 2;
1193:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1194:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1195:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_emuxctr;
1196:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1197:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCFG_t;
1198:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1199:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1200:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1201:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Group Configuration Data Structures
1202:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1203:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1204:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CONFIG
1205:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1206:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCFG_t emux_config;    /**< External multiplexer related configurations */
1207:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CLASS_t class0;           /**< ADC input conversion configurations for GxICLASS[0]
1208:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CLASS_t class1;           /**< ADC input conversion configurations for GxICLASS[1]
1209:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1210:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1211:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1212:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1213:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1214:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t            : 4;
1215:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1216:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t            : 4;
1217:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1218:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_bound;
1219:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1220:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1221:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1222:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1223:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1224:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 4;
1225:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t arbitration_round_length : 2;  /**< Number of arbiter slots to be considered */
1226:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 1;
1227:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t arbiter_mode             : 1;  /**< Arbiter mode - Select either Continuous mode or 
1228:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_ARBMODE_t */
1229:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 24;
1230:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1231:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_arbcfg;
1232:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1233:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONFIG_t;
1234:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1235:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1236:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize VADC Group result register.
1237:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1238:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1239:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_RESULT_CONFIG
1240:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1241:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1242:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1243:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1244:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1245:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 16;
1246:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_control  : 4;  /**< Configures the data reduction stages */
1247:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t post_processing_mode    : 2;  /**< Result data processing mode. Uses @ref  XMC_VADC_
1248:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       For normal operation select
1249:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_DMM_t::XMC_VADC_DMM_REDUCTION_MODE
1250:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       and data_reduction_control as 0*/
1251:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 2;
1252:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t wait_for_read_mode      : 1;  /**< Allow the conversion only after previous results 
1253:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t part_of_fifo            : 2;  /**< Make the result register a part of Result FIFO? *
1254:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
1255:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new result.
1256:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1257:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_rcr;
1258:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1259:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_CONFIG_t;
1260:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1261:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1262:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1263:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1264:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Structure to initialize the Stepper configurations
1265:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1266:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_STEP_CONFIG
1267:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1268:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1269:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1270:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1271:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1272:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step0            : 3;  /**< Select a Sample and hold unit for the stepper's 
1273:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1274:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step0             : 1; /**< Should the step be added to the sequence */
1275:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step1            : 3;  /**< Select a Sample and hold unit for the stepper's 
1276:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1277:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step1             : 1; /**< Should the step be added to the sequence */
1278:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step2            : 3;  /**< Select a Sample and hold unit for the stepper's 
1279:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1280:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step2             : 1; /**< Should the step be added to the sequence */
1281:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step3            : 3;  /**< Select a Sample and hold unit for the stepper's 
1282:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1283:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step3             : 1; /**< Should the step be added to the sequence */
1284:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step4            : 3;  /**< Select a Sample and hold unit for the stepper's 
1285:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1286:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step4             : 1; /**< Should the step be added to the sequence */
1287:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step5            : 3;  /**< Select a Sample and hold unit for the stepper's 
1288:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1289:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step5             : 1; /**< Should the step be added to the sequence */
1290:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step6            : 3;  /**< Select a Sample and hold unit for the stepper's 
1291:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1292:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step6             : 1; /**< Should the step be added to the sequence */
1293:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step7            : 3;  /**< Select a Sample and hold unit for the stepper's 
1294:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1295:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step7             : 1; /**< Should the step be added to the sequence */
1296:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1297:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1298:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t stepcfg;
1299:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1300:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t;
1301:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1302:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1303:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sample and hold Initialization structure
1304:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1305:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_CONFIG
1306:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1307:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1308:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1309:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1310:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1311:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1312:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t shs_clock_divider        : 4; /**< The divider value for the SHS clock. Range: [0x0 
1313:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 6;
1314:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1315:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 10;
1316:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1317:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t analog_reference_select  : 2; /**< It is possible to different reference voltage for
1318:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 20;
1319:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1320:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t shscfg;
1321:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1322:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1323:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t calibration_order; /**< order in which the calibration sh
1324:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1325:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_CONFIG_t;
1326:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1327:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1328:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1329:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1330:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Detailed global result structure
1331:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1332:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_DETAILED_RESULT
1333:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1334:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1335:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1336:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1337:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1338:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   : 16; /**< Result of the Analog to digital conversion*/
1339:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t group_number             : 4;  /**< Indicates the group to which the channel_number 
1340:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           : 5;  /**< Converted channel number*/
1341:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      : 3;   /**< Converted external multiplexer channel number.
1342:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1343:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source : 2;  /**< Converted request source*/
1344:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      : 1;  /**< Fast compare result if conversion mode is fast c
1345:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             : 1;  /**< Valid flag is set when a new result is available
1346:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1347:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1348:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1349:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_DETAILED_RESULT_t;
1350:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1351:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1352:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Detailed channel result structure
1353:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1354:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_DETAILED_RESULT
1355:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1356:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1357:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1358:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1359:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1360:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   : 16; /**< Result of the Analog to digital conversion*/
1361:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_counter   : 4;  /**< Results reduction counter value*/
1362:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           : 5;  /**< Converted channel number*/
1363:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      : 3;   /**< Converted external multiplexer channel number.
1364:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1365:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source : 2;  /**< Converted request source*/
1366:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      : 1;  /**< Fast compare result if conversion mode is fast c
1367:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             : 1;  /**< Valid flag is set when a new result is available
1368:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1369:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1370:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1371:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DETAILED_RESULT_t;
1372:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1373:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1374:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard end*/
1375:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
1376:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma pop
1377:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
1378:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma warning restore
1379:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1380:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1381:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * static inline functions
1382:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1383:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1384:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1385:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_CHECK_GROUP_PTR(XMC_VADC_GROUP_t *const group_ptr)
1386:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1387:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
1388:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr == VADC_G0) || (group_ptr == VADC_G1) || (group_ptr == VADC_G2) || (group_ptr 
1389:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1390:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr == VADC_G0) || (group_ptr == VADC_G1));
1391:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1392:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1393:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1394:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1395:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * API Prototypes
1396:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1397:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1398:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #ifdef __cplusplus
1399:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** extern "C" {
1400:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1401:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1402:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1403:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1404:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1405:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1406:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1407:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1408:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module.<BR>\n
1409:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would ungate the clock to the VADC module (if applicable). Also this API would bring
1410:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module out of reset state(if applicable), by asserting the appropriate registers.
1411:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_UngatePeripheralClock() and XMC_SCU_RESET_DeassertPeripheral
1412:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * if needed. Directly accessed register is  COMPARATOR.ORCCTRL (Refer to the errata for XMC1100).
1413:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1414:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1415:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableModule().
1416:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1417:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_EnableModule(void);
1418:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1419:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1420:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1421:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1422:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1423:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1424:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1425:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module.<BR>\n
1426:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would gate the clock to the VADC module (if applicable). Also this API would put
1427:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module into the reset state(if applicable) by asserting the appropriate registers.
1428:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_GatePeripheralClock() and XMC_SCU_RESET_AssertPeripheralRese
1429:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1430:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1431:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModule().
1432:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1433:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_DisableModule(void);
1434:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1435:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1436:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1437:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module.
1438:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to initialization data structure
1439:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1440:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1441:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1442:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1443:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC global module with the associated configuration structure pointed by \a con
1444:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * enables the global access to registers by configuring reset and clock un-gating for selected dev
1445:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes global class, boundary , result resources by setting GLOBICLASS,GLOBBOUND,GLOBRCR re
1446:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the global analog and digital clock dividers by setting GLOBCFG register. Refer relat
1447:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * the configurations later in the program.
1448:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1449:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1450:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_ClockInit()<BR>
1451:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1452:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
1453:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1454:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1455:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1456:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1457:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1458:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1459:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1460:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1461:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module clock.\n\n Call this API before any further configuration of VADC. It se
1462:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * register to enable.
1463:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1464:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1465:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1466:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1467:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1468:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1469:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1470:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Enable:Wrong Module Pointer", (global_ptr == VADC))
1471:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_DISR_Msk);
1472:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1473:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1474:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1475:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1476:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1477:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1478:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1479:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1480:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1481:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module clock.\n\n After this API call, no conversion will occur. Call
1482:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModuleClock() to enable the VADC module later in the program.
1483:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1484:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1485:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1486:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1487:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1488:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1489:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1490:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Disable:Wrong Module Pointer", (global_ptr == VADC))
1491:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_DISR_Pos);
1492:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1493:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1494:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1495:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1496:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1497:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1498:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1499:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1500:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1501:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables VADC module to sleep if a sleep request comes.\n\n
1502:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * It resets the EDIS bit of CLC register for enabling the sleep mode.
1503:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1504:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1505:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableSleepMode().
1506:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1507:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1508:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1509:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1510:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_EDIS_Msk);
1511:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1512:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1513:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1514:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1515:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1516:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1517:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1518:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1519:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1520:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the sleep mode request for the VADC.\n\n
1521:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * With the sleep feature enabled, the module will respond to sleep
1522:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * requests by going into a low power mode. It resets the EDIS bit of CLC register for enabling the
1523:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1524:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1525:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableSleepMode().
1526:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1527:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1528:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1529:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1530:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_EDIS_Pos);
1531:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1532:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1533:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1534:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1535:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1536:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1537:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to the data structure containing clock configuration data
1538:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1539:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1540:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1541:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1542:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the VADC clock.<BR>\n
1543:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the clock configuration of the VADC module using the config structure pointed by \a conf
1544:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * The clock to the analog converter and to the request source arbiter is configured by setting the
1545:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1546:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1547:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1548:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1549:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1550:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClockInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_
1551:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1552:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClockInit:Wrong Module Pointer", (global_ptr == VADC))
1553:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1554:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Write the Clock configuration into the GLOBCFG register */
1555:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG = (uint32_t)(config->globcfg | (VADC_GLOBCFG_DIVWC_Msk));
1556:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1557:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1558:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1559:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1560:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1561:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1562:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Conversion class parameter structure
1563:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type configure the input call for either standard conversion or EMUX related convers
1564:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
1565:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range: [0x0, 0x1]
1566:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1567:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1568:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ADC conversion settings like sample time and resolution.<BR>\n
1569:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc global resource associated with \a config structure. It
1570:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
1571:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * the GLOBALICLASS register specified by \a set_num with the required settings.
1572:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1573:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1574:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1575:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1576:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1577:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1578:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1579:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
1580:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****                                     const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num);
1581:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1582:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1583:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1584:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC global module
1585:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to result configuration data structure
1586:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1587:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1588:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1589:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1590:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes global result register.<BR>\n
1591:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes Global Result Register with specified settings configured in the \a config structure
1592:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * results in configuration of GLOBRCR register. This helps in configuring the Data reduction mode,
1593:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * , wait for read mode on the GLOBRES register.
1594:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1595:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1596:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1597:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1598:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1599:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1600:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1601:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC
1602:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1603:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))
1604:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1605:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure GLOBRCR*/
1606:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBRCR = config->g_rcr;
1607:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1608:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1609:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1610:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1611:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1612:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1613:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1614:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1615:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1616:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of G
1617:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * enable the startup calibration feature. After turning it on, it loops until all active groups fi
1618:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call XMC_VADC_GLOBAL_Enable() and XMC_VADC_GLOBAL_ClockInit() before calling this API in sequenc
1619:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableStartupCalibration() can disable the calibration feature at runtime.
1620:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1621:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1622:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1623:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1624:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1625:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1626:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr);
1627:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1628:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1629:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1630:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1631:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr  Constant pointer to the VADC module.
1632:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1633:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1634:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1635:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1636:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of 
1637:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * disable the startup calibration feature. Calling the API XMC_VADC_GLOBAL_EnsableStartupCalibrati
1638:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * calibration feature at runtime.
1639:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1640:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1641:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1642:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1643:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1644:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableStartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
1645:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1646:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableStartupCalibration:Wrong Module Pointer", (global_ptr == VADC)
1647:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= ~((uint32_t)VADC_GLOBCFG_SUCAL_Msk);
1648:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1649:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1650:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1651:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1652:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1653:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1654:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be disabled. <BR>
1655:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1656:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1657:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1658:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1659:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1660:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the post calibration for a particular group specified as \a group_number.\n\n It config
1661:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to disable the post calibration feature. Call XMC_VADC_GLOBAL_Enable() and
1662:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit() before calling this API in sequence. Calling the API
1663:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnablePostCalibration() can enable back the calibration feature at runtime.
1664:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1665:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1666:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1667:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1668:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1669:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1670:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1671:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1672:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, ui
1673:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1674:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1675:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1676:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG |= (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_numbe
1677:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1678:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1679:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1680:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1681:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1682:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be enabled. <BR>
1683:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1684:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1685:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1686:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1687:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1688:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the post calibration for a particular group specified as \a group_number.\n\n It configu
1689:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to enable the post calibration feature. Calling the API XMC_VADC_GLOBAL_Disa
1690:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * can disable the calibration feature at runtime.
1691:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1692:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1693:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1694:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1695:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1696:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, uin
1697:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
1698:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1699:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1700:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= (~ (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_nu
1701:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
1702:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1703:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1704:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
1705:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1706:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1707:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1708:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>Range[0 - 4095]
1709:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>Range[0 - 4095]
1710:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1711:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1712:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1713:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1714:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
1715:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They define a range against which the result of a conversion can be compare
1716:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
1717:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
1718:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * GLOBBOUND1 who will derive their values from this palette.
1719:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1720:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1721:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1722:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1723:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1724:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t boundary0, c
1725:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1726:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1727:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1728:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1729:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
1730:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value  Boundary Value<BR>Range[0 - 4095]
1731:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1732:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1733:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1734:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1735:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs either the boundary 0 or boundary 1 for result comparison.\n\n This defines a range aga
1736:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
1737:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
1738:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1739:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1740:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1741:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1742:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1743:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
1744:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     const XMC_VADC_CHANNEL_BOUNDARY_t selection,
1745:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint16_t boundary_value);
1746:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1747:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1748:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_AVAILABLE== 1U)
1749:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1750:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1751:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module
1752:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param emuxif       The EMUX interface<BR>Range[0x0 - 0x1]
1753:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group        The VADC group which must be bound to the desired emux
1754:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1755:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1756:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1757:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1758:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds a VADC \a group to an EMUX interface specified in \a emuxif.<BR>\n
1759:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects which group's scan request source will control the EMUX interface (set of control select
1760:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * By passing \b group it would configure that group's scan request source to control the EMUX sele
1761:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \b emuxif.
1762:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1763:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1764:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1765:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1766:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
1767:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1768:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1769:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1770:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1771:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1772:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1773:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return uint32_t Complete global result register value GLOBRES
1774:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1775:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1776:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the complete result from the global result register associated with the \a global_ptr.
1777:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result register GLOBRES for the validity of the data. If the validity is assured, data is fi
1778:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * the global result register, cached locally next and subsequently returned to the caller.
1779:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1780:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * @note You can cast the return to a varible of type XMC_VADC_GLOBAL_DETAILED_RESULT_t to easily a
1781:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1782:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1783:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetResult()
1784:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1785:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GLOBAL_GetDetailedResult(XMC_VADC_GLOBAL_t *const global_ptr)
1786:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** {
  25              	 .loc 1 1786 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
1787:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetDetailedResult:Wrong Module Pointer", (global_ptr == VADC))
1788:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** 
1789:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h ****   return (global_ptr->GLOBRES);
  39              	 .loc 1 1789 0
  40 0008 7A68     	 ldr r2,[r7,#4]
  41 000a C023     	 mov r3,#192
  42 000c 9B00     	 lsl r3,r3,#2
  43 000e D358     	 ldr r3,[r2,r3]
1790:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_vadc.h **** }
  44              	 .loc 1 1790 0
  45 0010 181C     	 mov r0,r3
  46 0012 BD46     	 mov sp,r7
  47 0014 02B0     	 add sp,sp,#8
  48              	 
  49 0016 80BD     	 pop {r7,pc}
  50              	 .cfi_endproc
  51              	.LFE66:
  53              	 .section .text.ADC_MEASUREMENT_GetGlobalDetailedResult,"ax",%progbits
  54              	 .align 2
  55              	 .code 16
  56              	 .thumb_func
  58              	ADC_MEASUREMENT_GetGlobalDetailedResult:
  59              	.LFB92:
  60              	 .file 2 "C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT/adc_measurement.h"
   1:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
   2:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @file adc_measurement.h
   3:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @date 2021-01-08
   4:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
   5:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * NOTE:
   6:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
   8:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @cond
   9:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  **************************************************************************************************
  10:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * ADC_MEASUREMENT v4.1.24 - Incorporates analog to digital conversion for the required measurement
  11:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  12:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  13:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * All rights reserved.
  14:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  15:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * following conditions are met:
  17:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  18:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   disclaimer.
  20:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  21:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  24:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   products derived from this software without specific prior written permission.
  26:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  27:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  35:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  **************************************************************************************************
  38:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  39:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Change History
  40:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * --------------
  41:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  42:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2015-02-16:
  43:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Initial version for DAVEv4.<BR>
  44:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  45:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2015-02-19:
  46:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Added GetResult APIs for XMC1100 devices.
  47:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  48:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2015-05-14:
  49:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Optimized the Manifest.<BR>
  50:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Modified the structure ADC_MEASUREMENT_channel_t to ADC_MEASUREMENT_CHANNEL_t.<BR>
  51:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  52:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2015-06-26:
  53:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Added input class resource consumption.<BR>
  54:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  55:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   * 2015-07-09:
  56:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Documentation updated.<BR>
  57:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  58:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2015-07-31:
  59:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Updated the APP to support new devices.<BR>
  60:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  61:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2015-10-01:
  62:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Updated the APP to support the interrupt control in XMC14.<BR>
  63:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  64:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2015-10-08:
  65:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Added support for XMC4700/XMC4800 devices.<BR>
  66:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  67:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2015-10-20:
  68:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Documentation updated.<BR>
  69:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  70:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2015-12-03:
  71:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Added support for XMC4300 device.<BR>
  72:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  73:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2016-02-09:
  74:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Updated the APP for the minimum required ANALOG_IO APP version.<BR>
  75:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  76:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2016-03-18:
  77:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Maximum number of channels for XMC41/42 increased to 9.<BR>
  78:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Added Post calibration time for XMC1x series in Total conversion Time.<BR>
  79:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Fixed the ADC_MEASUREMENT_Init() for ANALOG_IO initialization.<BR>
  80:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - For XMC1100 series only: Deprecated the API ADC_MEASUREMENT_GetResult() and
  81:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *       ADC_MEASUREMENT_GetDetailedResult().<BR>
  82:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - For XMC1100 series only: Added new API ADC_MEASUREMENT_GetGlobalResult() and
  83:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *       ADC_MEASUREMENT_GetGlobalDetailedResult().<BR>
  84:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  85:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2016-08-18:
  86:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Minimum sample time at low frequencies changed to incorporate Errata ADC_AI.H006 and ADC_A
  87:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  88:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 2021-01-08:
  89:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     - Modified check for minimum XMCLib version
  90:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  91:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @endcond
  92:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
  93:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
  94:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
  95:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /*CODE_BLOCK_BEGIN*/
  96:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #ifndef ADC_MEASUREMENT_H
  97:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #define ADC_MEASUREMENT_H
  98:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
  99:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 100:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**************************************************************************************************
 101:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * HEADER FILES
 102:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  **************************************************************************************************
 103:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 104:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #include "GLOBAL_ADC/global_adc.h"
 105:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #include "adc_measurement_conf.h"
 106:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 107:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  /*************************************************************************************************
 108:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * MACROS
 109:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  **************************************************************************************************
 110:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #define ADC_MEASUREMENT_XMC_LIB_MAJOR_VERSION 2
 111:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #define ADC_MEASUREMENT_XMC_LIB_MINOR_VERSION 0
 112:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #define ADC_MEASUREMENT_XMC_LIB_PATCH_VERSION 0
 113:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 114:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #if !((XMC_LIB_MAJOR_VERSION > ADC_MEASUREMENT_XMC_LIB_MAJOR_VERSION) ||\
 115:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       ((XMC_LIB_MAJOR_VERSION == ADC_MEASUREMENT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION >
 116:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       ((XMC_LIB_MAJOR_VERSION == ADC_MEASUREMENT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION =
 117:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #error "ADC_MEASUREMENT requires XMC Peripheral Library v2.0.0 or higher"
 118:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 119:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 120:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #if defined (__GNUC__) || defined (__CC_ARM)
 121:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #define ADC_MEASUREMENT_DEPRECATED   __attribute__((deprecated))
 122:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #else
 123:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #define ADC_MEASUREMENT_DEPRECATED
 124:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 125:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 126:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #define ADC_MEASUREMENT_MODULE_PTR ((XMC_VADC_GLOBAL_t *) (void *) VADC)
 127:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 128:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  /*************************************************************************************************
 129:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * ENUMS
 130:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  **************************************************************************************************
 131:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 132:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @ingroup ADC_MEASUREMENT_enumerations
 133:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @{
 134:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 135:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**@brief Return value of an API  */
 136:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 137:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** typedef enum ADC_MEASUREMENT_STATUS
 138:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** {
 139:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   ADC_MEASUREMENT_STATUS_SUCCESS = 0, /**< APP is Initialized */
 140:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   ADC_MEASUREMENT_STATUS_FAILURE, /**< APP Initialization failed*/
 141:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   ADC_MEASUREMENT_STATUS_UNINITIALIZED /**<  APP has not been Initialized */
 142:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** } ADC_MEASUREMENT_STATUS_t;
 143:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 144:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @}
 145:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 146:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 147:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**************************************************************************************************
 148:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** * DATA STRUCTURES
 149:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** ***************************************************************************************************
 150:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 151:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @ingroup ADC_MEASUREMENT_datastructures
 152:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @{
 153:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 154:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 155:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** typedef void (*ADC_MEASUREMENT_MUX_CONFIG_t)(void); /**< Function pointer to the mux configuration*
 156:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 157:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 158:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *  Structure to initialize  Request Source Interrupt's NVIC Node
 159:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 160:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** typedef struct ADC_MEASUREMENT_ISR
 161:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** {
 162:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint32_t node_id; 		/**< This holds the Node ID of the NVIC.*/
 163:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 164:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint32_t priority; 		/**< This holds the NVIC priority.*/
 165:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #if(UC_FAMILY == XMC4)
 166:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint32_t sub_priority; 	/**< This holds the SubPriority of the NVIC. for Only XMC4x Devices*/
 167:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 168:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #ifdef ADC_MEASUREMENT_NON_DEFAULT_IRQ_SOURCE_SELECTED
 169:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint8_t irqctrl; 	     /**< This indicates the service request source selected for the consumed N
 170:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 171:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** } ADC_MEASUREMENT_ISR_t;
 172:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 173:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 174:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Structure to initialize ADC channels.
 175:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 176:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** typedef struct ADC_MEASUREMENT_CHANNEL
 177:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** {
 178:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #if( XMC_VADC_GROUP_AVAILABLE == 1U)
 179:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   XMC_VADC_CHANNEL_CONFIG_t *ch_handle; /**< This holds the VADC Channel LLD struct*/
 180:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 181:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   XMC_VADC_RESULT_CONFIG_t *res_handle; /**< This hold the VADC LLD Result handler*/
 182:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 183:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 184:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #if( XMC_VADC_GROUP_AVAILABLE == 1U)
 185:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   XMC_VADC_GROUP_t *group_handle; 		/**< This holds the group to which the channel belongs*/
 186:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 187:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 188:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #ifdef ADC_MEASUREMENT_ANALOG_IO_USED
 189:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   ANALOG_IO_t   *analog_io_config;    /**< This hold the address of the ANALOG_IO configuration str
 190:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 191:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 192:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint8_t group_index; 					/**< This holds the group index*/
 193:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 194:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint8_t ch_num; 						/**< This Holds the Channel Number*/
 195:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 196:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** } ADC_MEASUREMENT_CHANNEL_t;
 197:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 198:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 199:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Structure to hold channels handles that are configured
 200:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 201:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** typedef struct ADC_MEASUREMENT_CHANNEL_ARRAY
 202:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** {
 203:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   const ADC_MEASUREMENT_CHANNEL_t *const channel_array[ADC_MEASUREMENT_MAXCHANNELS]; /**< Array whi
 204:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****                                                                                         of APPs Cha
 205:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #if( XMC_VADC_GROUP_AVAILABLE == 0U)
 206:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   XMC_VADC_RESULT_CONFIG_t *res_handle; /**< This hold the VADC LLD Result handler*/
 207:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 208:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** } ADC_MEASUREMENT_CHANNEL_ARRAY_t;
 209:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 210:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 211:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Structure to configure ADC_MEASUREMENT APP.
 212:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 213:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** typedef struct ADC_MEASUREMENT
 214:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** {
 215:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   const ADC_MEASUREMENT_CHANNEL_ARRAY_t *const array; 		 /**< This holds ADC_MEASUREMENT_Channel_Ha
 216:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 217:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   const XMC_VADC_BACKGROUND_CONFIG_t *const backgnd_config_handle; /**< This holds the LLD Backgrou
 218:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****                                                                         Structure*/
 219:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 220:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   const XMC_VADC_GLOBAL_CLASS_t *const iclass_config_handle;  /**< This holds the adc global ICLASS
 221:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 222:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   GLOBAL_ADC_t *const global_handle; 						 /**< This hold the ADC Global APP handle*/
 223:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 224:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #if (UC_SERIES != XMC11)
 225:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   const ADC_MEASUREMENT_ISR_t *const req_src_intr_handle; 	 /**< This has the NVIC configuration st
 226:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #else
 227:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   const ADC_MEASUREMENT_ISR_t *const result_intr_handle; 	 /**< This has the NVIC configuration str
 228:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 229:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 230:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   ADC_MEASUREMENT_MUX_CONFIG_t mux_config; /**< This hold the pointer to the function that does mux
 231:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 232:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   ADC_MEASUREMENT_STATUS_t init_state; 	  /**< Holds information regarding the APP initialization *
 233:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 234:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   const XMC_VADC_SR_t srv_req_node; 	  /**< Service Request Line selected*/
 235:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 236:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   const bool start_conversion; 			  /**< This indicates whether to start at initialization of the A
 237:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** } ADC_MEASUREMENT_t;
 238:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 239:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 240:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @}
 241:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 242:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 243:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #ifdef __cplusplus
 244:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** extern "C" {
 245:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #endif
 246:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 247:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**************************************************************************************************
 248:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * API Prototypes
 249:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  **************************************************************************************************
 250:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 251:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @ingroup ADC_MEASUREMENT_apidoc
 252:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @{
 253:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 254:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 255:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 256:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @brief Get ADC_MEASUREMENT APP version
 257:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 258:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 259:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Description: </b><br>
 260:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * The function can be used to check application software compatibility with a
 261:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * specific version of the APP.
 262:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 263:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Example Usage:
 264:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 265:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @code
 266:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * #include "DAVE.h"
 267:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 268:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * int main(void) 
 269:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * {
 270:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   DAVE_STATUS_t init_status;
 271:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   DAVE_APP_VERSION_t version;
 272:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 273:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   // Initialize ADC_MEASUREMENT APP:
 274:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   // ADC_MEASUREMENT_Init() is called from within DAVE_Init().
 275:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   init_status = DAVE_Init();
 276:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 277:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   version = ADC_MEASUREMENT_GetAppVersion();
 278:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   if (version.major != 1U) {
 279:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *     // Probably, not the right version.
 280:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   }
 281:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 282:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   // More code here
 283:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   while(1) {
 284:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 285:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   }
 286:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *   return (0);
 287:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * }
 288:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @endcode
 289:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 290:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** DAVE_APP_VERSION_t ADC_MEASUREMENT_GetAppVersion(void);
 291:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 292:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 293:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @brief Initializes the APP to measure a set of analog inputs. <BR>
 294:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @param handle_ptr constant pointer to the APP handle structure<BR>
 295:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @return ADC_MEASUREMENT_STATUS_SUCCESS when initialization succeeds else, return ADC_MEASUREMENT
 296:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 297:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Description: </b><br>
 298:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Initializes the VADC background scan request source, group channels and result registers with th
 299:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * specified in the handle structure. The API configures the conversion timing parameters of VADC, 
 300:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * [GLOBICLASS] register. The API initializes the channel and result configurations by setting the 
 301:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * [GxRCRy] registers respectively. It adds all channels into the background request source channel
 302:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * [BRSSEL]. For microcontrollers apart from XMC1100, the APP uses background request source event 
 303:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * the interrupt. For XMC1100 devices, global result event is used to generate the interrupt. If "S
 304:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * initialization" has been selected in the GUI, the ADC conversions starts immediately at the end 
 305:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 306:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @code
 307:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * #include "DAVE.h"
 308:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * int main(void)
 309:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * {
 310:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *    DAVE_Init(); //ADC_MEASUREMENT_Init is called within DAVE_Init
 311:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *    return 0;
 312:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * }
 313:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  @endcode
 314:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */ 
 315:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** ADC_MEASUREMENT_STATUS_t ADC_MEASUREMENT_Init(ADC_MEASUREMENT_t *const handle_ptr);
 316:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 317:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 318:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @brief Starts the conversion of the required measurements. <BR>
 319:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @param handle_ptr Constant pointer to the APP handle structure<BR>
 320:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @return None <BR>
 321:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 322:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Description: </b><br>
 323:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *  If "Start conversion after initialization" option is not selected in the GUI, the conversions c
 324:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *  calling this API. A call to this API sets the register bit field BRSMR.LDEV to generate a load 
 325:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *  load event triggers the conversion of selected channels in a fixed sequence. A conversion reque
 326:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *  upon detection of a hardware trigger. Hence, if "Start conversion after initialization" option 
 327:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *  "Trigger edge Selection" is configured to any edge, this API call is not mandatory to start the
 328:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 329:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @code
 330:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   // Ensure that end of measurements interrupt has been enabled
 331:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #include "DAVE.h"
 332:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 333:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   XMC_VADC_RESULT_SIZE_t result;
 334:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   void Adc_Measurement_Handler()
 335:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 336:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #if(UC_SERIES != XMC11)
 337:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Channel_A);
 338:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #else
 339:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = ADC_MEASUREMENT_GetGlobalResult();
 340:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #endif
 341:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 342:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 343:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   int main(void)
 344:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 345:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     DAVE_Init();
 346:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     ADC_MEASUREMENT_StartConversion(&ADC_MEASUREMENT_0);
 347:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     while(1);
 348:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     return 0;
 349:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 350:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  @endcode
 351:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 352:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** void ADC_MEASUREMENT_StartConversion(ADC_MEASUREMENT_t *const handle_ptr);
 353:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 354:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 355:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 356:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @brief Returns the converted value for a specific channel. Not Applicable for XMC1100.<BR>
 357:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @param handle_ptr Constant pointer to the channel handle structure of type @ref ADC_MEASUREMENT_
 358:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *                   (Use the channel handle related macros which are defined in adc_measurement_co
 359:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @return XMC_VADC_RESULT_SIZE_t conversion result.<BR>
 360:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *                                Range: [ 0x0 to 0x3FF] if accumulation of results is switched off
 361:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 362:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Description: </b><br>
 363:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Reads the converted result stored in the result register [GxRESy.RESULT], assigned to the specif
 364:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * is only used in the microcotrollers where separate result registers are available for storing ea
 365:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * For these microcontrollers, each channel is configured to a particular group result register. Th
 366:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * is defined in the channel handle structure @ref ADC_MEASUREMENT_CHANNEL_t. Hence this API shall 
 367:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * pointer to the channel handle of type  @ref ADC_MEASUREMENT_CHANNEL_t (Directly use the channel 
 368:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * macros which are defined in adc_measurement_conf.h).
 369:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 370:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Note: </b><br>
 371:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * This API is not Applicable for XMC1100 microcontroller, because all the channels shares a common
 372:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * called GLOBRES. Use @ref ADC_MEASUREMENT_GetResult(ADC_MEASUREMENT_t *const handle_ptr) for XMC1
 373:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 374:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @code
 375:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   // Ensure that end of measurements interrupt has been enabled
 376:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #include "DAVE.h"
 377:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 378:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   XMC_VADC_RESULT_SIZE_t result;
 379:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   void Adc_Measurement_Handler()
 380:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 381:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #if(UC_SERIES != XMC11)
 382:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Channel_A);
 383:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #endif
 384:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 385:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 386:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   int main(void)
 387:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 388:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     DAVE_Init();
 389:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     ADC_MEASUREMENT_StartConversion(&ADC_MEASUREMENT_0);
 390:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     while(1);
 391:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     return 0;
 392:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 393:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  @endcode
 394:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 395:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** XMC_VADC_RESULT_SIZE_t ADC_MEASUREMENT_GetResult(ADC_MEASUREMENT_CHANNEL_t *const handle_ptr);
 396:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 397:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 398:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @brief Returns a detailed conversion result. Not Applicable for XMC1100. <BR>
 399:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @param handle_ptr constant pointer to the channel handle structure.
 400:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *                   (Use the channel handle related macros which are defined in adc_measurement_co
 401:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @return uint32_t The complete result register.<BR>
 402:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 403:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Description: </b><br>
 404:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Returns the 32 bit result register (GxRES[y]) completely. The result of conversion as well as ot
 405:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * returned from this API. The detailed result register contains result of the most recent conversi
 406:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * channel number requested the conversion, valid flag, converted request source and fast compare r
 407:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * mechanism the converted result can be read out after checking the valid flag bit. This API can b
 408:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * applications where, the channel number associated to the result register is also needed for veri
 409:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 410:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Note: </b><br>
 411:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * This API is not Applicable for XMC1100 microcontroller, because all the channels shares a common
 412:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * called GLOBRES. Use @ref ADC_MEASUREMENT_GetDetailedResult(ADC_MEASUREMENT_t *const handle_ptr) 
 413:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * microcontrollers.
 414:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 415:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @code
 416:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #include "DAVE.h"
 417:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 418:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   typedef struct detailed_result_struct
 419:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 420:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint8_t channel_num;
 421:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint8_t group_num;
 422:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint16_t conversion_result;
 423:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   } detailed_result_struct_t;
 424:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 425:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint32_t result;
 426:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   bool valid_result;
 427:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   detailed_result_struct_t detailed_result;
 428:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 429:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   void Adc_Measurement_Handler()
 430:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 431:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint32_t result;
 432:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     valid_result = (bool)false;
 433:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #if(UC_SERIES != XMC11)
 434:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = ADC_MEASUREMENT_GetDetailedResult(&ADC_MEASUREMENT_Channel_A);
 435:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     if((bool)(result >> VADC_G_RES_VF_Pos))
 436:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     {
 437:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       valid_result = (bool)true;
 438:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       detailed_result.channel_num = (result & VADC_G_RES_CHNR_Msk) >> VADC_G_RES_CHNR_Pos;
 439:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       detailed_result.group_num = ADC_MEASUREMENT_Channel_A.group_index;
 440:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       detailed_result.conversion_result = result & VADC_G_RES_RESULT_Msk;
 441:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     }
 442:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #endif
 443:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 444:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 445:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   int main(void)
 446:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 447:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     DAVE_Init();
 448:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     ADC_MEASUREMENT_StartConversion(&ADC_MEASUREMENT_0);
 449:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     while(1);
 450:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     return 0;
 451:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 452:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  @endcode
 453:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 454:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** uint32_t ADC_MEASUREMENT_GetDetailedResult(ADC_MEASUREMENT_CHANNEL_t *const handle_ptr);
 455:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 456:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** #else /* Applicable for XMC1100 devices*/
 457:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 458:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @brief Returns the converted value from the global result register. Only Applicable for XMC1100.
 459:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @param handle_ptr constant pointer to the APP handle structure.<BR>
 460:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @return XMC_VADC_RESULT_SIZE_t conversion result.<BR>
 461:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *                                Range: [ 0x0 to 0x3FF] if accumulation of results is switched off
 462:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 463:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Description: </b><br>
 464:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Reads the converted result stored in the common result register [GLOBRES], assigned to all the c
 465:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * is only used in the microcotrollers where group result registers are not available. Hence for th
 466:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * devices, all the conversion results are stored in the global result register in shared mode. The
 467:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * hardware option will be enabled for the global result register to avoid overwriting of results. 
 468:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * conversion result, it is mandatory to read the previous result using the same API or @ref
 469:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * ADC_MEASUREMENT_GetDetailedResult API.
 470:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 471:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Note: </b><br>
 472:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <ul>
 473:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <li>This API is only applicable for XMC1100 microcontroller, because all the channels shares a c
 474:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * called GLOBRES. Hence this API shall be called with a pointer to the measurement handle of type 
 475:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * ADC_MEASUREMENT_t.</li>
 476:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <li> For either 10Bit or 8Bit ADC resolution the result value needs to be right shifted by eithe
 477:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 4 bits respectively. The 10Bit or 8 bit results are left aligned in the result register, hence a
 478:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * operation is needed.</li>
 479:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * </ul>
 480:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 481:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @code
 482:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   // Ensure that end of measurements interrupt has been enabled
 483:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #include "DAVE.h"
 484:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 485:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   XMC_VADC_RESULT_SIZE_t result;
 486:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   void Adc_Measurement_Handler()
 487:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 488:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #if(UC_SERIES == XMC11)
 489:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_0);
 490:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #endif
 491:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = result >> ((uint32_t)ADC_MEASUREMENT_0.iclass_config_handle->conversion_mode_standard 
 492:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 493:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 494:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   int main(void)
 495:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 496:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     DAVE_Init();
 497:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     ADC_MEASUREMENT_StartConversion(&ADC_MEASUREMENT_0);
 498:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     while(1);
 499:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     return 0;
 500:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 501:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  @endcode
 502:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 503:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** XMC_VADC_RESULT_SIZE_t ADC_MEASUREMENT_GetResult(ADC_MEASUREMENT_t *const handle_ptr) ADC_MEASUREME
 504:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 505:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 506:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @brief Returns a detailed conversion result. Only Applicable for XMC1100. <BR>
 507:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @param handle_ptr constant pointer to the APP handle structure.<BR>
 508:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @return uint32_t The complete Result register.<BR>
 509:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 510:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Description: </b><br>
 511:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Returns the 32 bit result register (GLOBRES) completely. The result of conversion as well as oth
 512:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * returned from this API. The detailed result register contains result of the most recent conversi
 513:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * channel number requested the conversion, valid flag, converted request source and fast compare r
 514:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * mechanism the converted result can be read out after checking the valid flag bit. This API can b
 515:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * applications where, the channel number associated to the result register is also needed for veri
 516:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * This API is only used in the microcotrollers where group result registers are not available. Hen
 517:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * microntroller  devices, all the conversion results are stored in the global result register in s
 518:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * for read mode hardware option will be enabled for the global result register to avoid overwritin
 519:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * a new channel conversion result, it is mandatory to read the previous result using the same API 
 520:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * ADC_MEASUREMENT_GetResult API.
 521:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 522:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Note: </b><br>
 523:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <ul>
 524:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <li>This API is applicable only for XMC1100 microcontroller, because all the channels shares a c
 525:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * called GLOBRES. Use @ref ADC_MEASUREMENT_GetDetailedResult(ADC_MEASUREMENT_CHANNEL_t *const hand
 526:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * microcontrollers.</li>
 527:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <li> For either 10Bit or 8Bit ADC resolution the result value needs to be right shifted by eithe
 528:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 4 bits respectively. The 10Bit or 8 bit results are left aligned in the result register, hence a
 529:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * operation is needed.</li>
 530:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * </ul>
 531:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 532:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 533:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 534:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @code
 535:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #include "DAVE.h"
 536:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 537:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   typedef struct detailed_result_struct
 538:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 539:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint8_t channel_num;
 540:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint8_t group_num;
 541:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint16_t conversion_result;
 542:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   } detailed_result_struct_t;
 543:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 544:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint32_t result;
 545:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   bool valid_result;
 546:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   detailed_result_struct_t detailed_result[10];
 547:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 548:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   void Adc_Measurement_Handler()
 549:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 550:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     static uint8_t index;
 551:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint32_t result;
 552:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     valid_result = (bool)false;
 553:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #if(UC_SERIES == XMC11)
 554:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = ADC_MEASUREMENT_GetDetailedResult(&ADC_MEASUREMENT_0);
 555:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #endif
 556:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 557:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     if((bool)(result >> VADC_GLOBRES_VF_Pos))
 558:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     {
 559:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       valid_result = (bool)true;
 560:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       detailed_result[index].channel_num = (result & VADC_GLOBRES_CHNR_Msk) >> VADC_GLOBRES_CHNR_Po
 561:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       detailed_result[index].group_num = ADC_MEASUREMENT_Channel_A.group_index;
 562:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       detailed_result[index].conversion_result = (result & VADC_GLOBRES_RESULT_Msk) >>
 563:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****                             ((uint32_t)ADC_MEASUREMENT_0.iclass_config_handle->conversion_mode_stan
 564:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     }
 565:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     index++;
 566:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 567:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 568:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   int main(void)
 569:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 570:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     DAVE_Init();
 571:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     ADC_MEASUREMENT_StartConversion(&ADC_MEASUREMENT_0);
 572:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     while(1);
 573:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     return 0;
 574:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 575:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  @endcode
 576:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 577:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** uint32_t ADC_MEASUREMENT_GetDetailedResult(ADC_MEASUREMENT_t *const handle_ptr) ADC_MEASUREMENT_DEP
 578:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 579:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 580:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @brief Returns the converted value from the global result register. Only Applicable for XMC1100.
 581:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @param handle_ptr constant pointer to the APP handle structure.<BR>
 582:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @return XMC_VADC_RESULT_SIZE_t conversion result.<BR>
 583:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *                                Range: [ 0x0 to 0x3FF] if accumulation of results is switched off
 584:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 585:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Description: </b><br>
 586:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Reads the converted result stored in the common result register [GLOBRES], assigned to all the c
 587:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * is only used in the microcotrollers where group result registers are not available. Hence for th
 588:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * devices, all the conversion results are stored in the global result register in shared mode. The
 589:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * hardware option will be enabled for the global result register to avoid overwriting of results. 
 590:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * conversion result, it is mandatory to read the previous result using the same API or @ref
 591:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * ADC_MEASUREMENT_GetGlobalDetailedResult API.
 592:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 593:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Note: </b><br>
 594:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <ul>
 595:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <li>This API is only applicable for XMC1100 microcontroller, because all the channels shares a c
 596:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * called GLOBRES. Hence this API shall be called with a pointer to the measurement handle of type 
 597:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * ADC_MEASUREMENT_t.</li>
 598:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <li> For either 10Bit or 8Bit ADC resolution the result value needs to be right shifted by eithe
 599:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 4 bits respectively. The 10Bit or 8 bit results are left aligned in the result register, hence a
 600:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * operation is needed.</li>
 601:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * </ul>
 602:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 603:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @code
 604:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   // Ensure that end of measurements interrupt has been enabled
 605:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #include "DAVE.h"
 606:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 607:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   XMC_VADC_RESULT_SIZE_t result;
 608:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   void Adc_Measurement_Handler()
 609:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 610:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #if(UC_SERIES == XMC11)
 611:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = ADC_MEASUREMENT_GetGlobalResult();
 612:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #endif
 613:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = result >> ((uint32_t)ADC_MEASUREMENT_0.iclass_config_handle->conversion_mode_standard 
 614:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 615:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 616:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   int main(void)
 617:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 618:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     DAVE_Init();
 619:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     ADC_MEASUREMENT_StartConversion(&ADC_MEASUREMENT_0);
 620:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     while(1);
 621:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     return 0;
 622:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 623:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  @endcode
 624:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 625:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** __STATIC_INLINE XMC_VADC_RESULT_SIZE_t  ADC_MEASUREMENT_GetGlobalResult(void)
 626:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** {
 627:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   XMC_VADC_RESULT_SIZE_t result;
 628:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 629:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   result = XMC_VADC_GLOBAL_GetDetailedResult(ADC_MEASUREMENT_MODULE_PTR);
 630:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 631:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   return (result);
 632:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** }
 633:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 634:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** /**
 635:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @brief Returns a detailed conversion result. Only Applicable for XMC1100. <BR>
 636:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @param handle_ptr constant pointer to the APP handle structure.<BR>
 637:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @return uint32_t The complete Result register.<BR>
 638:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 639:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Description: </b><br>
 640:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * Returns the 32 bit result register (GLOBRES) completely. The result of conversion as well as oth
 641:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * returned from this API. The detailed result register contains result of the most recent conversi
 642:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * channel number requested the conversion, valid flag, converted request source and fast compare r
 643:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * mechanism the converted result can be read out after checking the valid flag bit. This API can b
 644:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * applications where, the channel number associated to the result register is also needed for veri
 645:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * This API is only used in the microcotrollers where group result registers are not available. Hen
 646:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * microntroller  devices, all the conversion results are stored in the global result register in s
 647:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * for read mode hardware option will be enabled for the global result register to avoid overwritin
 648:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * a new channel conversion result, it is mandatory to read the previous result using the same API 
 649:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * ADC_MEASUREMENT_GetResult API.
 650:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 651:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * \par<b>Note: </b><br>
 652:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <ul>
 653:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <li>This API is applicable only for XMC1100 microcontroller, because all the channels shares a c
 654:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * called GLOBRES. Use @ref ADC_MEASUREMENT_GetDetailedResult(ADC_MEASUREMENT_CHANNEL_t *const hand
 655:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * microcontrollers.</li>
 656:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * <li> For either 10Bit or 8Bit ADC resolution the result value needs to be right shifted by eithe
 657:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * 4 bits respectively. The 10Bit or 8 bit results are left aligned in the result register, hence a
 658:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * operation is needed.</li>
 659:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * </ul>
 660:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 661:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 662:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  *
 663:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  * @code
 664:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #include "DAVE.h"
 665:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 666:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   typedef struct detailed_result_struct
 667:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 668:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint8_t channel_num;
 669:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint8_t group_num;
 670:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint16_t conversion_result;
 671:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   } detailed_result_struct_t;
 672:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 673:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint32_t result;
 674:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   bool valid_result;
 675:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   detailed_result_struct_t detailed_result[10];
 676:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 677:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   void Adc_Measurement_Handler()
 678:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 679:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     static uint8_t index;
 680:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     uint32_t result;
 681:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     valid_result = (bool)false;
 682:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #if(UC_SERIES == XMC11)
 683:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     result = ADC_MEASUREMENT_GetGlobalDetailedResult();
 684:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   #endif
 685:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 686:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     if((bool)(result >> VADC_GLOBRES_VF_Pos))
 687:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     {
 688:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       valid_result = (bool)true;
 689:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       detailed_result[index].channel_num = (result & VADC_GLOBRES_CHNR_Msk) >> VADC_GLOBRES_CHNR_Po
 690:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       detailed_result[index].group_num = ADC_MEASUREMENT_Channel_A.group_index;
 691:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****       detailed_result[index].conversion_result = (result & VADC_GLOBRES_RESULT_Msk) >>
 692:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****                             ((uint32_t)ADC_MEASUREMENT_0.iclass_config_handle->conversion_mode_stan
 693:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     }
 694:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     index++;
 695:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 696:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 697:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   int main(void)
 698:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   {
 699:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     DAVE_Init();
 700:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     ADC_MEASUREMENT_StartConversion(&ADC_MEASUREMENT_0);
 701:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     while(1);
 702:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****     return 0;
 703:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   }
 704:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  @endcode
 705:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****  */
 706:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** __STATIC_INLINE uint32_t ADC_MEASUREMENT_GetGlobalDetailedResult(void)
 707:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** {
  61              	 .loc 2 707 0
  62              	 .cfi_startproc
  63 0000 80B5     	 push {r7,lr}
  64              	.LCFI3:
  65              	 .cfi_def_cfa_offset 8
  66              	 .cfi_offset 7,-8
  67              	 .cfi_offset 14,-4
  68 0002 82B0     	 sub sp,sp,#8
  69              	.LCFI4:
  70              	 .cfi_def_cfa_offset 16
  71 0004 00AF     	 add r7,sp,#0
  72              	.LCFI5:
  73              	 .cfi_def_cfa_register 7
 708:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   uint32_t result;
 709:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   result = XMC_VADC_GLOBAL_GetDetailedResult(ADC_MEASUREMENT_MODULE_PTR);
  74              	 .loc 2 709 0
  75 0006 054B     	 ldr r3,.L5
  76 0008 181C     	 mov r0,r3
  77 000a FFF7FEFF 	 bl XMC_VADC_GLOBAL_GetDetailedResult
  78 000e 031C     	 mov r3,r0
  79 0010 7B60     	 str r3,[r7,#4]
 710:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** 
 711:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h ****   return (result);
  80              	 .loc 2 711 0
  81 0012 7B68     	 ldr r3,[r7,#4]
 712:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT\adc_measurement.h **** }
  82              	 .loc 2 712 0
  83 0014 181C     	 mov r0,r3
  84 0016 BD46     	 mov sp,r7
  85 0018 02B0     	 add sp,sp,#8
  86              	 
  87 001a 80BD     	 pop {r7,pc}
  88              	.L6:
  89              	 .align 2
  90              	.L5:
  91 001c 00000348 	 .word 1208156160
  92              	 .cfi_endproc
  93              	.LFE92:
  95              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  96              	 .align 2
  97              	 .code 16
  98              	 .thumb_func
 100              	XMC_GPIO_SetOutputHigh:
 101              	.LFB95:
 102              	 .file 3 "C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** {
 103              	 .loc 3 262 0
 104              	 .cfi_startproc
 105 0000 80B5     	 push {r7,lr}
 106              	.LCFI6:
 107              	 .cfi_def_cfa_offset 8
 108              	 .cfi_offset 7,-8
 109              	 .cfi_offset 14,-4
 110 0002 82B0     	 sub sp,sp,#8
 111              	.LCFI7:
 112              	 .cfi_def_cfa_offset 16
 113 0004 00AF     	 add r7,sp,#0
 114              	.LCFI8:
 115              	 .cfi_def_cfa_register 7
 116 0006 7860     	 str r0,[r7,#4]
 117 0008 0A1C     	 mov r2,r1
 118 000a FB1C     	 add r3,r7,#3
 119 000c 1A70     	 strb r2,[r3]
 263:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 120              	 .loc 3 265 0
 121 000e FB1C     	 add r3,r7,#3
 122 0010 1B78     	 ldrb r3,[r3]
 123 0012 0122     	 mov r2,#1
 124 0014 9A40     	 lsl r2,r2,r3
 125 0016 7B68     	 ldr r3,[r7,#4]
 126 0018 5A60     	 str r2,[r3,#4]
 266:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** }
 127              	 .loc 3 266 0
 128 001a BD46     	 mov sp,r7
 129 001c 02B0     	 add sp,sp,#8
 130              	 
 131 001e 80BD     	 pop {r7,pc}
 132              	 .cfi_endproc
 133              	.LFE95:
 135              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 136              	 .align 2
 137              	 .code 16
 138              	 .thumb_func
 140              	XMC_GPIO_SetOutputLow:
 141              	.LFB96:
 267:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** {
 142              	 .loc 3 288 0
 143              	 .cfi_startproc
 144 0000 80B5     	 push {r7,lr}
 145              	.LCFI9:
 146              	 .cfi_def_cfa_offset 8
 147              	 .cfi_offset 7,-8
 148              	 .cfi_offset 14,-4
 149 0002 82B0     	 sub sp,sp,#8
 150              	.LCFI10:
 151              	 .cfi_def_cfa_offset 16
 152 0004 00AF     	 add r7,sp,#0
 153              	.LCFI11:
 154              	 .cfi_def_cfa_register 7
 155 0006 7860     	 str r0,[r7,#4]
 156 0008 0A1C     	 mov r2,r1
 157 000a FB1C     	 add r3,r7,#3
 158 000c 1A70     	 strb r2,[r3]
 289:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 159              	 .loc 3 291 0
 160 000e FB1C     	 add r3,r7,#3
 161 0010 1B78     	 ldrb r3,[r3]
 162 0012 8022     	 mov r2,#128
 163 0014 5202     	 lsl r2,r2,#9
 164 0016 9A40     	 lsl r2,r2,r3
 165 0018 7B68     	 ldr r3,[r7,#4]
 166 001a 5A60     	 str r2,[r3,#4]
 292:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** }
 167              	 .loc 3 292 0
 168 001c BD46     	 mov sp,r7
 169 001e 02B0     	 add sp,sp,#8
 170              	 
 171 0020 80BD     	 pop {r7,pc}
 172              	 .cfi_endproc
 173              	.LFE96:
 175 0022 C046     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
 176              	 .align 2
 177              	 .code 16
 178              	 .thumb_func
 180              	XMC_GPIO_GetInput:
 181              	.LFB98:
 293:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** {
 182              	 .loc 3 339 0
 183              	 .cfi_startproc
 184 0000 80B5     	 push {r7,lr}
 185              	.LCFI12:
 186              	 .cfi_def_cfa_offset 8
 187              	 .cfi_offset 7,-8
 188              	 .cfi_offset 14,-4
 189 0002 82B0     	 sub sp,sp,#8
 190              	.LCFI13:
 191              	 .cfi_def_cfa_offset 16
 192 0004 00AF     	 add r7,sp,#0
 193              	.LCFI14:
 194              	 .cfi_def_cfa_register 7
 195 0006 7860     	 str r0,[r7,#4]
 196 0008 0A1C     	 mov r2,r1
 197 000a FB1C     	 add r3,r7,#3
 198 000c 1A70     	 strb r2,[r3]
 340:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 199              	 .loc 3 342 0
 200 000e 7B68     	 ldr r3,[r7,#4]
 201 0010 5A6A     	 ldr r2,[r3,#36]
 202 0012 FB1C     	 add r3,r7,#3
 203 0014 1B78     	 ldrb r3,[r3]
 204 0016 DA40     	 lsr r2,r2,r3
 205 0018 131C     	 mov r3,r2
 206 001a 0122     	 mov r2,#1
 207 001c 1340     	 and r3,r2
 343:C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc\xmc_gpio.h **** }
 208              	 .loc 3 343 0
 209 001e 181C     	 mov r0,r3
 210 0020 BD46     	 mov sp,r7
 211 0022 02B0     	 add sp,sp,#8
 212              	 
 213 0024 80BD     	 pop {r7,pc}
 214              	 .cfi_endproc
 215              	.LFE98:
 217 0026 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 218              	 .align 2
 219              	 .code 16
 220              	 .thumb_func
 222              	DIGITAL_IO_SetOutputHigh:
 223              	.LFB103:
 224              	 .file 4 "C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 225              	 .loc 4 277 0
 226              	 .cfi_startproc
 227 0000 80B5     	 push {r7,lr}
 228              	.LCFI15:
 229              	 .cfi_def_cfa_offset 8
 230              	 .cfi_offset 7,-8
 231              	 .cfi_offset 14,-4
 232 0002 82B0     	 sub sp,sp,#8
 233              	.LCFI16:
 234              	 .cfi_def_cfa_offset 16
 235 0004 00AF     	 add r7,sp,#0
 236              	.LCFI17:
 237              	 .cfi_def_cfa_register 7
 238 0006 7860     	 str r0,[r7,#4]
 278:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 239              	 .loc 4 279 0
 240 0008 7B68     	 ldr r3,[r7,#4]
 241 000a 1A68     	 ldr r2,[r3]
 242 000c 7B68     	 ldr r3,[r7,#4]
 243 000e 1B7B     	 ldrb r3,[r3,#12]
 244 0010 101C     	 mov r0,r2
 245 0012 191C     	 mov r1,r3
 246 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 247              	 .loc 4 280 0
 248 0018 BD46     	 mov sp,r7
 249 001a 02B0     	 add sp,sp,#8
 250              	 
 251 001c 80BD     	 pop {r7,pc}
 252              	 .cfi_endproc
 253              	.LFE103:
 255 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 256              	 .align 2
 257              	 .code 16
 258              	 .thumb_func
 260              	DIGITAL_IO_SetOutputLow:
 261              	.LFB104:
 281:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 262              	 .loc 4 325 0
 263              	 .cfi_startproc
 264 0000 80B5     	 push {r7,lr}
 265              	.LCFI18:
 266              	 .cfi_def_cfa_offset 8
 267              	 .cfi_offset 7,-8
 268              	 .cfi_offset 14,-4
 269 0002 82B0     	 sub sp,sp,#8
 270              	.LCFI19:
 271              	 .cfi_def_cfa_offset 16
 272 0004 00AF     	 add r7,sp,#0
 273              	.LCFI20:
 274              	 .cfi_def_cfa_register 7
 275 0006 7860     	 str r0,[r7,#4]
 326:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 276              	 .loc 4 327 0
 277 0008 7B68     	 ldr r3,[r7,#4]
 278 000a 1A68     	 ldr r2,[r3]
 279 000c 7B68     	 ldr r3,[r7,#4]
 280 000e 1B7B     	 ldrb r3,[r3,#12]
 281 0010 101C     	 mov r0,r2
 282 0012 191C     	 mov r1,r3
 283 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 284              	 .loc 4 328 0
 285 0018 BD46     	 mov sp,r7
 286 001a 02B0     	 add sp,sp,#8
 287              	 
 288 001c 80BD     	 pop {r7,pc}
 289              	 .cfi_endproc
 290              	.LFE104:
 292 001e C046     	 .section .text.DIGITAL_IO_GetInput,"ax",%progbits
 293              	 .align 2
 294              	 .code 16
 295              	 .thumb_func
 297              	DIGITAL_IO_GetInput:
 298              	.LFB106:
 329:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 330:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 331:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 332:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 333:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 334:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 335:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 336:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 337:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 338:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 339:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 340:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 341:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 342:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 343:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 344:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 345:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 346:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 347:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 348:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 349:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 350:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 351:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 352:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 353:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 354:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 355:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 356:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 357:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 358:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 359:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 360:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 361:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 363:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 364:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 365:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 366:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 367:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 368:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 369:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 370:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 371:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 372:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 373:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 374:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 375:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 376:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 377:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 378:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 379:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 380:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 381:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 382:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 383:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 384:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to read input level of port pin.
 385:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 386:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return uint32_t input logic level. Range:0-1
 387:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 388:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 389:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 390:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 391:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 392:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  None
 393:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 394:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 395:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 396:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 397:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 398:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 399:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 400:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 401:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t pin_status;
 402:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_
 403:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 404:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 405:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 406:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 407:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 408:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 409:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 410:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 411:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 412:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 413:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 414:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 415:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 416:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 417:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     pin_status = DIGITAL_IO_GetInput(&DIGITAL_IO_0);
 418:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if(pin_status == 1)
 419:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 420:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 421:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 422:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     else
 423:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 424:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 425:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 426:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 427:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 428:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 429:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 430:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 431:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 432:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE uint32_t DIGITAL_IO_GetInput(const DIGITAL_IO_t *const handler)
 433:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 299              	 .loc 4 433 0
 300              	 .cfi_startproc
 301 0000 80B5     	 push {r7,lr}
 302              	.LCFI21:
 303              	 .cfi_def_cfa_offset 8
 304              	 .cfi_offset 7,-8
 305              	 .cfi_offset 14,-4
 306 0002 82B0     	 sub sp,sp,#8
 307              	.LCFI22:
 308              	 .cfi_def_cfa_offset 16
 309 0004 00AF     	 add r7,sp,#0
 310              	.LCFI23:
 311              	 .cfi_def_cfa_register 7
 312 0006 7860     	 str r0,[r7,#4]
 434:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_GetInput: handler null pointer", handler != NULL);
 435:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h ****   return XMC_GPIO_GetInput(handler->gpio_port, handler->gpio_pin);
 313              	 .loc 4 435 0
 314 0008 7B68     	 ldr r3,[r7,#4]
 315 000a 1A68     	 ldr r2,[r3]
 316 000c 7B68     	 ldr r3,[r7,#4]
 317 000e 1B7B     	 ldrb r3,[r3,#12]
 318 0010 101C     	 mov r0,r2
 319 0012 191C     	 mov r1,r3
 320 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 321 0018 031C     	 mov r3,r0
 436:C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 322              	 .loc 4 436 0
 323 001a 181C     	 mov r0,r3
 324 001c BD46     	 mov sp,r7
 325 001e 02B0     	 add sp,sp,#8
 326              	 
 327 0020 80BD     	 pop {r7,pc}
 328              	 .cfi_endproc
 329              	.LFE106:
 331              	 .global relay_threshold_latchtime
 332 0022 C046     	 .section .data.relay_threshold_latchtime,"aw",%progbits
 333              	 .align 1
 336              	relay_threshold_latchtime:
 337 0000 3200     	 .short 50
 338              	 .global ADC_upper_threshold
 339              	 .section .data.ADC_upper_threshold,"aw",%progbits
 340              	 .align 2
 343              	ADC_upper_threshold:
 344 0000 B80B0000 	 .word 3000
 345              	 .global ADC_lower_threshold
 346              	 .section .data.ADC_lower_threshold,"aw",%progbits
 347              	 .align 2
 350              	ADC_lower_threshold:
 351 0000 C4090000 	 .word 2500
 352              	 .comm USB_state,1,1
 353              	 .comm relay_state,1,1
 354              	 .comm setup_state,1,1
 355              	 .global led_relay_pattern
 356              	 .section .bss.led_relay_pattern,"aw",%nobits
 359              	led_relay_pattern:
 360 0000 00       	 .space 1
 361              	 .global led_relay_pattern_last
 362              	 .section .bss.led_relay_pattern_last,"aw",%nobits
 365              	led_relay_pattern_last:
 366 0000 00       	 .space 1
 367              	 .global led_number
 368              	 .section .bss.led_number,"aw",%nobits
 369              	 .align 1
 372              	led_number:
 373 0000 0000     	 .space 2
 374              	 .global buttonpress_usb
 375              	 .section .bss.buttonpress_usb,"aw",%nobits
 378              	buttonpress_usb:
 379 0000 00       	 .space 1
 380              	 .global buttonpress_up
 381              	 .section .bss.buttonpress_up,"aw",%nobits
 384              	buttonpress_up:
 385 0000 00       	 .space 1
 386              	 .global buttonpress_down
 387              	 .section .bss.buttonpress_down,"aw",%nobits
 390              	buttonpress_down:
 391 0000 00       	 .space 1
 392              	 .global button_usb_pressed_timestamp
 393              	 .section .bss.button_usb_pressed_timestamp,"aw",%nobits
 394              	 .align 2
 397              	button_usb_pressed_timestamp:
 398 0000 00000000 	 .space 4
 399              	 .global button_up_pressed_timestamp
 400              	 .section .bss.button_up_pressed_timestamp,"aw",%nobits
 401              	 .align 2
 404              	button_up_pressed_timestamp:
 405 0000 00000000 	 .space 4
 406              	 .global button_down_pressed_timestamp
 407              	 .section .bss.button_down_pressed_timestamp,"aw",%nobits
 408              	 .align 2
 411              	button_down_pressed_timestamp:
 412 0000 00000000 	 .space 4
 413              	 .global button_usb_pressed_duration
 414              	 .section .bss.button_usb_pressed_duration,"aw",%nobits
 415              	 .align 1
 418              	button_usb_pressed_duration:
 419 0000 0000     	 .space 2
 420              	 .global button_up_pressed_duration
 421              	 .section .bss.button_up_pressed_duration,"aw",%nobits
 422              	 .align 1
 425              	button_up_pressed_duration:
 426 0000 0000     	 .space 2
 427              	 .global button_down_pressed_duration
 428              	 .section .bss.button_down_pressed_duration,"aw",%nobits
 429              	 .align 1
 432              	button_down_pressed_duration:
 433 0000 0000     	 .space 2
 434              	 .global ADC_val_current
 435              	 .section .bss.ADC_val_current,"aw",%nobits
 436              	 .align 2
 439              	ADC_val_current:
 440 0000 00000000 	 .space 4
 441              	 .global ADC_val_upper_thres_exceed_timestamp
 442              	 .section .bss.ADC_val_upper_thres_exceed_timestamp,"aw",%nobits
 443              	 .align 2
 446              	ADC_val_upper_thres_exceed_timestamp:
 447 0000 00000000 	 .space 4
 448              	 .global ADC_val_lower_thres_exceed_timestamp
 449              	 .section .bss.ADC_val_lower_thres_exceed_timestamp,"aw",%nobits
 450              	 .align 2
 453              	ADC_val_lower_thres_exceed_timestamp:
 454 0000 00000000 	 .space 4
 455              	 .global button_usb_pressed_debug
 456              	 .section .bss.button_usb_pressed_debug,"aw",%nobits
 457              	 .align 2
 460              	button_usb_pressed_debug:
 461 0000 00000000 	 .space 4
 462              	 .global button_usb_pressed_long_debug
 463              	 .section .bss.button_usb_pressed_long_debug,"aw",%nobits
 464              	 .align 2
 467              	button_usb_pressed_long_debug:
 468 0000 00000000 	 .space 4
 469              	 .global systime_debug
 470              	 .section .bss.systime_debug,"aw",%nobits
 471              	 .align 2
 474              	systime_debug:
 475 0000 00000000 	 .space 4
 476              	 .section .text.delay_ms,"ax",%progbits
 477              	 .align 2
 478              	 .global delay_ms
 479              	 .code 16
 480              	 .thumb_func
 482              	delay_ms:
 483              	.LFB153:
 484              	 .file 5 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Mar 03 16:13:51
   5:../main.c     ****  *  Author: RNSANTELER
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** 
  11:../main.c     **** #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
  12:../main.c     **** 
  13:../main.c     **** 
  14:../main.c     **** 
  15:../main.c     **** // Constant settings (must be set hard-coded)
  16:../main.c     **** #define BTN_STD_PRESS_DURATION    50						// The minimum duration of a button press that will be re
  17:../main.c     **** #define BTN_LONG_PRESS_DURATION   1000						// The minimum duration of a long button press that wil
  18:../main.c     **** #define ADC_THRESHOLD_MAX         4095						// Maximum ADC value. Note: 1023 can be divided by 1, 3
  19:../main.c     **** #define ADC_THRESHOLD_INCREMENT   (ADC_THRESHOLD_MAX / 33)	// Value added/subtracted when adjusting
  20:../main.c     **** #define RELAY_LATCHTIME_MAX       60000						// Maximum configurable time that the threshold must b
  21:../main.c     **** #define RELAY_LATCHTIME_INCREMENT 500						// Value added/subtracted when adjusting time
  22:../main.c     **** #define LED_PULSE_SHORT 		  300						//
  23:../main.c     **** #define LED_PULSE_LONG	 		  1100						//
  24:../main.c     **** 
  25:../main.c     **** // Dynamic settings (can be changed by user)
  26:../main.c     **** uint16_t relay_threshold_latchtime = 50; // Time in ms that the threshold must stay exceeded in ord
  27:../main.c     **** int32_t ADC_upper_threshold = 3000;    // Upper threshold that the ADC value must be exceed to trig
  28:../main.c     **** int32_t ADC_lower_threshold = 2500;    // Upper threshold that the ADC value must be exceed to trig
  29:../main.c     **** 
  30:../main.c     **** 
  31:../main.c     **** // State machines
  32:../main.c     **** typedef enum {USB_1_active, USB_2_active, USB_inactive} USB_states;
  33:../main.c     **** typedef enum {RELAY_HIGH, RELAY_LOW} relay_states;
  34:../main.c     **** typedef enum {SETUP_IDLE, SETUP_UPPER_TH, SETUP_LOWER_TH, SETUP_TIME_TH} setup_states;
  35:../main.c     **** USB_states USB_state;
  36:../main.c     **** relay_states relay_state;
  37:../main.c     **** setup_states setup_state;
  38:../main.c     **** typedef enum {LED_OFF, LED_ON, LED_NUMBER} LED_patterns;
  39:../main.c     **** LED_patterns led_relay_pattern = LED_OFF;
  40:../main.c     **** LED_patterns led_relay_pattern_last = LED_OFF;
  41:../main.c     **** uint16_t led_number = 0;
  42:../main.c     **** //ToDo: implement led_relay_pattern and number. After setup return to current relay state.
  43:../main.c     **** 
  44:../main.c     **** // Buttons
  45:../main.c     **** typedef enum {BTNPRESS_NOT, BTNPRESS_STD, BTNPRESS_LONG} button_press_states;
  46:../main.c     **** button_press_states buttonpress_usb = BTNPRESS_NOT;
  47:../main.c     **** button_press_states buttonpress_up = BTNPRESS_NOT;
  48:../main.c     **** button_press_states buttonpress_down = BTNPRESS_NOT;
  49:../main.c     **** uint32_t button_usb_pressed_timestamp = 0; // If a button is pressed (or state = HIGH) the current 
  50:../main.c     **** uint32_t button_up_pressed_timestamp = 0;
  51:../main.c     **** uint32_t button_down_pressed_timestamp = 0;
  52:../main.c     **** uint16_t button_usb_pressed_duration = 0; // If a button is released (or state = LOW) duration is c
  53:../main.c     **** uint16_t button_up_pressed_duration = 0;
  54:../main.c     **** uint16_t button_down_pressed_duration = 0;
  55:../main.c     **** #define SW_ON 0
  56:../main.c     **** #define SW_OFF 1
  57:../main.c     **** 
  58:../main.c     **** // ADC
  59:../main.c     **** uint32_t ADC_val_current = 0;
  60:../main.c     **** uint32_t ADC_val_upper_thres_exceed_timestamp = 0; // If this is 0 the threshold is not exceeded. I
  61:../main.c     **** uint32_t ADC_val_lower_thres_exceed_timestamp = 0;
  62:../main.c     **** 
  63:../main.c     **** // Debug
  64:../main.c     **** int button_usb_pressed_debug = 0;
  65:../main.c     **** int button_usb_pressed_long_debug = 0;
  66:../main.c     **** int systime_debug = 0;
  67:../main.c     **** 
  68:../main.c     **** 
  69:../main.c     **** 
  70:../main.c     **** //****************************************************************************
  71:../main.c     **** // delay_ms - millisecond delay function
  72:../main.c     **** //****************************************************************************
  73:../main.c     **** void delay_ms(uint32_t ms){
 485              	 .loc 5 73 0
 486              	 .cfi_startproc
 487 0000 80B5     	 push {r7,lr}
 488              	.LCFI24:
 489              	 .cfi_def_cfa_offset 8
 490              	 .cfi_offset 7,-8
 491              	 .cfi_offset 14,-4
 492 0002 84B0     	 sub sp,sp,#16
 493              	.LCFI25:
 494              	 .cfi_def_cfa_offset 24
 495 0004 00AF     	 add r7,sp,#0
 496              	.LCFI26:
 497              	 .cfi_def_cfa_register 7
 498 0006 7860     	 str r0,[r7,#4]
  74:../main.c     **** 	uint32_t targetMicroSec = SYSTIMER_GetTime() + (ms*1000);
 499              	 .loc 5 74 0
 500 0008 FFF7FEFF 	 bl SYSTIMER_GetTime
 501 000c 011C     	 mov r1,r0
 502 000e 7B68     	 ldr r3,[r7,#4]
 503 0010 FA22     	 mov r2,#250
 504 0012 9200     	 lsl r2,r2,#2
 505 0014 5343     	 mul r3,r2
 506 0016 CB18     	 add r3,r1,r3
 507 0018 FB60     	 str r3,[r7,#12]
  75:../main.c     **** 	while(targetMicroSec > SYSTIMER_GetTime())
 508              	 .loc 5 75 0
 509 001a 00E0     	 b .L16
 510              	.L17:
  76:../main.c     **** 		__NOP(); // do nothing
 511              	 .loc 5 76 0
 512              	
 513 001c C046     	 nop
 514              	
 515              	 .code 16
 516              	.L16:
  75:../main.c     **** 	while(targetMicroSec > SYSTIMER_GetTime())
 517              	 .loc 5 75 0
 518 001e FFF7FEFF 	 bl SYSTIMER_GetTime
 519 0022 021E     	 sub r2,r0,#0
 520 0024 FB68     	 ldr r3,[r7,#12]
 521 0026 9A42     	 cmp r2,r3
 522 0028 F8D3     	 bcc .L17
  77:../main.c     **** }
 523              	 .loc 5 77 0
 524 002a BD46     	 mov sp,r7
 525 002c 04B0     	 add sp,sp,#16
 526              	 
 527 002e 80BD     	 pop {r7,pc}
 528              	 .cfi_endproc
 529              	.LFE153:
 531              	 .section .text.reset_relay_led,"ax",%progbits
 532              	 .align 2
 533              	 .global reset_relay_led
 534              	 .code 16
 535              	 .thumb_func
 537              	reset_relay_led:
 538              	.LFB154:
  78:../main.c     **** 
  79:../main.c     **** //****************************************************************************
  80:../main.c     **** // reset_relay_led - gets state of relay and sets relay led according
  81:../main.c     **** //****************************************************************************
  82:../main.c     **** void reset_relay_led(){
 539              	 .loc 5 82 0
 540              	 .cfi_startproc
 541 0000 80B5     	 push {r7,lr}
 542              	.LCFI27:
 543              	 .cfi_def_cfa_offset 8
 544              	 .cfi_offset 7,-8
 545              	 .cfi_offset 14,-4
 546 0002 82B0     	 sub sp,sp,#8
 547              	.LCFI28:
 548              	 .cfi_def_cfa_offset 16
 549 0004 00AF     	 add r7,sp,#0
 550              	.LCFI29:
 551              	 .cfi_def_cfa_register 7
  83:../main.c     **** 	uint32_t state = DIGITAL_IO_GetInput(&IO_RELAY);
 552              	 .loc 5 83 0
 553 0006 0D4B     	 ldr r3,.L21
 554 0008 181C     	 mov r0,r3
 555 000a FFF7FEFF 	 bl DIGITAL_IO_GetInput
 556 000e 031C     	 mov r3,r0
 557 0010 7B60     	 str r3,[r7,#4]
  84:../main.c     **** 	if(state == 0){
 558              	 .loc 5 84 0
 559 0012 7B68     	 ldr r3,[r7,#4]
 560 0014 002B     	 cmp r3,#0
 561 0016 07D1     	 bne .L19
  85:../main.c     **** 		led_relay_pattern = LED_OFF;
 562              	 .loc 5 85 0
 563 0018 094B     	 ldr r3,.L21+4
 564 001a 0022     	 mov r2,#0
 565 001c 1A70     	 strb r2,[r3]
  86:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
 566              	 .loc 5 86 0
 567 001e 094B     	 ldr r3,.L21+8
 568 0020 181C     	 mov r0,r3
 569 0022 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 570 0026 06E0     	 b .L18
 571              	.L19:
  87:../main.c     **** 	}
  88:../main.c     **** 	else{
  89:../main.c     **** 		led_relay_pattern = LED_ON;
 572              	 .loc 5 89 0
 573 0028 054B     	 ldr r3,.L21+4
 574 002a 0122     	 mov r2,#1
 575 002c 1A70     	 strb r2,[r3]
  90:../main.c     **** 		DIGITAL_IO_SetOutputLow(&IO_LED_RELAY);
 576              	 .loc 5 90 0
 577 002e 054B     	 ldr r3,.L21+8
 578 0030 181C     	 mov r0,r3
 579 0032 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 580              	.L18:
  91:../main.c     **** 	}
  92:../main.c     **** }
 581              	 .loc 5 92 0
 582 0036 BD46     	 mov sp,r7
 583 0038 02B0     	 add sp,sp,#8
 584              	 
 585 003a 80BD     	 pop {r7,pc}
 586              	.L22:
 587              	 .align 2
 588              	.L21:
 589 003c 00000000 	 .word IO_RELAY
 590 0040 00000000 	 .word led_relay_pattern
 591 0044 00000000 	 .word IO_LED_RELAY
 592              	 .cfi_endproc
 593              	.LFE154:
 595              	 .global __aeabi_uidiv
 596              	 .section .text.manage_status_led,"ax",%progbits
 597              	 .align 2
 598              	 .global manage_status_led
 599              	 .code 16
 600              	 .thumb_func
 602              	manage_status_led:
 603              	.LFB155:
  93:../main.c     **** 
  94:../main.c     **** //****************************************************************************
  95:../main.c     **** // manage_leds -
  96:../main.c     **** //****************************************************************************
  97:../main.c     **** 
  98:../main.c     **** void manage_status_led(){
 604              	 .loc 5 98 0
 605              	 .cfi_startproc
 606 0000 80B5     	 push {r7,lr}
 607              	.LCFI30:
 608              	 .cfi_def_cfa_offset 8
 609              	 .cfi_offset 7,-8
 610              	 .cfi_offset 14,-4
 611 0002 00AF     	 add r7,sp,#0
 612              	.LCFI31:
 613              	 .cfi_def_cfa_register 7
  99:../main.c     **** 	static uint16_t led_number_state;
 100:../main.c     **** 	static uint32_t led_number_state_timestamp;
 101:../main.c     **** 	static uint16_t led_number_state_length;
 102:../main.c     **** 
 103:../main.c     **** 	// Check target pattern an initiate
 104:../main.c     **** 	if(led_relay_pattern != led_relay_pattern_last){
 614              	 .loc 5 104 0
 615 0004 3F4B     	 ldr r3,.L36
 616 0006 1A78     	 ldrb r2,[r3]
 617 0008 3F4B     	 ldr r3,.L36+4
 618 000a 1B78     	 ldrb r3,[r3]
 619 000c 9A42     	 cmp r2,r3
 620 000e 2BD0     	 beq .L24
 105:../main.c     **** 		switch (led_relay_pattern){
 621              	 .loc 5 105 0
 622 0010 3C4B     	 ldr r3,.L36
 623 0012 1B78     	 ldrb r3,[r3]
 624 0014 012B     	 cmp r3,#1
 625 0016 08D0     	 beq .L26
 626 0018 022B     	 cmp r3,#2
 627 001a 0BD0     	 beq .L27
 628 001c 002B     	 cmp r3,#0
 629 001e 1FD1     	 bne .L25
 106:../main.c     **** 			case LED_OFF:
 107:../main.c     **** 				DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
 630              	 .loc 5 107 0
 631 0020 3A4B     	 ldr r3,.L36+8
 632 0022 181C     	 mov r0,r3
 633 0024 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 108:../main.c     **** 				break;
 634              	 .loc 5 108 0
 635 0028 1AE0     	 b .L25
 636              	.L26:
 109:../main.c     **** 			case LED_ON:
 110:../main.c     **** 				DIGITAL_IO_SetOutputLow(&IO_LED_RELAY);
 637              	 .loc 5 110 0
 638 002a 384B     	 ldr r3,.L36+8
 639 002c 181C     	 mov r0,r3
 640 002e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 111:../main.c     **** 				break;
 641              	 .loc 5 111 0
 642 0032 15E0     	 b .L25
 643              	.L27:
 112:../main.c     **** 			case LED_NUMBER:
 113:../main.c     **** 				if(led_number >= 1){
 644              	 .loc 5 113 0
 645 0034 364B     	 ldr r3,.L36+12
 646 0036 1B88     	 ldrh r3,[r3]
 647 0038 002B     	 cmp r3,#0
 648 003a 10D0     	 beq .L29
 114:../main.c     **** 					led_number_state_timestamp = SYSTIMER_GetTime();
 649              	 .loc 5 114 0
 650 003c FFF7FEFF 	 bl SYSTIMER_GetTime
 651 0040 021C     	 mov r2,r0
 652 0042 344B     	 ldr r3,.L36+16
 653 0044 1A60     	 str r2,[r3]
 115:../main.c     **** 					led_number_state_length = LED_PULSE_SHORT;
 654              	 .loc 5 115 0
 655 0046 344B     	 ldr r3,.L36+20
 656 0048 9622     	 mov r2,#150
 657 004a 5200     	 lsl r2,r2,#1
 658 004c 1A80     	 strh r2,[r3]
 116:../main.c     **** 					DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
 659              	 .loc 5 116 0
 660 004e 2F4B     	 ldr r3,.L36+8
 661 0050 181C     	 mov r0,r3
 662 0052 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 117:../main.c     **** 					led_number_state = 0;
 663              	 .loc 5 117 0
 664 0056 314B     	 ldr r3,.L36+24
 665 0058 0022     	 mov r2,#0
 666 005a 1A80     	 strh r2,[r3]
 118:../main.c     **** 				}
 119:../main.c     **** 				break;
 667              	 .loc 5 119 0
 668 005c FFE7     	 b .L35
 669              	.L29:
 670              	.L35:
 671 005e C046     	 mov r8,r8
 672              	.L25:
 120:../main.c     **** 		}
 121:../main.c     **** 		led_relay_pattern_last = led_relay_pattern;
 673              	 .loc 5 121 0
 674 0060 284B     	 ldr r3,.L36
 675 0062 1A78     	 ldrb r2,[r3]
 676 0064 284B     	 ldr r3,.L36+4
 677 0066 1A70     	 strb r2,[r3]
 678              	.L24:
 122:../main.c     **** 	}
 123:../main.c     **** 
 124:../main.c     **** 	// Handle LED_NUMBER pattern
 125:../main.c     **** 	if(led_relay_pattern == LED_NUMBER){
 679              	 .loc 5 125 0
 680 0068 264B     	 ldr r3,.L36
 681 006a 1B78     	 ldrb r3,[r3]
 682 006c 022B     	 cmp r3,#2
 683 006e 46D1     	 bne .L23
 126:../main.c     **** 		if((SYSTIMER_GetTime() - led_number_state_timestamp) / 1000 >= led_number_state_length){
 684              	 .loc 5 126 0
 685 0070 FFF7FEFF 	 bl SYSTIMER_GetTime
 686 0074 021C     	 mov r2,r0
 687 0076 274B     	 ldr r3,.L36+16
 688 0078 1B68     	 ldr r3,[r3]
 689 007a D31A     	 sub r3,r2,r3
 690 007c 181C     	 mov r0,r3
 691 007e FA23     	 mov r3,#250
 692 0080 9900     	 lsl r1,r3,#2
 693 0082 FFF7FEFF 	 bl __aeabi_uidiv
 694 0086 031C     	 mov r3,r0
 695 0088 1A1C     	 mov r2,r3
 696 008a 234B     	 ldr r3,.L36+20
 697 008c 1B88     	 ldrh r3,[r3]
 698 008e 9A42     	 cmp r2,r3
 699 0090 35D3     	 bcc .L23
 127:../main.c     **** 			// Next state
 128:../main.c     **** 			led_number_state++;
 700              	 .loc 5 128 0
 701 0092 224B     	 ldr r3,.L36+24
 702 0094 1B88     	 ldrh r3,[r3]
 703 0096 0133     	 add r3,r3,#1
 704 0098 9AB2     	 uxth r2,r3
 705 009a 204B     	 ldr r3,.L36+24
 706 009c 1A80     	 strh r2,[r3]
 129:../main.c     **** 
 130:../main.c     **** 			// Check if LED must be powered on or off for this state
 131:../main.c     **** 			if(led_number_state % 2)
 707              	 .loc 5 131 0
 708 009e 1F4B     	 ldr r3,.L36+24
 709 00a0 1B88     	 ldrh r3,[r3]
 710 00a2 0122     	 mov r2,#1
 711 00a4 1340     	 and r3,r2
 712 00a6 9BB2     	 uxth r3,r3
 713 00a8 002B     	 cmp r3,#0
 714 00aa 04D0     	 beq .L31
 132:../main.c     **** 				DIGITAL_IO_SetOutputLow(&IO_LED_RELAY);
 715              	 .loc 5 132 0
 716 00ac 174B     	 ldr r3,.L36+8
 717 00ae 181C     	 mov r0,r3
 718 00b0 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 719 00b4 03E0     	 b .L32
 720              	.L31:
 133:../main.c     **** 			else
 134:../main.c     **** 				DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
 721              	 .loc 5 134 0
 722 00b6 154B     	 ldr r3,.L36+8
 723 00b8 181C     	 mov r0,r3
 724 00ba FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 725              	.L32:
 135:../main.c     **** 
 136:../main.c     **** 			// Detect last low phase and make it longer
 137:../main.c     **** 			if(led_number_state == (led_number*2))
 726              	 .loc 5 137 0
 727 00be 174B     	 ldr r3,.L36+24
 728 00c0 1B88     	 ldrh r3,[r3]
 729 00c2 1A1C     	 mov r2,r3
 730 00c4 124B     	 ldr r3,.L36+12
 731 00c6 1B88     	 ldrh r3,[r3]
 732 00c8 5B00     	 lsl r3,r3,#1
 733 00ca 9A42     	 cmp r2,r3
 734 00cc 03D1     	 bne .L33
 138:../main.c     **** 				led_number_state_length = LED_PULSE_LONG;
 735              	 .loc 5 138 0
 736 00ce 124B     	 ldr r3,.L36+20
 737 00d0 134A     	 ldr r2,.L36+28
 738 00d2 1A80     	 strh r2,[r3]
 739 00d4 03E0     	 b .L34
 740              	.L33:
 139:../main.c     **** 			else
 140:../main.c     **** 				led_number_state_length = LED_PULSE_SHORT;
 741              	 .loc 5 140 0
 742 00d6 104B     	 ldr r3,.L36+20
 743 00d8 9622     	 mov r2,#150
 744 00da 5200     	 lsl r2,r2,#1
 745 00dc 1A80     	 strh r2,[r3]
 746              	.L34:
 141:../main.c     **** 
 142:../main.c     **** 			// Store current time
 143:../main.c     **** 			led_number_state_timestamp = SYSTIMER_GetTime();
 747              	 .loc 5 143 0
 748 00de FFF7FEFF 	 bl SYSTIMER_GetTime
 749 00e2 021C     	 mov r2,r0
 750 00e4 0B4B     	 ldr r3,.L36+16
 751 00e6 1A60     	 str r2,[r3]
 144:../main.c     **** 
 145:../main.c     **** 			// Check if LED pattern is finished
 146:../main.c     **** 			if(led_number_state > led_number*2){
 752              	 .loc 5 146 0
 753 00e8 0C4B     	 ldr r3,.L36+24
 754 00ea 1B88     	 ldrh r3,[r3]
 755 00ec 1A1C     	 mov r2,r3
 756 00ee 084B     	 ldr r3,.L36+12
 757 00f0 1B88     	 ldrh r3,[r3]
 758 00f2 5B00     	 lsl r3,r3,#1
 759 00f4 9A42     	 cmp r2,r3
 760 00f6 02DD     	 ble .L23
 147:../main.c     **** 				//led_relay_pattern = LED_OFF;
 148:../main.c     **** 				led_number_state = 1;
 761              	 .loc 5 148 0
 762 00f8 084B     	 ldr r3,.L36+24
 763 00fa 0122     	 mov r2,#1
 764 00fc 1A80     	 strh r2,[r3]
 765              	.L23:
 149:../main.c     **** 			}
 150:../main.c     **** 		}
 151:../main.c     **** 	}
 152:../main.c     **** }
 766              	 .loc 5 152 0
 767 00fe BD46     	 mov sp,r7
 768              	 
 769 0100 80BD     	 pop {r7,pc}
 770              	.L37:
 771 0102 C046     	 .align 2
 772              	.L36:
 773 0104 00000000 	 .word led_relay_pattern
 774 0108 00000000 	 .word led_relay_pattern_last
 775 010c 00000000 	 .word IO_LED_RELAY
 776 0110 00000000 	 .word led_number
 777 0114 00000000 	 .word led_number_state_timestamp.6884
 778 0118 00000000 	 .word led_number_state_length.6885
 779 011c 00000000 	 .word led_number_state.6883
 780 0120 4C040000 	 .word 1100
 781              	 .cfi_endproc
 782              	.LFE155:
 784              	 .section .text.main,"ax",%progbits
 785              	 .align 2
 786              	 .global main
 787              	 .code 16
 788              	 .thumb_func
 790              	main:
 791              	.LFB156:
 153:../main.c     **** 
 154:../main.c     **** //****************************************************************************
 155:../main.c     **** // main - primary loop function
 156:../main.c     **** //****************************************************************************
 157:../main.c     **** int main(void)
 158:../main.c     **** {
 792              	 .loc 5 158 0
 793              	 .cfi_startproc
 794 0000 90B5     	 push {r4,r7,lr}
 795              	.LCFI32:
 796              	 .cfi_def_cfa_offset 12
 797              	 .cfi_offset 4,-12
 798              	 .cfi_offset 7,-8
 799              	 .cfi_offset 14,-4
 800 0002 85B0     	 sub sp,sp,#20
 801              	.LCFI33:
 802              	 .cfi_def_cfa_offset 32
 803 0004 00AF     	 add r7,sp,#0
 804              	.LCFI34:
 805              	 .cfi_def_cfa_register 7
 159:../main.c     **** 	// Initialization of DAVE APPs
 160:../main.c     **** 	DAVE_STATUS_t status;
 161:../main.c     **** 	status = DAVE_Init();
 806              	 .loc 5 161 0
 807 0006 0B23     	 mov r3,#11
 808 0008 FC18     	 add r4,r7,r3
 809 000a FFF7FEFF 	 bl DAVE_Init
 810 000e 031C     	 mov r3,r0
 811 0010 2370     	 strb r3,[r4]
 162:../main.c     **** 
 163:../main.c     **** 	// Error routine
 164:../main.c     **** 	if (status != DAVE_STATUS_SUCCESS) {
 812              	 .loc 5 164 0
 813 0012 0B23     	 mov r3,#11
 814 0014 FB18     	 add r3,r7,r3
 815 0016 1B78     	 ldrb r3,[r3]
 816 0018 002B     	 cmp r3,#0
 817 001a 00D0     	 beq .L39
 818              	.L40:
 165:../main.c     **** 		while(1U){
 166:../main.c     **** 		}
 819              	 .loc 5 166 0 discriminator 1
 820 001c FEE7     	 b .L40
 821              	.L39:
 167:../main.c     **** 	}
 168:../main.c     **** 
 169:../main.c     **** 	/// - Set initial state -
 170:../main.c     **** 	// Enable USB chip and switch to USB1
 171:../main.c     **** 	DIGITAL_IO_SetOutputLow(&IO_USB_SI);
 822              	 .loc 5 171 0
 823 001e CC4B     	 ldr r3,.L94
 824 0020 181C     	 mov r0,r3
 825 0022 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 172:../main.c     **** 	DIGITAL_IO_SetOutputLow(&IO_USB_OE);
 826              	 .loc 5 172 0
 827 0026 CB4B     	 ldr r3,.L94+4
 828 0028 181C     	 mov r0,r3
 829 002a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 173:../main.c     **** 	// Enable USB1
 174:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&IO_USBPWR_1);
 830              	 .loc 5 174 0
 831 002e CA4B     	 ldr r3,.L94+8
 832 0030 181C     	 mov r0,r3
 833 0032 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 175:../main.c     **** 	DIGITAL_IO_SetOutputLow(&IO_LED_USB1);
 834              	 .loc 5 175 0
 835 0036 C94B     	 ldr r3,.L94+12
 836 0038 181C     	 mov r0,r3
 837 003a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 176:../main.c     **** 	// Disable USB2
 177:../main.c     **** 	DIGITAL_IO_SetOutputLow(&IO_USBPWR_2);
 838              	 .loc 5 177 0
 839 003e C84B     	 ldr r3,.L94+16
 840 0040 181C     	 mov r0,r3
 841 0042 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 178:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&IO_LED_USB2);
 842              	 .loc 5 178 0
 843 0046 C74B     	 ldr r3,.L94+20
 844 0048 181C     	 mov r0,r3
 845 004a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 179:../main.c     **** 	// Disable Relay and set LED off
 180:../main.c     **** 	DIGITAL_IO_SetOutputLow(&IO_RELAY);
 846              	 .loc 5 180 0
 847 004e C64B     	 ldr r3,.L94+24
 848 0050 181C     	 mov r0,r3
 849 0052 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 181:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
 850              	 .loc 5 181 0
 851 0056 C54B     	 ldr r3,.L94+28
 852 0058 181C     	 mov r0,r3
 853 005a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 182:../main.c     **** 	// Init next value conversion
 183:../main.c     **** 	ADC_MEASUREMENT_StartConversion(&ADC_SENSOR);
 854              	 .loc 5 183 0
 855 005e C44B     	 ldr r3,.L94+32
 856 0060 181C     	 mov r0,r3
 857 0062 FFF7FEFF 	 bl ADC_MEASUREMENT_StartConversion
 184:../main.c     **** 
 185:../main.c     **** 	int main_loop_count = 0;
 858              	 .loc 5 185 0
 859 0066 0023     	 mov r3,#0
 860 0068 FB60     	 str r3,[r7,#12]
 861              	.L90:
 186:../main.c     **** 
 187:../main.c     **** 	// Main loop
 188:../main.c     **** 	while(1U)
 189:../main.c     **** 	{
 190:../main.c     **** 		// - Status LED handling -
 191:../main.c     **** 		manage_status_led();
 862              	 .loc 5 191 0
 863 006a FFF7FEFF 	 bl manage_status_led
 192:../main.c     **** 		main_loop_count++;
 864              	 .loc 5 192 0
 865 006e FB68     	 ldr r3,[r7,#12]
 866 0070 0133     	 add r3,r3,#1
 867 0072 FB60     	 str r3,[r7,#12]
 193:../main.c     **** 		systime_debug = SYSTIMER_GetTime();
 868              	 .loc 5 193 0
 869 0074 FFF7FEFF 	 bl SYSTIMER_GetTime
 870 0078 031C     	 mov r3,r0
 871 007a 1A1C     	 mov r2,r3
 872 007c BD4B     	 ldr r3,.L94+36
 873 007e 1A60     	 str r2,[r3]
 194:../main.c     **** 
 195:../main.c     **** 		/// - Button handling -
 196:../main.c     **** 		// Detect press and save current system time
 197:../main.c     **** 		if(button_usb_pressed_timestamp == 0 && DIGITAL_IO_GetInput(&IO_SW_USB) == SW_ON)
 874              	 .loc 5 197 0
 875 0080 BD4B     	 ldr r3,.L94+40
 876 0082 1B68     	 ldr r3,[r3]
 877 0084 002B     	 cmp r3,#0
 878 0086 0AD1     	 bne .L41
 879              	 .loc 5 197 0 is_stmt 0 discriminator 1
 880 0088 BC4B     	 ldr r3,.L94+44
 881 008a 181C     	 mov r0,r3
 882 008c FFF7FEFF 	 bl DIGITAL_IO_GetInput
 883 0090 031E     	 sub r3,r0,#0
 884 0092 04D1     	 bne .L41
 198:../main.c     **** 			button_usb_pressed_timestamp = SYSTIMER_GetTime();
 885              	 .loc 5 198 0 is_stmt 1
 886 0094 FFF7FEFF 	 bl SYSTIMER_GetTime
 887 0098 021C     	 mov r2,r0
 888 009a B74B     	 ldr r3,.L94+40
 889 009c 1A60     	 str r2,[r3]
 890              	.L41:
 199:../main.c     **** 		if(button_up_pressed_timestamp == 0 && DIGITAL_IO_GetInput(&IO_SW_UP) == SW_ON)
 891              	 .loc 5 199 0
 892 009e B84B     	 ldr r3,.L94+48
 893 00a0 1B68     	 ldr r3,[r3]
 894 00a2 002B     	 cmp r3,#0
 895 00a4 0AD1     	 bne .L42
 896              	 .loc 5 199 0 is_stmt 0 discriminator 1
 897 00a6 B74B     	 ldr r3,.L94+52
 898 00a8 181C     	 mov r0,r3
 899 00aa FFF7FEFF 	 bl DIGITAL_IO_GetInput
 900 00ae 031E     	 sub r3,r0,#0
 901 00b0 04D1     	 bne .L42
 200:../main.c     **** 			button_up_pressed_timestamp = SYSTIMER_GetTime();
 902              	 .loc 5 200 0 is_stmt 1
 903 00b2 FFF7FEFF 	 bl SYSTIMER_GetTime
 904 00b6 021C     	 mov r2,r0
 905 00b8 B14B     	 ldr r3,.L94+48
 906 00ba 1A60     	 str r2,[r3]
 907              	.L42:
 201:../main.c     **** 		if(button_down_pressed_timestamp == 0 && DIGITAL_IO_GetInput(&IO_SW_DOWN) == SW_ON)
 908              	 .loc 5 201 0
 909 00bc B24B     	 ldr r3,.L94+56
 910 00be 1B68     	 ldr r3,[r3]
 911 00c0 002B     	 cmp r3,#0
 912 00c2 0AD1     	 bne .L43
 913              	 .loc 5 201 0 is_stmt 0 discriminator 1
 914 00c4 B14B     	 ldr r3,.L94+60
 915 00c6 181C     	 mov r0,r3
 916 00c8 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 917 00cc 031E     	 sub r3,r0,#0
 918 00ce 04D1     	 bne .L43
 202:../main.c     **** 			button_down_pressed_timestamp = SYSTIMER_GetTime();
 919              	 .loc 5 202 0 is_stmt 1
 920 00d0 FFF7FEFF 	 bl SYSTIMER_GetTime
 921 00d4 021C     	 mov r2,r0
 922 00d6 AC4B     	 ldr r3,.L94+56
 923 00d8 1A60     	 str r2,[r3]
 924              	.L43:
 203:../main.c     **** 		// If a press in ongoing and release is detected, calculate time difference
 204:../main.c     **** 		if(button_usb_pressed_timestamp != 0 && DIGITAL_IO_GetInput(&IO_SW_USB) == SW_OFF){
 925              	 .loc 5 204 0
 926 00da A74B     	 ldr r3,.L94+40
 927 00dc 1B68     	 ldr r3,[r3]
 928 00de 002B     	 cmp r3,#0
 929 00e0 28D0     	 beq .L44
 930              	 .loc 5 204 0 is_stmt 0 discriminator 1
 931 00e2 A64B     	 ldr r3,.L94+44
 932 00e4 181C     	 mov r0,r3
 933 00e6 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 934 00ea 031E     	 sub r3,r0,#0
 935 00ec 012B     	 cmp r3,#1
 936 00ee 21D1     	 bne .L44
 205:../main.c     **** 			button_usb_pressed_duration = (SYSTIMER_GetTime() - button_usb_pressed_timestamp) / 1000; // con
 937              	 .loc 5 205 0 is_stmt 1
 938 00f0 FFF7FEFF 	 bl SYSTIMER_GetTime
 939 00f4 021C     	 mov r2,r0
 940 00f6 A04B     	 ldr r3,.L94+40
 941 00f8 1B68     	 ldr r3,[r3]
 942 00fa D31A     	 sub r3,r2,r3
 943 00fc 181C     	 mov r0,r3
 944 00fe FA23     	 mov r3,#250
 945 0100 9900     	 lsl r1,r3,#2
 946 0102 FFF7FEFF 	 bl __aeabi_uidiv
 947 0106 031C     	 mov r3,r0
 948 0108 9AB2     	 uxth r2,r3
 949 010a A14B     	 ldr r3,.L94+64
 950 010c 1A80     	 strh r2,[r3]
 206:../main.c     **** 			button_usb_pressed_timestamp = 0;
 951              	 .loc 5 206 0
 952 010e 9A4B     	 ldr r3,.L94+40
 953 0110 0022     	 mov r2,#0
 954 0112 1A60     	 str r2,[r3]
 207:../main.c     **** 			// Interpret button press and activate "button pressed" marker
 208:../main.c     **** 			if(button_usb_pressed_duration >= BTN_LONG_PRESS_DURATION)
 955              	 .loc 5 208 0
 956 0114 9E4B     	 ldr r3,.L94+64
 957 0116 1B88     	 ldrh r3,[r3]
 958 0118 9E4A     	 ldr r2,.L94+68
 959 011a 9342     	 cmp r3,r2
 960 011c 03D9     	 bls .L45
 209:../main.c     **** 				buttonpress_usb = BTNPRESS_LONG;
 961              	 .loc 5 209 0
 962 011e 9E4B     	 ldr r3,.L94+72
 963 0120 0222     	 mov r2,#2
 964 0122 1A70     	 strb r2,[r3]
 965 0124 06E0     	 b .L44
 966              	.L45:
 210:../main.c     **** 			else if(button_usb_pressed_duration >= BTN_STD_PRESS_DURATION)
 967              	 .loc 5 210 0
 968 0126 9A4B     	 ldr r3,.L94+64
 969 0128 1B88     	 ldrh r3,[r3]
 970 012a 312B     	 cmp r3,#49
 971 012c 02D9     	 bls .L44
 211:../main.c     **** 				buttonpress_usb = BTNPRESS_STD;
 972              	 .loc 5 211 0
 973 012e 9A4B     	 ldr r3,.L94+72
 974 0130 0122     	 mov r2,#1
 975 0132 1A70     	 strb r2,[r3]
 976              	.L44:
 212:../main.c     **** 
 213:../main.c     **** 
 214:../main.c     **** 		}
 215:../main.c     **** 		if(button_up_pressed_timestamp != 0 && DIGITAL_IO_GetInput(&IO_SW_UP) == SW_OFF){
 977              	 .loc 5 215 0
 978 0134 924B     	 ldr r3,.L94+48
 979 0136 1B68     	 ldr r3,[r3]
 980 0138 002B     	 cmp r3,#0
 981 013a 32D0     	 beq .L46
 982              	 .loc 5 215 0 is_stmt 0 discriminator 1
 983 013c 914B     	 ldr r3,.L94+52
 984 013e 181C     	 mov r0,r3
 985 0140 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 986 0144 031E     	 sub r3,r0,#0
 987 0146 012B     	 cmp r3,#1
 988 0148 2BD1     	 bne .L46
 216:../main.c     **** 			button_up_pressed_duration = (SYSTIMER_GetTime() - button_up_pressed_timestamp) / 1000; // conve
 989              	 .loc 5 216 0 is_stmt 1
 990 014a FFF7FEFF 	 bl SYSTIMER_GetTime
 991 014e 021C     	 mov r2,r0
 992 0150 8B4B     	 ldr r3,.L94+48
 993 0152 1B68     	 ldr r3,[r3]
 994 0154 D31A     	 sub r3,r2,r3
 995 0156 181C     	 mov r0,r3
 996 0158 FA23     	 mov r3,#250
 997 015a 9900     	 lsl r1,r3,#2
 998 015c FFF7FEFF 	 bl __aeabi_uidiv
 999 0160 031C     	 mov r3,r0
 1000 0162 9AB2     	 uxth r2,r3
 1001 0164 8D4B     	 ldr r3,.L94+76
 1002 0166 1A80     	 strh r2,[r3]
 217:../main.c     **** 			button_up_pressed_timestamp = 0;
 1003              	 .loc 5 217 0
 1004 0168 854B     	 ldr r3,.L94+48
 1005 016a 0022     	 mov r2,#0
 1006 016c 1A60     	 str r2,[r3]
 218:../main.c     **** 			// Interpret button press and activate "button pressed" marker
 219:../main.c     **** 			if(button_up_pressed_duration >= BTN_LONG_PRESS_DURATION){
 1007              	 .loc 5 219 0
 1008 016e 8B4B     	 ldr r3,.L94+76
 1009 0170 1B88     	 ldrh r3,[r3]
 1010 0172 884A     	 ldr r2,.L94+68
 1011 0174 9342     	 cmp r3,r2
 1012 0176 08D9     	 bls .L47
 220:../main.c     **** 				buttonpress_up = BTNPRESS_LONG;
 1013              	 .loc 5 220 0
 1014 0178 894B     	 ldr r3,.L94+80
 1015 017a 0222     	 mov r2,#2
 1016 017c 1A70     	 strb r2,[r3]
 221:../main.c     **** 				button_usb_pressed_long_debug++;
 1017              	 .loc 5 221 0
 1018 017e 894B     	 ldr r3,.L94+84
 1019 0180 1B68     	 ldr r3,[r3]
 1020 0182 5A1C     	 add r2,r3,#1
 1021 0184 874B     	 ldr r3,.L94+84
 1022 0186 1A60     	 str r2,[r3]
 1023 0188 0BE0     	 b .L46
 1024              	.L47:
 222:../main.c     **** 			}
 223:../main.c     **** 			else if(button_up_pressed_duration >= BTN_STD_PRESS_DURATION){
 1025              	 .loc 5 223 0
 1026 018a 844B     	 ldr r3,.L94+76
 1027 018c 1B88     	 ldrh r3,[r3]
 1028 018e 312B     	 cmp r3,#49
 1029 0190 07D9     	 bls .L46
 224:../main.c     **** 				buttonpress_up = BTNPRESS_STD;
 1030              	 .loc 5 224 0
 1031 0192 834B     	 ldr r3,.L94+80
 1032 0194 0122     	 mov r2,#1
 1033 0196 1A70     	 strb r2,[r3]
 225:../main.c     **** 				button_usb_pressed_debug++;
 1034              	 .loc 5 225 0
 1035 0198 834B     	 ldr r3,.L94+88
 1036 019a 1B68     	 ldr r3,[r3]
 1037 019c 5A1C     	 add r2,r3,#1
 1038 019e 824B     	 ldr r3,.L94+88
 1039 01a0 1A60     	 str r2,[r3]
 1040              	.L46:
 226:../main.c     **** 			}
 227:../main.c     **** 
 228:../main.c     **** 		}
 229:../main.c     **** 		if(button_down_pressed_timestamp != 0 && DIGITAL_IO_GetInput(&IO_SW_DOWN) == SW_OFF){
 1041              	 .loc 5 229 0
 1042 01a2 794B     	 ldr r3,.L94+56
 1043 01a4 1B68     	 ldr r3,[r3]
 1044 01a6 002B     	 cmp r3,#0
 1045 01a8 28D0     	 beq .L48
 1046              	 .loc 5 229 0 is_stmt 0 discriminator 1
 1047 01aa 784B     	 ldr r3,.L94+60
 1048 01ac 181C     	 mov r0,r3
 1049 01ae FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1050 01b2 031E     	 sub r3,r0,#0
 1051 01b4 012B     	 cmp r3,#1
 1052 01b6 21D1     	 bne .L48
 230:../main.c     **** 			button_down_pressed_duration = (SYSTIMER_GetTime() - button_down_pressed_timestamp) / 1000; // c
 1053              	 .loc 5 230 0 is_stmt 1
 1054 01b8 FFF7FEFF 	 bl SYSTIMER_GetTime
 1055 01bc 021C     	 mov r2,r0
 1056 01be 724B     	 ldr r3,.L94+56
 1057 01c0 1B68     	 ldr r3,[r3]
 1058 01c2 D31A     	 sub r3,r2,r3
 1059 01c4 181C     	 mov r0,r3
 1060 01c6 FA23     	 mov r3,#250
 1061 01c8 9900     	 lsl r1,r3,#2
 1062 01ca FFF7FEFF 	 bl __aeabi_uidiv
 1063 01ce 031C     	 mov r3,r0
 1064 01d0 9AB2     	 uxth r2,r3
 1065 01d2 764B     	 ldr r3,.L94+92
 1066 01d4 1A80     	 strh r2,[r3]
 231:../main.c     **** 			button_down_pressed_timestamp = 0;
 1067              	 .loc 5 231 0
 1068 01d6 6C4B     	 ldr r3,.L94+56
 1069 01d8 0022     	 mov r2,#0
 1070 01da 1A60     	 str r2,[r3]
 232:../main.c     **** 			// Interpret button press and activate "button pressed" marker. The code that is reacting to it 
 233:../main.c     **** 			if(button_down_pressed_duration >= BTN_LONG_PRESS_DURATION)
 1071              	 .loc 5 233 0
 1072 01dc 734B     	 ldr r3,.L94+92
 1073 01de 1B88     	 ldrh r3,[r3]
 1074 01e0 6C4A     	 ldr r2,.L94+68
 1075 01e2 9342     	 cmp r3,r2
 1076 01e4 03D9     	 bls .L49
 234:../main.c     **** 				buttonpress_down = BTNPRESS_LONG;
 1077              	 .loc 5 234 0
 1078 01e6 724B     	 ldr r3,.L94+96
 1079 01e8 0222     	 mov r2,#2
 1080 01ea 1A70     	 strb r2,[r3]
 1081 01ec 06E0     	 b .L48
 1082              	.L49:
 235:../main.c     **** 			else if(button_down_pressed_duration >= BTN_STD_PRESS_DURATION)
 1083              	 .loc 5 235 0
 1084 01ee 6F4B     	 ldr r3,.L94+92
 1085 01f0 1B88     	 ldrh r3,[r3]
 1086 01f2 312B     	 cmp r3,#49
 1087 01f4 02D9     	 bls .L48
 236:../main.c     **** 				buttonpress_down = BTNPRESS_STD;
 1088              	 .loc 5 236 0
 1089 01f6 6E4B     	 ldr r3,.L94+96
 1090 01f8 0122     	 mov r2,#1
 1091 01fa 1A70     	 strb r2,[r3]
 1092              	.L48:
 237:../main.c     **** 		}
 238:../main.c     **** 
 239:../main.c     **** 		/// - USB Channel handling -
 240:../main.c     **** 		switch (USB_state){
 1093              	 .loc 5 240 0
 1094 01fc 6D4B     	 ldr r3,.L94+100
 1095 01fe 1B78     	 ldrb r3,[r3]
 1096 0200 012B     	 cmp r3,#1
 1097 0202 23D0     	 beq .L51
 1098 0204 022B     	 cmp r3,#2
 1099 0206 41D0     	 beq .L91
 1100 0208 002B     	 cmp r3,#0
 1101 020a 40D1     	 bne .L50
 241:../main.c     **** 			case USB_1_active:
 242:../main.c     **** 				// State code - none atm
 243:../main.c     **** 
 244:../main.c     **** 				// Transition statement
 245:../main.c     **** 				if(buttonpress_usb == BTNPRESS_STD){
 1102              	 .loc 5 245 0
 1103 020c 624B     	 ldr r3,.L94+72
 1104 020e 1B78     	 ldrb r3,[r3]
 1105 0210 012B     	 cmp r3,#1
 1106 0212 1AD1     	 bne .L54
 246:../main.c     **** 					DIGITAL_IO_SetOutputLow(&IO_USBPWR_1);
 1107              	 .loc 5 246 0
 1108 0214 504B     	 ldr r3,.L94+8
 1109 0216 181C     	 mov r0,r3
 1110 0218 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 247:../main.c     **** 					DIGITAL_IO_SetOutputHigh(&IO_USB_SI);
 1111              	 .loc 5 247 0
 1112 021c 4C4B     	 ldr r3,.L94
 1113 021e 181C     	 mov r0,r3
 1114 0220 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 248:../main.c     **** 					DIGITAL_IO_SetOutputLow(&IO_LED_USB2);
 1115              	 .loc 5 248 0
 1116 0224 4F4B     	 ldr r3,.L94+20
 1117 0226 181C     	 mov r0,r3
 1118 0228 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 249:../main.c     **** 					DIGITAL_IO_SetOutputHigh(&IO_LED_USB1);
 1119              	 .loc 5 249 0
 1120 022c 4B4B     	 ldr r3,.L94+12
 1121 022e 181C     	 mov r0,r3
 1122 0230 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 250:../main.c     **** 					DIGITAL_IO_SetOutputHigh(&IO_USBPWR_2);
 1123              	 .loc 5 250 0
 1124 0234 4A4B     	 ldr r3,.L94+16
 1125 0236 181C     	 mov r0,r3
 1126 0238 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 251:../main.c     **** 					buttonpress_usb = BTNPRESS_NOT;
 1127              	 .loc 5 251 0
 1128 023c 564B     	 ldr r3,.L94+72
 1129 023e 0022     	 mov r2,#0
 1130 0240 1A70     	 strb r2,[r3]
 252:../main.c     **** 
 253:../main.c     **** 					USB_state = USB_2_active;
 1131              	 .loc 5 253 0
 1132 0242 5C4B     	 ldr r3,.L94+100
 1133 0244 0122     	 mov r2,#1
 1134 0246 1A70     	 strb r2,[r3]
 254:../main.c     **** 				}
 255:../main.c     **** 				break;
 1135              	 .loc 5 255 0
 1136 0248 21E0     	 b .L50
 1137              	.L54:
 1138 024a 20E0     	 b .L50
 1139              	.L51:
 256:../main.c     **** 			case USB_2_active:
 257:../main.c     **** 				// State code - none atm
 258:../main.c     **** 
 259:../main.c     **** 				// Transition statement
 260:../main.c     **** 				if(buttonpress_usb == BTNPRESS_STD){
 1140              	 .loc 5 260 0
 1141 024c 524B     	 ldr r3,.L94+72
 1142 024e 1B78     	 ldrb r3,[r3]
 1143 0250 012B     	 cmp r3,#1
 1144 0252 1AD1     	 bne .L55
 261:../main.c     **** 					DIGITAL_IO_SetOutputLow(&IO_USBPWR_2);
 1145              	 .loc 5 261 0
 1146 0254 424B     	 ldr r3,.L94+16
 1147 0256 181C     	 mov r0,r3
 1148 0258 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 262:../main.c     **** 					DIGITAL_IO_SetOutputLow(&IO_USB_SI);
 1149              	 .loc 5 262 0
 1150 025c 3C4B     	 ldr r3,.L94
 1151 025e 181C     	 mov r0,r3
 1152 0260 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 263:../main.c     **** 					DIGITAL_IO_SetOutputLow(&IO_LED_USB1);
 1153              	 .loc 5 263 0
 1154 0264 3D4B     	 ldr r3,.L94+12
 1155 0266 181C     	 mov r0,r3
 1156 0268 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 264:../main.c     **** 					DIGITAL_IO_SetOutputHigh(&IO_LED_USB2);
 1157              	 .loc 5 264 0
 1158 026c 3D4B     	 ldr r3,.L94+20
 1159 026e 181C     	 mov r0,r3
 1160 0270 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 265:../main.c     **** 					DIGITAL_IO_SetOutputHigh(&IO_USBPWR_1);
 1161              	 .loc 5 265 0
 1162 0274 384B     	 ldr r3,.L94+8
 1163 0276 181C     	 mov r0,r3
 1164 0278 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 266:../main.c     **** 					buttonpress_usb = BTNPRESS_NOT;
 1165              	 .loc 5 266 0
 1166 027c 464B     	 ldr r3,.L94+72
 1167 027e 0022     	 mov r2,#0
 1168 0280 1A70     	 strb r2,[r3]
 267:../main.c     **** 
 268:../main.c     **** 					USB_state = USB_1_active;
 1169              	 .loc 5 268 0
 1170 0282 4C4B     	 ldr r3,.L94+100
 1171 0284 0022     	 mov r2,#0
 1172 0286 1A70     	 strb r2,[r3]
 269:../main.c     **** 				}
 270:../main.c     **** 				break;
 1173              	 .loc 5 270 0
 1174 0288 01E0     	 b .L50
 1175              	.L55:
 1176 028a 00E0     	 b .L50
 1177              	.L91:
 271:../main.c     **** 			case USB_inactive:
 272:../main.c     **** 				// Currently not implemented!
 273:../main.c     **** 				break;
 1178              	 .loc 5 273 0
 1179 028c C046     	 mov r8,r8
 1180              	.L50:
 274:../main.c     **** 		}
 275:../main.c     **** 		/// - Relay handling -
 276:../main.c     **** 		// Get ADC value
 277:../main.c     **** 		//ADC_val_current = ADC_MEASUREMENT_GetDetailedResult(&ADC_SENSOR);
 278:../main.c     **** 
 279:../main.c     **** 		// Check for state change triggers based on current state
 280:../main.c     **** 		switch (relay_state){
 1181              	 .loc 5 280 0
 1182 028e 4A4B     	 ldr r3,.L94+104
 1183 0290 1B78     	 ldrb r3,[r3]
 1184 0292 002B     	 cmp r3,#0
 1185 0294 4AD0     	 beq .L57
 1186 0296 012B     	 cmp r3,#1
 1187 0298 00D0     	 beq .LCB909
 1188 029a D0E0     	 b .L56
 1189              	.LCB909:
 281:../main.c     **** 			case RELAY_LOW:
 282:../main.c     **** 				// State code
 283:../main.c     **** 				// Check if upper threshold is exceeded. If it is and timestamp is not already set - save times
 284:../main.c     **** 				if     (ADC_val_upper_thres_exceed_timestamp == 0 && ADC_val_current > ADC_upper_threshold){
 1190              	 .loc 5 284 0
 1191 029c 474B     	 ldr r3,.L94+108
 1192 029e 1B68     	 ldr r3,[r3]
 1193 02a0 002B     	 cmp r3,#0
 1194 02a2 0CD1     	 bne .L59
 1195              	 .loc 5 284 0 is_stmt 0 discriminator 1
 1196 02a4 464B     	 ldr r3,.L94+112
 1197 02a6 1B68     	 ldr r3,[r3]
 1198 02a8 1A1E     	 sub r2,r3,#0
 1199 02aa 464B     	 ldr r3,.L94+116
 1200 02ac 1B68     	 ldr r3,[r3]
 1201 02ae 9A42     	 cmp r2,r3
 1202 02b0 05D2     	 bcs .L59
 285:../main.c     **** 					ADC_val_upper_thres_exceed_timestamp = SYSTIMER_GetTime();
 1203              	 .loc 5 285 0 is_stmt 1
 1204 02b2 FFF7FEFF 	 bl SYSTIMER_GetTime
 1205 02b6 021C     	 mov r2,r0
 1206 02b8 404B     	 ldr r3,.L94+108
 1207 02ba 1A60     	 str r2,[r3]
 1208 02bc 0DE0     	 b .L60
 1209              	.L59:
 286:../main.c     **** 				}
 287:../main.c     **** 				else if(ADC_val_upper_thres_exceed_timestamp != 0 && ADC_val_current < ADC_upper_threshold){
 1210              	 .loc 5 287 0
 1211 02be 3F4B     	 ldr r3,.L94+108
 1212 02c0 1B68     	 ldr r3,[r3]
 1213 02c2 002B     	 cmp r3,#0
 1214 02c4 09D0     	 beq .L60
 1215              	 .loc 5 287 0 is_stmt 0 discriminator 1
 1216 02c6 3E4B     	 ldr r3,.L94+112
 1217 02c8 1B68     	 ldr r3,[r3]
 1218 02ca 1A1E     	 sub r2,r3,#0
 1219 02cc 3D4B     	 ldr r3,.L94+116
 1220 02ce 1B68     	 ldr r3,[r3]
 1221 02d0 9A42     	 cmp r2,r3
 1222 02d2 02D9     	 bls .L60
 288:../main.c     **** 					ADC_val_upper_thres_exceed_timestamp = 0;
 1223              	 .loc 5 288 0 is_stmt 1
 1224 02d4 394B     	 ldr r3,.L94+108
 1225 02d6 0022     	 mov r2,#0
 1226 02d8 1A60     	 str r2,[r3]
 1227              	.L60:
 289:../main.c     **** 				}
 290:../main.c     **** 
 291:../main.c     **** 				// Transition statement
 292:../main.c     **** 				// Check if threshold are exceeded long enough to trigger a switch
 293:../main.c     **** 				if(ADC_val_upper_thres_exceed_timestamp != 0){
 1228              	 .loc 5 293 0
 1229 02da 384B     	 ldr r3,.L94+108
 1230 02dc 1B68     	 ldr r3,[r3]
 1231 02de 002B     	 cmp r3,#0
 1232 02e0 23D0     	 beq .L61
 1233              	.LBB2:
 294:../main.c     **** 					uint16_t upperThresholdExceedDuration = (SYSTIMER_GetTime() - ADC_val_upper_thres_exceed_times
 1234              	 .loc 5 294 0
 1235 02e2 FFF7FEFF 	 bl SYSTIMER_GetTime
 1236 02e6 021C     	 mov r2,r0
 1237 02e8 344B     	 ldr r3,.L94+108
 1238 02ea 1B68     	 ldr r3,[r3]
 1239 02ec D31A     	 sub r3,r2,r3
 1240 02ee 181C     	 mov r0,r3
 1241 02f0 FA23     	 mov r3,#250
 1242 02f2 9900     	 lsl r1,r3,#2
 1243 02f4 FFF7FEFF 	 bl __aeabi_uidiv
 1244 02f8 031C     	 mov r3,r0
 1245 02fa 1A1C     	 mov r2,r3
 1246 02fc 0823     	 mov r3,#8
 1247 02fe FB18     	 add r3,r7,r3
 1248 0300 1A80     	 strh r2,[r3]
 295:../main.c     **** 					if(upperThresholdExceedDuration > relay_threshold_latchtime){
 1249              	 .loc 5 295 0
 1250 0302 314B     	 ldr r3,.L94+120
 1251 0304 1B88     	 ldrh r3,[r3]
 1252 0306 0822     	 mov r2,#8
 1253 0308 BA18     	 add r2,r7,r2
 1254 030a 1288     	 ldrh r2,[r2]
 1255 030c 9A42     	 cmp r2,r3
 1256 030e 0CD9     	 bls .L61
 296:../main.c     **** 						relay_state = RELAY_HIGH;
 1257              	 .loc 5 296 0
 1258 0310 294B     	 ldr r3,.L94+104
 1259 0312 0022     	 mov r2,#0
 1260 0314 1A70     	 strb r2,[r3]
 297:../main.c     **** 						DIGITAL_IO_SetOutputHigh(&IO_RELAY);
 1261              	 .loc 5 297 0
 1262 0316 144B     	 ldr r3,.L94+24
 1263 0318 181C     	 mov r0,r3
 1264 031a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 298:../main.c     **** 						reset_relay_led();
 1265              	 .loc 5 298 0
 1266 031e FFF7FEFF 	 bl reset_relay_led
 299:../main.c     **** 						ADC_val_upper_thres_exceed_timestamp = 0;
 1267              	 .loc 5 299 0
 1268 0322 264B     	 ldr r3,.L94+108
 1269 0324 0022     	 mov r2,#0
 1270 0326 1A60     	 str r2,[r3]
 1271              	.LBE2:
 300:../main.c     **** 					}
 301:../main.c     **** 				}
 302:../main.c     **** 				break;
 1272              	 .loc 5 302 0
 1273 0328 89E0     	 b .L56
 1274              	.L61:
 1275 032a 88E0     	 b .L56
 1276              	.L57:
 303:../main.c     **** 			case RELAY_HIGH:
 304:../main.c     **** 				// State code
 305:../main.c     **** 				// Check if lower threshold is exceeded. If it is and timestamp is not already set - save times
 306:../main.c     **** 				if(ADC_val_lower_thres_exceed_timestamp == 0 && ADC_val_current < ADC_lower_threshold){
 1277              	 .loc 5 306 0
 1278 032c 274B     	 ldr r3,.L94+124
 1279 032e 1B68     	 ldr r3,[r3]
 1280 0330 002B     	 cmp r3,#0
 1281 0332 4FD1     	 bne .L62
 1282              	 .loc 5 306 0 is_stmt 0 discriminator 1
 1283 0334 264B     	 ldr r3,.L94+128
 1284 0336 1B68     	 ldr r3,[r3]
 1285 0338 1A1E     	 sub r2,r3,#0
 1286 033a 224B     	 ldr r3,.L94+116
 1287 033c 1B68     	 ldr r3,[r3]
 1288 033e 9A42     	 cmp r2,r3
 1289 0340 48D9     	 bls .L62
 307:../main.c     **** 					ADC_val_lower_thres_exceed_timestamp = SYSTIMER_GetTime();
 1290              	 .loc 5 307 0 is_stmt 1
 1291 0342 FFF7FEFF 	 bl SYSTIMER_GetTime
 1292 0346 021C     	 mov r2,r0
 1293 0348 204B     	 ldr r3,.L94+124
 1294 034a 1A60     	 str r2,[r3]
 1295 034c 50E0     	 b .L63
 1296              	.L95:
 1297 034e C046     	 .align 2
 1298              	.L94:
 1299 0350 00000000 	 .word IO_USB_SI
 1300 0354 00000000 	 .word IO_USB_OE
 1301 0358 00000000 	 .word IO_USBPWR_1
 1302 035c 00000000 	 .word IO_LED_USB1
 1303 0360 00000000 	 .word IO_USBPWR_2
 1304 0364 00000000 	 .word IO_LED_USB2
 1305 0368 00000000 	 .word IO_RELAY
 1306 036c 00000000 	 .word IO_LED_RELAY
 1307 0370 00000000 	 .word ADC_SENSOR
 1308 0374 00000000 	 .word systime_debug
 1309 0378 00000000 	 .word button_usb_pressed_timestamp
 1310 037c 00000000 	 .word IO_SW_USB
 1311 0380 00000000 	 .word button_up_pressed_timestamp
 1312 0384 00000000 	 .word IO_SW_UP
 1313 0388 00000000 	 .word button_down_pressed_timestamp
 1314 038c 00000000 	 .word IO_SW_DOWN
 1315 0390 00000000 	 .word button_usb_pressed_duration
 1316 0394 E7030000 	 .word 999
 1317 0398 00000000 	 .word buttonpress_usb
 1318 039c 00000000 	 .word button_up_pressed_duration
 1319 03a0 00000000 	 .word buttonpress_up
 1320 03a4 00000000 	 .word button_usb_pressed_long_debug
 1321 03a8 00000000 	 .word button_usb_pressed_debug
 1322 03ac 00000000 	 .word button_down_pressed_duration
 1323 03b0 00000000 	 .word buttonpress_down
 1324 03b4 00000000 	 .word USB_state
 1325 03b8 00000000 	 .word relay_state
 1326 03bc 00000000 	 .word ADC_val_upper_thres_exceed_timestamp
 1327 03c0 00000000 	 .word ADC_upper_threshold
 1328 03c4 00000000 	 .word ADC_val_current
 1329 03c8 00000000 	 .word relay_threshold_latchtime
 1330 03cc 00000000 	 .word ADC_val_lower_thres_exceed_timestamp
 1331 03d0 00000000 	 .word ADC_lower_threshold
 1332              	.L62:
 308:../main.c     **** 				}
 309:../main.c     **** 				else if(ADC_val_lower_thres_exceed_timestamp != 0 && ADC_val_current > ADC_lower_threshold){
 1333              	 .loc 5 309 0
 1334 03d4 8F4B     	 ldr r3,.L96
 1335 03d6 1B68     	 ldr r3,[r3]
 1336 03d8 002B     	 cmp r3,#0
 1337 03da 09D0     	 beq .L63
 1338              	 .loc 5 309 0 is_stmt 0 discriminator 1
 1339 03dc 8E4B     	 ldr r3,.L96+4
 1340 03de 1B68     	 ldr r3,[r3]
 1341 03e0 1A1E     	 sub r2,r3,#0
 1342 03e2 8E4B     	 ldr r3,.L96+8
 1343 03e4 1B68     	 ldr r3,[r3]
 1344 03e6 9A42     	 cmp r2,r3
 1345 03e8 02D2     	 bcs .L63
 310:../main.c     **** 					ADC_val_lower_thres_exceed_timestamp = 0;
 1346              	 .loc 5 310 0 is_stmt 1
 1347 03ea 8A4B     	 ldr r3,.L96
 1348 03ec 0022     	 mov r2,#0
 1349 03ee 1A60     	 str r2,[r3]
 1350              	.L63:
 311:../main.c     **** 				}
 312:../main.c     **** 
 313:../main.c     **** 				// Transition statement
 314:../main.c     **** 				// Check if threshold are exceeded long enough to trigger a switch
 315:../main.c     **** 				if(ADC_val_lower_thres_exceed_timestamp != 0){
 1351              	 .loc 5 315 0
 1352 03f0 884B     	 ldr r3,.L96
 1353 03f2 1B68     	 ldr r3,[r3]
 1354 03f4 002B     	 cmp r3,#0
 1355 03f6 21D0     	 beq .L64
 1356              	.LBB3:
 316:../main.c     **** 					uint16_t lowerThresholdExceedDuration = (SYSTIMER_GetTime() - ADC_val_lower_thres_exceed_times
 1357              	 .loc 5 316 0
 1358 03f8 FFF7FEFF 	 bl SYSTIMER_GetTime
 1359 03fc 021C     	 mov r2,r0
 1360 03fe 854B     	 ldr r3,.L96
 1361 0400 1B68     	 ldr r3,[r3]
 1362 0402 D31A     	 sub r3,r2,r3
 1363 0404 181C     	 mov r0,r3
 1364 0406 FA23     	 mov r3,#250
 1365 0408 9900     	 lsl r1,r3,#2
 1366 040a FFF7FEFF 	 bl __aeabi_uidiv
 1367 040e 031C     	 mov r3,r0
 1368 0410 1A1C     	 mov r2,r3
 1369 0412 BB1D     	 add r3,r7,#6
 1370 0414 1A80     	 strh r2,[r3]
 317:../main.c     **** 					if(lowerThresholdExceedDuration > relay_threshold_latchtime){
 1371              	 .loc 5 317 0
 1372 0416 824B     	 ldr r3,.L96+12
 1373 0418 1B88     	 ldrh r3,[r3]
 1374 041a BA1D     	 add r2,r7,#6
 1375 041c 1288     	 ldrh r2,[r2]
 1376 041e 9A42     	 cmp r2,r3
 1377 0420 0CD9     	 bls .L64
 318:../main.c     **** 						relay_state = RELAY_LOW;
 1378              	 .loc 5 318 0
 1379 0422 804B     	 ldr r3,.L96+16
 1380 0424 0122     	 mov r2,#1
 1381 0426 1A70     	 strb r2,[r3]
 319:../main.c     **** 						DIGITAL_IO_SetOutputLow(&IO_RELAY);
 1382              	 .loc 5 319 0
 1383 0428 7F4B     	 ldr r3,.L96+20
 1384 042a 181C     	 mov r0,r3
 1385 042c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 320:../main.c     **** 						reset_relay_led();
 1386              	 .loc 5 320 0
 1387 0430 FFF7FEFF 	 bl reset_relay_led
 321:../main.c     **** 						ADC_val_lower_thres_exceed_timestamp = 0;
 1388              	 .loc 5 321 0
 1389 0434 774B     	 ldr r3,.L96
 1390 0436 0022     	 mov r2,#0
 1391 0438 1A60     	 str r2,[r3]
 1392              	.LBE3:
 322:../main.c     **** 					}
 323:../main.c     **** 				}
 324:../main.c     **** 				break;
 1393              	 .loc 5 324 0
 1394 043a FFE7     	 b .L92
 1395              	.L64:
 1396              	.L92:
 1397 043c C046     	 mov r8,r8
 1398              	.L56:
 325:../main.c     **** 		}
 326:../main.c     **** 		// Init next value conversion
 327:../main.c     **** 		ADC_MEASUREMENT_StartConversion(&ADC_SENSOR);
 1399              	 .loc 5 327 0
 1400 043e 7B4B     	 ldr r3,.L96+24
 1401 0440 181C     	 mov r0,r3
 1402 0442 FFF7FEFF 	 bl ADC_MEASUREMENT_StartConversion
 328:../main.c     **** 
 329:../main.c     **** 		/// - Relay settings handling - Todo auto exit menus after time?, led signal when reaching max?, 
 330:../main.c     **** 		switch(setup_state){
 1403              	 .loc 5 330 0
 1404 0446 7A4B     	 ldr r3,.L96+28
 1405 0448 1B78     	 ldrb r3,[r3]
 1406 044a 012B     	 cmp r3,#1
 1407 044c 39D0     	 beq .L66
 1408 044e 02DC     	 bgt .L67
 1409 0450 002B     	 cmp r3,#0
 1410 0452 07D0     	 beq .L68
 1411 0454 D3E0     	 b .L65
 1412              	.L67:
 1413 0456 022B     	 cmp r3,#2
 1414 0458 00D1     	 bne .LCB1123
 1415 045a 66E0     	 b .L69
 1416              	.LCB1123:
 1417 045c 032B     	 cmp r3,#3
 1418 045e 00D1     	 bne .LCB1125
 1419 0460 97E0     	 b .L70
 1420              	.LCB1125:
 1421 0462 CCE0     	 b .L65
 1422              	.L68:
 331:../main.c     **** 			case SETUP_IDLE:
 332:../main.c     **** 				/// Interpret button press and change to according setup sub-menu (state)
 333:../main.c     **** 				// A long  press of up or down brings system in time setup menu
 334:../main.c     **** 				// A short press of up         brings system in upper threshold setup menu
 335:../main.c     **** 				// A short press of down       brings system in lower threshold setup menu
 336:../main.c     **** 				if(buttonpress_up == BTNPRESS_LONG || buttonpress_down == BTNPRESS_LONG){
 1423              	 .loc 5 336 0
 1424 0464 734B     	 ldr r3,.L96+32
 1425 0466 1B78     	 ldrb r3,[r3]
 1426 0468 022B     	 cmp r3,#2
 1427 046a 03D0     	 beq .L71
 1428              	 .loc 5 336 0 is_stmt 0 discriminator 1
 1429 046c 724B     	 ldr r3,.L96+36
 1430 046e 1B78     	 ldrb r3,[r3]
 1431 0470 022B     	 cmp r3,#2
 1432 0472 09D1     	 bne .L72
 1433              	.L71:
 337:../main.c     **** 					setup_state = SETUP_TIME_TH;
 1434              	 .loc 5 337 0 is_stmt 1
 1435 0474 6E4B     	 ldr r3,.L96+28
 1436 0476 0322     	 mov r2,#3
 1437 0478 1A70     	 strb r2,[r3]
 338:../main.c     **** 					led_relay_pattern = LED_NUMBER;
 1438              	 .loc 5 338 0
 1439 047a 704B     	 ldr r3,.L96+40
 1440 047c 0222     	 mov r2,#2
 1441 047e 1A70     	 strb r2,[r3]
 339:../main.c     **** 					led_number = 1;
 1442              	 .loc 5 339 0
 1443 0480 6F4B     	 ldr r3,.L96+44
 1444 0482 0122     	 mov r2,#1
 1445 0484 1A80     	 strh r2,[r3]
 1446 0486 1BE0     	 b .L73
 1447              	.L72:
 340:../main.c     **** 				}
 341:../main.c     **** 				else if(buttonpress_up == BTNPRESS_STD){
 1448              	 .loc 5 341 0
 1449 0488 6A4B     	 ldr r3,.L96+32
 1450 048a 1B78     	 ldrb r3,[r3]
 1451 048c 012B     	 cmp r3,#1
 1452 048e 09D1     	 bne .L74
 342:../main.c     **** 					setup_state = SETUP_UPPER_TH;
 1453              	 .loc 5 342 0
 1454 0490 674B     	 ldr r3,.L96+28
 1455 0492 0122     	 mov r2,#1
 1456 0494 1A70     	 strb r2,[r3]
 343:../main.c     **** 					led_relay_pattern = LED_NUMBER;
 1457              	 .loc 5 343 0
 1458 0496 694B     	 ldr r3,.L96+40
 1459 0498 0222     	 mov r2,#2
 1460 049a 1A70     	 strb r2,[r3]
 344:../main.c     **** 					led_number = 2;
 1461              	 .loc 5 344 0
 1462 049c 684B     	 ldr r3,.L96+44
 1463 049e 0222     	 mov r2,#2
 1464 04a0 1A80     	 strh r2,[r3]
 1465 04a2 0DE0     	 b .L73
 1466              	.L74:
 345:../main.c     **** 				}
 346:../main.c     **** 				else if(buttonpress_down == BTNPRESS_STD){
 1467              	 .loc 5 346 0
 1468 04a4 644B     	 ldr r3,.L96+36
 1469 04a6 1B78     	 ldrb r3,[r3]
 1470 04a8 012B     	 cmp r3,#1
 1471 04aa 09D1     	 bne .L73
 347:../main.c     **** 					setup_state = SETUP_LOWER_TH;
 1472              	 .loc 5 347 0
 1473 04ac 604B     	 ldr r3,.L96+28
 1474 04ae 0222     	 mov r2,#2
 1475 04b0 1A70     	 strb r2,[r3]
 348:../main.c     **** 					led_relay_pattern = LED_NUMBER;
 1476              	 .loc 5 348 0
 1477 04b2 624B     	 ldr r3,.L96+40
 1478 04b4 0222     	 mov r2,#2
 1479 04b6 1A70     	 strb r2,[r3]
 349:../main.c     **** 					led_number = 3;
 1480              	 .loc 5 349 0
 1481 04b8 614B     	 ldr r3,.L96+44
 1482 04ba 0322     	 mov r2,#3
 1483 04bc 1A80     	 strh r2,[r3]
 350:../main.c     **** 				}
 351:../main.c     **** 				break;
 1484              	 .loc 5 351 0
 1485 04be 9EE0     	 b .L65
 1486              	.L73:
 1487 04c0 9DE0     	 b .L65
 1488              	.L66:
 352:../main.c     **** 			case SETUP_UPPER_TH:
 353:../main.c     **** 				// Blink relay LED
 354:../main.c     **** 
 355:../main.c     **** 				/// Interpret button press:
 356:../main.c     **** 				// A long  press of up or down brings system back to setup idle
 357:../main.c     **** 				// A short press of up         increases the upper threshold value
 358:../main.c     **** 				// A short press of down       decreases the upper threshold value
 359:../main.c     **** 				if(buttonpress_up == BTNPRESS_LONG || buttonpress_down == BTNPRESS_LONG){
 1489              	 .loc 5 359 0
 1490 04c2 5C4B     	 ldr r3,.L96+32
 1491 04c4 1B78     	 ldrb r3,[r3]
 1492 04c6 022B     	 cmp r3,#2
 1493 04c8 03D0     	 beq .L75
 1494              	 .loc 5 359 0 is_stmt 0 discriminator 1
 1495 04ca 5B4B     	 ldr r3,.L96+36
 1496 04cc 1B78     	 ldrb r3,[r3]
 1497 04ce 022B     	 cmp r3,#2
 1498 04d0 05D1     	 bne .L76
 1499              	.L75:
 360:../main.c     **** 					setup_state = SETUP_IDLE;
 1500              	 .loc 5 360 0 is_stmt 1
 1501 04d2 574B     	 ldr r3,.L96+28
 1502 04d4 0022     	 mov r2,#0
 1503 04d6 1A70     	 strb r2,[r3]
 361:../main.c     **** 					reset_relay_led();
 1504              	 .loc 5 361 0
 1505 04d8 FFF7FEFF 	 bl reset_relay_led
 1506 04dc 24E0     	 b .L77
 1507              	.L76:
 362:../main.c     **** 				}
 363:../main.c     **** 				else if(buttonpress_up == BTNPRESS_STD){
 1508              	 .loc 5 363 0
 1509 04de 554B     	 ldr r3,.L96+32
 1510 04e0 1B78     	 ldrb r3,[r3]
 1511 04e2 012B     	 cmp r3,#1
 1512 04e4 0ED1     	 bne .L78
 364:../main.c     **** 					ADC_upper_threshold += ADC_THRESHOLD_INCREMENT;
 1513              	 .loc 5 364 0
 1514 04e6 574B     	 ldr r3,.L96+48
 1515 04e8 1B68     	 ldr r3,[r3]
 1516 04ea 7C33     	 add r3,r3,#124
 1517 04ec 1A1C     	 mov r2,r3
 1518 04ee 554B     	 ldr r3,.L96+48
 1519 04f0 1A60     	 str r2,[r3]
 365:../main.c     **** 					if(ADC_upper_threshold > ADC_THRESHOLD_MAX)
 1520              	 .loc 5 365 0
 1521 04f2 544B     	 ldr r3,.L96+48
 1522 04f4 1B68     	 ldr r3,[r3]
 1523 04f6 544A     	 ldr r2,.L96+52
 1524 04f8 9342     	 cmp r3,r2
 1525 04fa 15DD     	 ble .L77
 366:../main.c     **** 						ADC_upper_threshold = ADC_THRESHOLD_MAX;
 1526              	 .loc 5 366 0
 1527 04fc 514B     	 ldr r3,.L96+48
 1528 04fe 524A     	 ldr r2,.L96+52
 1529 0500 1A60     	 str r2,[r3]
 367:../main.c     **** 				}
 368:../main.c     **** 				else if(buttonpress_down == BTNPRESS_STD){
 369:../main.c     **** 					ADC_upper_threshold -= ADC_THRESHOLD_INCREMENT;
 370:../main.c     **** 					if(ADC_upper_threshold <= 0)
 371:../main.c     **** 						ADC_upper_threshold = 0;
 372:../main.c     **** 					//if(ADC_upper_threshold <= ADC_lower_threshold)
 373:../main.c     **** 						//ADC_upper_threshold = ADC_lower_threshold;
 374:../main.c     **** 				}
 375:../main.c     **** 				break;
 1530              	 .loc 5 375 0
 1531 0502 7CE0     	 b .L65
 1532              	.L78:
 368:../main.c     **** 					ADC_upper_threshold -= ADC_THRESHOLD_INCREMENT;
 1533              	 .loc 5 368 0
 1534 0504 4C4B     	 ldr r3,.L96+36
 1535 0506 1B78     	 ldrb r3,[r3]
 1536 0508 012B     	 cmp r3,#1
 1537 050a 0DD1     	 bne .L77
 369:../main.c     **** 					if(ADC_upper_threshold <= 0)
 1538              	 .loc 5 369 0
 1539 050c 4D4B     	 ldr r3,.L96+48
 1540 050e 1B68     	 ldr r3,[r3]
 1541 0510 7C3B     	 sub r3,r3,#124
 1542 0512 1A1C     	 mov r2,r3
 1543 0514 4B4B     	 ldr r3,.L96+48
 1544 0516 1A60     	 str r2,[r3]
 370:../main.c     **** 						ADC_upper_threshold = 0;
 1545              	 .loc 5 370 0
 1546 0518 4A4B     	 ldr r3,.L96+48
 1547 051a 1B68     	 ldr r3,[r3]
 1548 051c 002B     	 cmp r3,#0
 1549 051e 03DC     	 bgt .L77
 371:../main.c     **** 					//if(ADC_upper_threshold <= ADC_lower_threshold)
 1550              	 .loc 5 371 0
 1551 0520 484B     	 ldr r3,.L96+48
 1552 0522 0022     	 mov r2,#0
 1553 0524 1A60     	 str r2,[r3]
 1554              	 .loc 5 375 0
 1555 0526 6AE0     	 b .L65
 1556              	.L77:
 1557              	 .loc 5 375 0 is_stmt 0 discriminator 2
 1558 0528 69E0     	 b .L65
 1559              	.L69:
 376:../main.c     **** 			case SETUP_LOWER_TH:
 377:../main.c     **** 				// Blink relay LED
 378:../main.c     **** 
 379:../main.c     **** 				/// Interpret button press:
 380:../main.c     **** 				// A long  press of up or down brings system back to setup idle
 381:../main.c     **** 				// A short press of up         increases the lower threshold value
 382:../main.c     **** 				// A short press of down       decreases the lower threshold value
 383:../main.c     **** 				if(buttonpress_up == BTNPRESS_LONG || buttonpress_down == BTNPRESS_LONG){
 1560              	 .loc 5 383 0 is_stmt 1
 1561 052a 424B     	 ldr r3,.L96+32
 1562 052c 1B78     	 ldrb r3,[r3]
 1563 052e 022B     	 cmp r3,#2
 1564 0530 03D0     	 beq .L80
 1565              	 .loc 5 383 0 is_stmt 0 discriminator 1
 1566 0532 414B     	 ldr r3,.L96+36
 1567 0534 1B78     	 ldrb r3,[r3]
 1568 0536 022B     	 cmp r3,#2
 1569 0538 05D1     	 bne .L81
 1570              	.L80:
 384:../main.c     **** 					setup_state = SETUP_IDLE;
 1571              	 .loc 5 384 0 is_stmt 1
 1572 053a 3D4B     	 ldr r3,.L96+28
 1573 053c 0022     	 mov r2,#0
 1574 053e 1A70     	 strb r2,[r3]
 385:../main.c     **** 					reset_relay_led();
 1575              	 .loc 5 385 0
 1576 0540 FFF7FEFF 	 bl reset_relay_led
 1577 0544 24E0     	 b .L82
 1578              	.L81:
 386:../main.c     **** 				}
 387:../main.c     **** 				else if(buttonpress_up == BTNPRESS_STD){
 1579              	 .loc 5 387 0
 1580 0546 3B4B     	 ldr r3,.L96+32
 1581 0548 1B78     	 ldrb r3,[r3]
 1582 054a 012B     	 cmp r3,#1
 1583 054c 0ED1     	 bne .L83
 388:../main.c     **** 					ADC_lower_threshold += ADC_THRESHOLD_INCREMENT;
 1584              	 .loc 5 388 0
 1585 054e 324B     	 ldr r3,.L96+4
 1586 0550 1B68     	 ldr r3,[r3]
 1587 0552 7C33     	 add r3,r3,#124
 1588 0554 1A1C     	 mov r2,r3
 1589 0556 304B     	 ldr r3,.L96+4
 1590 0558 1A60     	 str r2,[r3]
 389:../main.c     **** 					if(ADC_lower_threshold > ADC_THRESHOLD_MAX)
 1591              	 .loc 5 389 0
 1592 055a 2F4B     	 ldr r3,.L96+4
 1593 055c 1B68     	 ldr r3,[r3]
 1594 055e 3A4A     	 ldr r2,.L96+52
 1595 0560 9342     	 cmp r3,r2
 1596 0562 15DD     	 ble .L82
 390:../main.c     **** 						ADC_lower_threshold = ADC_THRESHOLD_MAX;
 1597              	 .loc 5 390 0
 1598 0564 2C4B     	 ldr r3,.L96+4
 1599 0566 384A     	 ldr r2,.L96+52
 1600 0568 1A60     	 str r2,[r3]
 391:../main.c     **** 				}
 392:../main.c     **** 				else if(buttonpress_down == BTNPRESS_STD){
 393:../main.c     **** 					ADC_lower_threshold -= ADC_THRESHOLD_INCREMENT;
 394:../main.c     **** 					if(ADC_lower_threshold <= 0)
 395:../main.c     **** 						ADC_lower_threshold = 0;
 396:../main.c     **** 				}
 397:../main.c     **** 				break;
 1601              	 .loc 5 397 0
 1602 056a 48E0     	 b .L65
 1603              	.L83:
 392:../main.c     **** 					ADC_lower_threshold -= ADC_THRESHOLD_INCREMENT;
 1604              	 .loc 5 392 0
 1605 056c 324B     	 ldr r3,.L96+36
 1606 056e 1B78     	 ldrb r3,[r3]
 1607 0570 012B     	 cmp r3,#1
 1608 0572 0DD1     	 bne .L82
 393:../main.c     **** 					if(ADC_lower_threshold <= 0)
 1609              	 .loc 5 393 0
 1610 0574 284B     	 ldr r3,.L96+4
 1611 0576 1B68     	 ldr r3,[r3]
 1612 0578 7C3B     	 sub r3,r3,#124
 1613 057a 1A1C     	 mov r2,r3
 1614 057c 264B     	 ldr r3,.L96+4
 1615 057e 1A60     	 str r2,[r3]
 394:../main.c     **** 						ADC_lower_threshold = 0;
 1616              	 .loc 5 394 0
 1617 0580 254B     	 ldr r3,.L96+4
 1618 0582 1B68     	 ldr r3,[r3]
 1619 0584 002B     	 cmp r3,#0
 1620 0586 03DC     	 bgt .L82
 395:../main.c     **** 				}
 1621              	 .loc 5 395 0
 1622 0588 234B     	 ldr r3,.L96+4
 1623 058a 0022     	 mov r2,#0
 1624 058c 1A60     	 str r2,[r3]
 1625              	 .loc 5 397 0
 1626 058e 36E0     	 b .L65
 1627              	.L82:
 1628              	 .loc 5 397 0 is_stmt 0 discriminator 3
 1629 0590 35E0     	 b .L65
 1630              	.L70:
 398:../main.c     **** 			case SETUP_TIME_TH:
 399:../main.c     **** 				/// Interpret button press:
 400:../main.c     **** 				// A long  press of up or down brings system back to setup idle
 401:../main.c     **** 				// A short press of up         increases the threshold exceed time
 402:../main.c     **** 				// A short press of down       decreases the threshold exceed time
 403:../main.c     **** 				if(buttonpress_up == BTNPRESS_LONG || buttonpress_down == BTNPRESS_LONG){
 1631              	 .loc 5 403 0 is_stmt 1
 1632 0592 284B     	 ldr r3,.L96+32
 1633 0594 1B78     	 ldrb r3,[r3]
 1634 0596 022B     	 cmp r3,#2
 1635 0598 03D0     	 beq .L85
 1636              	 .loc 5 403 0 is_stmt 0 discriminator 1
 1637 059a 274B     	 ldr r3,.L96+36
 1638 059c 1B78     	 ldrb r3,[r3]
 1639 059e 022B     	 cmp r3,#2
 1640 05a0 05D1     	 bne .L86
 1641              	.L85:
 404:../main.c     **** 					setup_state = SETUP_IDLE;
 1642              	 .loc 5 404 0 is_stmt 1
 1643 05a2 234B     	 ldr r3,.L96+28
 1644 05a4 0022     	 mov r2,#0
 1645 05a6 1A70     	 strb r2,[r3]
 405:../main.c     **** 					reset_relay_led();
 1646              	 .loc 5 405 0
 1647 05a8 FFF7FEFF 	 bl reset_relay_led
 1648 05ac 26E0     	 b .L87
 1649              	.L86:
 406:../main.c     **** 				}
 407:../main.c     **** 				else if(buttonpress_up == BTNPRESS_STD){
 1650              	 .loc 5 407 0
 1651 05ae 214B     	 ldr r3,.L96+32
 1652 05b0 1B78     	 ldrb r3,[r3]
 1653 05b2 012B     	 cmp r3,#1
 1654 05b4 0FD1     	 bne .L88
 408:../main.c     **** 					relay_threshold_latchtime += RELAY_LATCHTIME_INCREMENT;
 1655              	 .loc 5 408 0
 1656 05b6 1A4B     	 ldr r3,.L96+12
 1657 05b8 1B88     	 ldrh r3,[r3]
 1658 05ba F533     	 add r3,r3,#245
 1659 05bc FF33     	 add r3,r3,#255
 1660 05be 9AB2     	 uxth r2,r3
 1661 05c0 174B     	 ldr r3,.L96+12
 1662 05c2 1A80     	 strh r2,[r3]
 409:../main.c     **** 					if(relay_threshold_latchtime > RELAY_LATCHTIME_MAX)
 1663              	 .loc 5 409 0
 1664 05c4 164B     	 ldr r3,.L96+12
 1665 05c6 1B88     	 ldrh r3,[r3]
 1666 05c8 204A     	 ldr r2,.L96+56
 1667 05ca 9342     	 cmp r3,r2
 1668 05cc 16D9     	 bls .L87
 410:../main.c     **** 						relay_threshold_latchtime = RELAY_LATCHTIME_MAX;
 1669              	 .loc 5 410 0
 1670 05ce 144B     	 ldr r3,.L96+12
 1671 05d0 1F4A     	 ldr r2,.L96+60
 1672 05d2 1A80     	 strh r2,[r3]
 411:../main.c     **** 				}
 412:../main.c     **** 				else if(buttonpress_down == BTNPRESS_STD){
 413:../main.c     **** 					relay_threshold_latchtime -= RELAY_LATCHTIME_INCREMENT;
 414:../main.c     **** 					if(relay_threshold_latchtime <= 0)
 415:../main.c     **** 						relay_threshold_latchtime = 0;
 416:../main.c     **** 				}
 417:../main.c     **** 				break;
 1673              	 .loc 5 417 0
 1674 05d4 12E0     	 b .L93
 1675              	.L88:
 412:../main.c     **** 					relay_threshold_latchtime -= RELAY_LATCHTIME_INCREMENT;
 1676              	 .loc 5 412 0
 1677 05d6 184B     	 ldr r3,.L96+36
 1678 05d8 1B78     	 ldrb r3,[r3]
 1679 05da 012B     	 cmp r3,#1
 1680 05dc 0ED1     	 bne .L87
 413:../main.c     **** 					if(relay_threshold_latchtime <= 0)
 1681              	 .loc 5 413 0
 1682 05de 104B     	 ldr r3,.L96+12
 1683 05e0 1B88     	 ldrh r3,[r3]
 1684 05e2 F53B     	 sub r3,r3,#245
 1685 05e4 FF3B     	 sub r3,r3,#255
 1686 05e6 9AB2     	 uxth r2,r3
 1687 05e8 0D4B     	 ldr r3,.L96+12
 1688 05ea 1A80     	 strh r2,[r3]
 414:../main.c     **** 						relay_threshold_latchtime = 0;
 1689              	 .loc 5 414 0
 1690 05ec 0C4B     	 ldr r3,.L96+12
 1691 05ee 1B88     	 ldrh r3,[r3]
 1692 05f0 002B     	 cmp r3,#0
 1693 05f2 03D1     	 bne .L87
 415:../main.c     **** 				}
 1694              	 .loc 5 415 0
 1695 05f4 0A4B     	 ldr r3,.L96+12
 1696 05f6 0022     	 mov r2,#0
 1697 05f8 1A80     	 strh r2,[r3]
 1698              	 .loc 5 417 0
 1699 05fa FFE7     	 b .L93
 1700              	.L87:
 1701              	.L93:
 1702 05fc C046     	 mov r8,r8
 1703              	.L65:
 418:../main.c     **** 		}
 419:../main.c     **** 
 420:../main.c     **** 		// Reset all button presses
 421:../main.c     **** 		buttonpress_usb = BTNPRESS_NOT;
 1704              	 .loc 5 421 0
 1705 05fe 154B     	 ldr r3,.L96+64
 1706 0600 0022     	 mov r2,#0
 1707 0602 1A70     	 strb r2,[r3]
 422:../main.c     **** 		buttonpress_up = BTNPRESS_NOT;
 1708              	 .loc 5 422 0
 1709 0604 0B4B     	 ldr r3,.L96+32
 1710 0606 0022     	 mov r2,#0
 1711 0608 1A70     	 strb r2,[r3]
 423:../main.c     **** 		buttonpress_down = BTNPRESS_NOT;
 1712              	 .loc 5 423 0
 1713 060a 0B4B     	 ldr r3,.L96+36
 1714 060c 0022     	 mov r2,#0
 1715 060e 1A70     	 strb r2,[r3]
 424:../main.c     **** 	}
 1716              	 .loc 5 424 0
 1717 0610 2BE5     	 b .L90
 1718              	.L97:
 1719 0612 C046     	 .align 2
 1720              	.L96:
 1721 0614 00000000 	 .word ADC_val_lower_thres_exceed_timestamp
 1722 0618 00000000 	 .word ADC_lower_threshold
 1723 061c 00000000 	 .word ADC_val_current
 1724 0620 00000000 	 .word relay_threshold_latchtime
 1725 0624 00000000 	 .word relay_state
 1726 0628 00000000 	 .word IO_RELAY
 1727 062c 00000000 	 .word ADC_SENSOR
 1728 0630 00000000 	 .word setup_state
 1729 0634 00000000 	 .word buttonpress_up
 1730 0638 00000000 	 .word buttonpress_down
 1731 063c 00000000 	 .word led_relay_pattern
 1732 0640 00000000 	 .word led_number
 1733 0644 00000000 	 .word ADC_upper_threshold
 1734 0648 FF0F0000 	 .word 4095
 1735 064c 60EA0000 	 .word 60000
 1736 0650 60EAFFFF 	 .word -5536
 1737 0654 00000000 	 .word buttonpress_usb
 1738              	 .cfi_endproc
 1739              	.LFE156:
 1741              	 .global meas_invalid_count
 1742              	 .section .bss.meas_invalid_count,"aw",%nobits
 1743              	 .align 2
 1746              	meas_invalid_count:
 1747 0000 00000000 	 .space 4
 1748              	 .section .text.VADC0_C0_0_IRQHandler,"ax",%progbits
 1749              	 .align 2
 1750              	 .global VADC0_C0_0_IRQHandler
 1751              	 .code 16
 1752              	 .thumb_func
 1754              	VADC0_C0_0_IRQHandler:
 1755              	.LFB157:
 425:../main.c     **** }
 426:../main.c     **** 
 427:../main.c     **** 
 428:../main.c     **** 
 429:../main.c     **** //void Adc_Measurement_Handler()
 430:../main.c     **** //{
 431:../main.c     **** ////	#if(UC_SERIES == XMC11)
 432:../main.c     **** ////		ADC_val_current = ADC_MEASUREMENT_GetGlobalResult();
 433:../main.c     **** ////		ADC_val_current = ADC_val_current >> ((uint32_t)ADC_SENSOR.iclass_config_handle->conversion_m
 434:../main.c     **** ////	#endif
 435:../main.c     **** //}
 436:../main.c     **** 
 437:../main.c     **** int meas_invalid_count = 0;
 438:../main.c     **** 
 439:../main.c     **** void Adc_Measurement_Handler()
 440:../main.c     **** {
 1756              	 .loc 5 440 0
 1757              	 .cfi_startproc
 1758 0000 80B5     	 push {r7,lr}
 1759              	.LCFI35:
 1760              	 .cfi_def_cfa_offset 8
 1761              	 .cfi_offset 7,-8
 1762              	 .cfi_offset 14,-4
 1763 0002 82B0     	 sub sp,sp,#8
 1764              	.LCFI36:
 1765              	 .cfi_def_cfa_offset 16
 1766 0004 00AF     	 add r7,sp,#0
 1767              	.LCFI37:
 1768              	 .cfi_def_cfa_register 7
 441:../main.c     **** 	//uint8_t channel_num;
 442:../main.c     **** 	//uint8_t group_num;
 443:../main.c     **** 	uint32_t adc_register;
 444:../main.c     **** 
 445:../main.c     **** 	#if(UC_SERIES == XMC11)
 446:../main.c     **** 	adc_register = ADC_MEASUREMENT_GetGlobalDetailedResult();
 1769              	 .loc 5 446 0
 1770 0006 FFF7FEFF 	 bl ADC_MEASUREMENT_GetGlobalDetailedResult
 1771 000a 031C     	 mov r3,r0
 1772 000c 7B60     	 str r3,[r7,#4]
 447:../main.c     **** 	#endif
 448:../main.c     **** 
 449:../main.c     **** 	if((bool)(adc_register >> VADC_GLOBRES_VF_Pos))
 1773              	 .loc 5 449 0
 1774 000e 7B68     	 ldr r3,[r7,#4]
 1775 0010 002B     	 cmp r3,#0
 1776 0012 0DDA     	 bge .L99
 450:../main.c     **** 	{
 451:../main.c     **** 		//channel_num = (adc_register & VADC_GLOBRES_CHNR_Msk) >> VADC_GLOBRES_CHNR_Pos;
 452:../main.c     **** 		//group_num = ADC_MEASUREMENT_Channel_A.group_index;
 453:../main.c     **** 		ADC_val_current = (adc_register & VADC_GLOBRES_RESULT_Msk) >> ((uint32_t)(ADC_SENSOR.iclass_confi
 1777              	 .loc 5 453 0
 1778 0014 7B68     	 ldr r3,[r7,#4]
 1779 0016 1B04     	 lsl r3,r3,#16
 1780 0018 1A0C     	 lsr r2,r3,#16
 1781 001a 094B     	 ldr r3,.L101
 1782 001c 9B68     	 ldr r3,[r3,#8]
 1783 001e 5B78     	 ldrb r3,[r3,#1]
 1784 0020 5B07     	 lsl r3,r3,#29
 1785 0022 5B0F     	 lsr r3,r3,#29
 1786 0024 DBB2     	 uxtb r3,r3
 1787 0026 5B00     	 lsl r3,r3,#1
 1788 0028 DA40     	 lsr r2,r2,r3
 1789 002a 064B     	 ldr r3,.L101+4
 1790 002c 1A60     	 str r2,[r3]
 1791 002e 04E0     	 b .L98
 1792              	.L99:
 454:../main.c     **** 	}
 455:../main.c     **** 	else{
 456:../main.c     **** 		meas_invalid_count++;
 1793              	 .loc 5 456 0
 1794 0030 054B     	 ldr r3,.L101+8
 1795 0032 1B68     	 ldr r3,[r3]
 1796 0034 5A1C     	 add r2,r3,#1
 1797 0036 044B     	 ldr r3,.L101+8
 1798 0038 1A60     	 str r2,[r3]
 1799              	.L98:
 457:../main.c     **** 	}
 458:../main.c     **** 
 459:../main.c     **** }
 1800              	 .loc 5 459 0
 1801 003a BD46     	 mov sp,r7
 1802 003c 02B0     	 add sp,sp,#8
 1803              	 
 1804 003e 80BD     	 pop {r7,pc}
 1805              	.L102:
 1806              	 .align 2
 1807              	.L101:
 1808 0040 00000000 	 .word ADC_SENSOR
 1809 0044 00000000 	 .word ADC_val_current
 1810 0048 00000000 	 .word meas_invalid_count
 1811              	 .cfi_endproc
 1812              	.LFE157:
 1814              	 .section .bss.led_number_state_timestamp.6884,"aw",%nobits
 1815              	 .align 2
 1818              	led_number_state_timestamp.6884:
 1819 0000 00000000 	 .space 4
 1820              	 .section .bss.led_number_state_length.6885,"aw",%nobits
 1821              	 .align 1
 1824              	led_number_state_length.6885:
 1825 0000 0000     	 .space 2
 1826              	 .section .bss.led_number_state.6883,"aw",%nobits
 1827              	 .align 1
 1830              	led_number_state.6883:
 1831 0000 0000     	 .space 2
 1832              	 .text
 1833              	.Letext0:
 1834              	 .file 6 "c:\\workspaces\\4.5.0\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1835              	 .file 7 "c:\\workspaces\\4.5.0\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1836              	 .file 8 "C:/Workspaces/DAVE_WS/USB_Changer/Libraries/CMSIS/Infineon/XMC1100_series/Include/XMC1100.h"
 1837              	 .file 9 "C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/GLOBAL_ADC/global_adc.h"
 1838              	 .file 10 "C:/Workspaces/DAVE_WS/USB_Changer/Libraries/XMCLib/inc/xmc1_gpio.h"
 1839              	 .file 11 "C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DAVE.h"
 1840              	 .file 12 "C:/Workspaces/DAVE_WS/USB_Changer/Libraries/CMSIS/Include/cmsis_gcc.h"
 1841              	 .file 13 "C:/Workspaces/DAVE_WS/USB_Changer/Libraries/CMSIS/Infineon/XMC1100_series/Include/system_XMC1100.h"
 1842              	 .file 14 "C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/ADC_MEASUREMENT/adc_measurement_extern.h"
 1843              	 .file 15 "C:/Workspaces/DAVE_WS/USB_Changer/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_VADC_GLOBAL_GetDetailedResult:00000000 $t
    {standard input}:22     .text.XMC_VADC_GLOBAL_GetDetailedResult:00000000 XMC_VADC_GLOBAL_GetDetailedResult
    {standard input}:54     .text.ADC_MEASUREMENT_GetGlobalDetailedResult:00000000 $t
    {standard input}:58     .text.ADC_MEASUREMENT_GetGlobalDetailedResult:00000000 ADC_MEASUREMENT_GetGlobalDetailedResult
    {standard input}:91     .text.ADC_MEASUREMENT_GetGlobalDetailedResult:0000001c $d
    {standard input}:96     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:100    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:136    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:140    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:176    .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:180    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:218    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:222    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:256    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:260    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:293    .text.DIGITAL_IO_GetInput:00000000 $t
    {standard input}:297    .text.DIGITAL_IO_GetInput:00000000 DIGITAL_IO_GetInput
    {standard input}:336    .data.relay_threshold_latchtime:00000000 relay_threshold_latchtime
    {standard input}:333    .data.relay_threshold_latchtime:00000000 $d
    {standard input}:343    .data.ADC_upper_threshold:00000000 ADC_upper_threshold
    {standard input}:340    .data.ADC_upper_threshold:00000000 $d
    {standard input}:350    .data.ADC_lower_threshold:00000000 ADC_lower_threshold
    {standard input}:347    .data.ADC_lower_threshold:00000000 $d
                            *COM*:00000001 USB_state
                            *COM*:00000001 relay_state
                            *COM*:00000001 setup_state
    {standard input}:359    .bss.led_relay_pattern:00000000 led_relay_pattern
    {standard input}:360    .bss.led_relay_pattern:00000000 $d
    {standard input}:365    .bss.led_relay_pattern_last:00000000 led_relay_pattern_last
    {standard input}:366    .bss.led_relay_pattern_last:00000000 $d
    {standard input}:372    .bss.led_number:00000000 led_number
    {standard input}:369    .bss.led_number:00000000 $d
    {standard input}:378    .bss.buttonpress_usb:00000000 buttonpress_usb
    {standard input}:379    .bss.buttonpress_usb:00000000 $d
    {standard input}:384    .bss.buttonpress_up:00000000 buttonpress_up
    {standard input}:385    .bss.buttonpress_up:00000000 $d
    {standard input}:390    .bss.buttonpress_down:00000000 buttonpress_down
    {standard input}:391    .bss.buttonpress_down:00000000 $d
    {standard input}:397    .bss.button_usb_pressed_timestamp:00000000 button_usb_pressed_timestamp
    {standard input}:394    .bss.button_usb_pressed_timestamp:00000000 $d
    {standard input}:404    .bss.button_up_pressed_timestamp:00000000 button_up_pressed_timestamp
    {standard input}:401    .bss.button_up_pressed_timestamp:00000000 $d
    {standard input}:411    .bss.button_down_pressed_timestamp:00000000 button_down_pressed_timestamp
    {standard input}:408    .bss.button_down_pressed_timestamp:00000000 $d
    {standard input}:418    .bss.button_usb_pressed_duration:00000000 button_usb_pressed_duration
    {standard input}:415    .bss.button_usb_pressed_duration:00000000 $d
    {standard input}:425    .bss.button_up_pressed_duration:00000000 button_up_pressed_duration
    {standard input}:422    .bss.button_up_pressed_duration:00000000 $d
    {standard input}:432    .bss.button_down_pressed_duration:00000000 button_down_pressed_duration
    {standard input}:429    .bss.button_down_pressed_duration:00000000 $d
    {standard input}:439    .bss.ADC_val_current:00000000 ADC_val_current
    {standard input}:436    .bss.ADC_val_current:00000000 $d
    {standard input}:446    .bss.ADC_val_upper_thres_exceed_timestamp:00000000 ADC_val_upper_thres_exceed_timestamp
    {standard input}:443    .bss.ADC_val_upper_thres_exceed_timestamp:00000000 $d
    {standard input}:453    .bss.ADC_val_lower_thres_exceed_timestamp:00000000 ADC_val_lower_thres_exceed_timestamp
    {standard input}:450    .bss.ADC_val_lower_thres_exceed_timestamp:00000000 $d
    {standard input}:460    .bss.button_usb_pressed_debug:00000000 button_usb_pressed_debug
    {standard input}:457    .bss.button_usb_pressed_debug:00000000 $d
    {standard input}:467    .bss.button_usb_pressed_long_debug:00000000 button_usb_pressed_long_debug
    {standard input}:464    .bss.button_usb_pressed_long_debug:00000000 $d
    {standard input}:474    .bss.systime_debug:00000000 systime_debug
    {standard input}:471    .bss.systime_debug:00000000 $d
    {standard input}:477    .text.delay_ms:00000000 $t
    {standard input}:482    .text.delay_ms:00000000 delay_ms
    {standard input}:532    .text.reset_relay_led:00000000 $t
    {standard input}:537    .text.reset_relay_led:00000000 reset_relay_led
    {standard input}:589    .text.reset_relay_led:0000003c $d
    {standard input}:597    .text.manage_status_led:00000000 $t
    {standard input}:602    .text.manage_status_led:00000000 manage_status_led
    {standard input}:773    .text.manage_status_led:00000104 $d
    {standard input}:1818   .bss.led_number_state_timestamp.6884:00000000 led_number_state_timestamp.6884
    {standard input}:1824   .bss.led_number_state_length.6885:00000000 led_number_state_length.6885
    {standard input}:1830   .bss.led_number_state.6883:00000000 led_number_state.6883
    {standard input}:785    .text.main:00000000 $t
    {standard input}:790    .text.main:00000000 main
    {standard input}:1299   .text.main:00000350 $d
    {standard input}:1334   .text.main:000003d4 $t
    {standard input}:1721   .text.main:00000614 $d
    {standard input}:1746   .bss.meas_invalid_count:00000000 meas_invalid_count
    {standard input}:1743   .bss.meas_invalid_count:00000000 $d
    {standard input}:1749   .text.VADC0_C0_0_IRQHandler:00000000 $t
    {standard input}:1754   .text.VADC0_C0_0_IRQHandler:00000000 VADC0_C0_0_IRQHandler
    {standard input}:1808   .text.VADC0_C0_0_IRQHandler:00000040 $d
    {standard input}:1815   .bss.led_number_state_timestamp.6884:00000000 $d
    {standard input}:1821   .bss.led_number_state_length.6885:00000000 $d
    {standard input}:1827   .bss.led_number_state.6883:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SYSTIMER_GetTime
IO_RELAY
IO_LED_RELAY
__aeabi_uidiv
DAVE_Init
ADC_MEASUREMENT_StartConversion
IO_USB_SI
IO_USB_OE
IO_USBPWR_1
IO_LED_USB1
IO_USBPWR_2
IO_LED_USB2
ADC_SENSOR
IO_SW_USB
IO_SW_UP
IO_SW_DOWN
