
USB_Changer.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000059d4  10001000  10001000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .eh_frame     00000000  100069d4  100069d4  000069d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .VENEER_Code  00000110  2000000c  100069d4  0000800c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 Stack         00000404  2000011c  00000000  0000011c  2**0
                  ALLOC
  4 .data         000000f4  20000520  10006ae4  00008520  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000194  20000614  000004f8  00008614  2**2
                  ALLOC
  6 .no_init      00000004  20003ffc  00003ee0  0000011c  2**2
                  ALLOC
  7 .debug_aranges 00000730  00000000  00000000  00008618  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   0000c8a1  00000000  00000000  00008d48  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00002252  00000000  00000000  000155e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00003dd4  00000000  00000000  0001783b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00001d28  00000000  00000000  0001b610  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00004ea2  00000000  00000000  0001d338  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000021c0  00000000  00000000  000221da  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000005a0  00000000  00000000  000243a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .build_attributes 000009cb  00000000  00000000  00024940  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

10001000 <__Vectors>:
10001000:	20 05 00 20 19 10 00 10 00 00 00 00 99 10 00 10      .. ............
10001010:	00 04 01 00 00 00 00 80                             ........

10001018 <Reset_Handler>:
    .thumb_func 
    .globl  Reset_Handler
    .type   Reset_Handler, %function
Reset_Handler: 
/* Initialize interrupt veneer */
	ldr	r1, =eROData
10001018:	4911      	ldr	r1, [pc, #68]	; (10001060 <__copy_data+0xe>)
	ldr	r2, =VeneerStart
1000101a:	4a12      	ldr	r2, [pc, #72]	; (10001064 <__copy_data+0x12>)
	ldr	r3, =VeneerEnd
1000101c:	4b12      	ldr	r3, [pc, #72]	; (10001068 <__copy_data+0x16>)
	bl  __copy_data
1000101e:	f000 f818 	bl	10001052 <__copy_data>

    ldr  r0, =SystemInit
10001022:	4812      	ldr	r0, [pc, #72]	; (1000106c <__copy_data+0x1a>)
    blx  r0
10001024:	4780      	blx	r0
	
/* Initialize data */
	ldr	r1, =DataLoadAddr
10001026:	4912      	ldr	r1, [pc, #72]	; (10001070 <__copy_data+0x1e>)
	ldr	r2, =__data_start
10001028:	4a12      	ldr	r2, [pc, #72]	; (10001074 <__copy_data+0x22>)
	ldr	r3, =__data_end
1000102a:	4b13      	ldr	r3, [pc, #76]	; (10001078 <__copy_data+0x26>)
	bl  __copy_data
1000102c:	f000 f811 	bl	10001052 <__copy_data>

/* RAM code */
	ldr	r1, =__ram_code_load
10001030:	4912      	ldr	r1, [pc, #72]	; (1000107c <__copy_data+0x2a>)
	ldr	r2, =__ram_code_start
10001032:	4a13      	ldr	r2, [pc, #76]	; (10001080 <__copy_data+0x2e>)
	ldr	r3, =__ram_code_end
10001034:	4b13      	ldr	r3, [pc, #76]	; (10001084 <__copy_data+0x32>)
	bl  __copy_data
10001036:	f000 f80c 	bl	10001052 <__copy_data>
 *    __bss_end__: end of the BSS section.
 *
 *  Both addresses must be aligned to 4 bytes boundary.
 */
#ifndef __SKIP_BSS_CLEAR
	ldr	r1, =__bss_start
1000103a:	4913      	ldr	r1, [pc, #76]	; (10001088 <__copy_data+0x36>)
	ldr	r2, =__bss_end
1000103c:	4a13      	ldr	r2, [pc, #76]	; (1000108c <__copy_data+0x3a>)

	movs	r0, 0
1000103e:	2000      	movs	r0, #0

	subs	r2, r1
10001040:	1a52      	subs	r2, r2, r1
	ble	.L_loop3_done
10001042:	dd02      	ble.n	1000104a <Reset_Handler+0x32>

.L_loop3:
	subs	r2, #4
10001044:	3a04      	subs	r2, #4
	str	r0, [r1, r2]
10001046:	5088      	str	r0, [r1, r2]
	bgt	.L_loop3
10001048:	dcfc      	bgt.n	10001044 <Reset_Handler+0x2c>
.L_loop3_done:
#endif /* __SKIP_BSS_CLEAR */

#ifndef __SKIP_LIBC_INIT_ARRAY
    ldr  r0, =__libc_init_array
1000104a:	4811      	ldr	r0, [pc, #68]	; (10001090 <__copy_data+0x3e>)
    blx  r0
1000104c:	4780      	blx	r0
#endif

    ldr  r0, =main
1000104e:	4811      	ldr	r0, [pc, #68]	; (10001094 <__copy_data+0x42>)
    blx  r0
10001050:	4780      	blx	r0

10001052 <__copy_data>:
 *    r3: end of the section to copy to
 *
 *  All addresses must be aligned to 4 bytes boundary.
 *  Uses r0
 */
	subs	r3, r2
10001052:	1a9b      	subs	r3, r3, r2
	ble	.L_loop_done
10001054:	dd03      	ble.n	1000105e <__copy_data+0xc>

.L_loop:
	subs	r3, #4
10001056:	3b04      	subs	r3, #4
	ldr	r0, [r1,r3]
10001058:	58c8      	ldr	r0, [r1, r3]
	str	r0, [r2,r3]
1000105a:	50d0      	str	r0, [r2, r3]
	bgt	.L_loop
1000105c:	dcfb      	bgt.n	10001056 <__copy_data+0x4>

.L_loop_done:
	bx  lr
1000105e:	4770      	bx	lr
    .thumb_func 
    .globl  Reset_Handler
    .type   Reset_Handler, %function
Reset_Handler: 
/* Initialize interrupt veneer */
	ldr	r1, =eROData
10001060:	100069d4 	.word	0x100069d4
	ldr	r2, =VeneerStart
10001064:	2000000c 	.word	0x2000000c
	ldr	r3, =VeneerEnd
10001068:	2000011c 	.word	0x2000011c
	bl  __copy_data

    ldr  r0, =SystemInit
1000106c:	1000109d 	.word	0x1000109d
    blx  r0
	
/* Initialize data */
	ldr	r1, =DataLoadAddr
10001070:	10006ae4 	.word	0x10006ae4
	ldr	r2, =__data_start
10001074:	20000520 	.word	0x20000520
	ldr	r3, =__data_end
10001078:	20000614 	.word	0x20000614
	bl  __copy_data

/* RAM code */
	ldr	r1, =__ram_code_load
1000107c:	10006bd8 	.word	0x10006bd8
	ldr	r2, =__ram_code_start
10001080:	20000614 	.word	0x20000614
	ldr	r3, =__ram_code_end
10001084:	20000614 	.word	0x20000614
 *    __bss_end__: end of the BSS section.
 *
 *  Both addresses must be aligned to 4 bytes boundary.
 */
#ifndef __SKIP_BSS_CLEAR
	ldr	r1, =__bss_start
10001088:	20000614 	.word	0x20000614
	ldr	r2, =__bss_end
1000108c:	200007a8 	.word	0x200007a8
	bgt	.L_loop3
.L_loop3_done:
#endif /* __SKIP_BSS_CLEAR */

#ifndef __SKIP_LIBC_INIT_ARRAY
    ldr  r0, =__libc_init_array
10001090:	10002f45 	.word	0x10002f45
    blx  r0
#endif

    ldr  r0, =main
10001094:	10002555 	.word	0x10002555

10001098 <CCU40_0_IRQHandler>:
    
    .thumb_func
    .weak Default_handler
    .type Default_handler, %function
Default_handler:
    b  .
10001098:	e7fe      	b.n	10001098 <CCU40_0_IRQHandler>
	...

1000109c <SystemInit>:
/*******************************************************************************
 * API IMPLEMENTATION
 *******************************************************************************/

__WEAK void SystemInit(void)
{    
1000109c:	b580      	push	{r7, lr}
1000109e:	af00      	add	r7, sp, #0
  SystemCoreSetup();
100010a0:	f000 fe92 	bl	10001dc8 <SystemCoreSetup>
  SystemCoreClockSetup();
100010a4:	f000 fed6 	bl	10001e54 <SystemCoreClockSetup>
}
100010a8:	46bd      	mov	sp, r7
100010aa:	bd80      	pop	{r7, pc}

100010ac <SystemCoreClockUpdate>:
  
  SystemCoreClockUpdate();
}

__WEAK void SystemCoreClockUpdate(void)
{
100010ac:	b580      	push	{r7, lr}
100010ae:	af00      	add	r7, sp, #0
  static uint32_t IDIV, FDIV;

  IDIV = ((SCU_CLK->CLKCR) & SCU_CLK_CLKCR_IDIV_Msk) >> SCU_CLK_CLKCR_IDIV_Pos;
100010b0:	4b12      	ldr	r3, [pc, #72]	; (100010fc <SystemCoreClockUpdate+0x50>)
100010b2:	681a      	ldr	r2, [r3, #0]
100010b4:	23ff      	movs	r3, #255	; 0xff
100010b6:	021b      	lsls	r3, r3, #8
100010b8:	4013      	ands	r3, r2
100010ba:	0a1a      	lsrs	r2, r3, #8
100010bc:	4b10      	ldr	r3, [pc, #64]	; (10001100 <SystemCoreClockUpdate+0x54>)
100010be:	601a      	str	r2, [r3, #0]
  FDIV = ((SCU_CLK->CLKCR) & SCU_CLK_CLKCR_FDIV_Msk) >> SCU_CLK_CLKCR_FDIV_Pos;
100010c0:	4b0e      	ldr	r3, [pc, #56]	; (100010fc <SystemCoreClockUpdate+0x50>)
100010c2:	681b      	ldr	r3, [r3, #0]
100010c4:	22ff      	movs	r2, #255	; 0xff
100010c6:	401a      	ands	r2, r3
100010c8:	4b0e      	ldr	r3, [pc, #56]	; (10001104 <SystemCoreClockUpdate+0x58>)
100010ca:	601a      	str	r2, [r3, #0]
  
  if (IDIV != 0)
100010cc:	4b0c      	ldr	r3, [pc, #48]	; (10001100 <SystemCoreClockUpdate+0x54>)
100010ce:	681b      	ldr	r3, [r3, #0]
100010d0:	2b00      	cmp	r3, #0
100010d2:	d00e      	beq.n	100010f2 <SystemCoreClockUpdate+0x46>
  {
    /* Fractional divider is enabled and used */
    SystemCoreClock = ((DCO1_FREQUENCY << 6U) / ((IDIV << 8) + FDIV)) << 1U;
100010d4:	4b0a      	ldr	r3, [pc, #40]	; (10001100 <SystemCoreClockUpdate+0x54>)
100010d6:	681b      	ldr	r3, [r3, #0]
100010d8:	021a      	lsls	r2, r3, #8
100010da:	4b0a      	ldr	r3, [pc, #40]	; (10001104 <SystemCoreClockUpdate+0x58>)
100010dc:	681b      	ldr	r3, [r3, #0]
100010de:	18d3      	adds	r3, r2, r3
100010e0:	4809      	ldr	r0, [pc, #36]	; (10001108 <SystemCoreClockUpdate+0x5c>)
100010e2:	1c19      	adds	r1, r3, #0
100010e4:	f001 fd88 	bl	10002bf8 <__aeabi_uidiv>
100010e8:	1c03      	adds	r3, r0, #0
100010ea:	005a      	lsls	r2, r3, #1
100010ec:	4b07      	ldr	r3, [pc, #28]	; (1000110c <SystemCoreClockUpdate+0x60>)
100010ee:	601a      	str	r2, [r3, #0]
100010f0:	e002      	b.n	100010f8 <SystemCoreClockUpdate+0x4c>
  }
  else
  {
    /* Fractional divider bypassed. Simply divide DCO_DCLK by 2 */
    SystemCoreClock = DCO1_FREQUENCY >> 1U;
100010f2:	4b06      	ldr	r3, [pc, #24]	; (1000110c <SystemCoreClockUpdate+0x60>)
100010f4:	4a06      	ldr	r2, [pc, #24]	; (10001110 <SystemCoreClockUpdate+0x64>)
100010f6:	601a      	str	r2, [r3, #0]
  }
}
100010f8:	46bd      	mov	sp, r7
100010fa:	bd80      	pop	{r7, pc}
100010fc:	40010300 	.word	0x40010300
10001100:	20000614 	.word	0x20000614
10001104:	20000618 	.word	0x20000618
10001108:	f4240000 	.word	0xf4240000
1000110c:	20003ffc 	.word	0x20003ffc
10001110:	01e84800 	.word	0x01e84800

10001114 <XMC_GPIO_Init>:
/*******************************************************************************
 * API IMPLEMENTATION
 *******************************************************************************/

void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const config)
{
10001114:	b590      	push	{r4, r7, lr}
10001116:	b085      	sub	sp, #20
10001118:	af00      	add	r7, sp, #0
1000111a:	60f8      	str	r0, [r7, #12]
1000111c:	607a      	str	r2, [r7, #4]
1000111e:	230b      	movs	r3, #11
10001120:	18fb      	adds	r3, r7, r3
10001122:	1c0a      	adds	r2, r1, #0
10001124:	701a      	strb	r2, [r3, #0]
  XMC_ASSERT("XMC_GPIO_Init: Invalid port", XMC_GPIO_CHECK_PORT(port));
  XMC_ASSERT("XMC_GPIO_Init: Invalid mode", XMC_GPIO_IsModeValid(config->mode));
  XMC_ASSERT("XMC_GPIO_Init: Invalid input hysteresis", XMC_GPIO_CHECK_INPUT_HYSTERESIS(config->input_hysteresis));

  /* Switch to input */
  port->IOCR[pin >> 2U] &= ~(uint32_t)((uint32_t)PORT_IOCR_PC_Msk << (PORT_IOCR_PC_Size * (pin & 0x3U)));
10001126:	230b      	movs	r3, #11
10001128:	18fb      	adds	r3, r7, r3
1000112a:	781b      	ldrb	r3, [r3, #0]
1000112c:	089b      	lsrs	r3, r3, #2
1000112e:	b2db      	uxtb	r3, r3
10001130:	1c18      	adds	r0, r3, #0
10001132:	230b      	movs	r3, #11
10001134:	18fb      	adds	r3, r7, r3
10001136:	781b      	ldrb	r3, [r3, #0]
10001138:	089b      	lsrs	r3, r3, #2
1000113a:	b2db      	uxtb	r3, r3
1000113c:	1c1a      	adds	r2, r3, #0
1000113e:	68fb      	ldr	r3, [r7, #12]
10001140:	3204      	adds	r2, #4
10001142:	0092      	lsls	r2, r2, #2
10001144:	58d3      	ldr	r3, [r2, r3]
10001146:	220b      	movs	r2, #11
10001148:	18ba      	adds	r2, r7, r2
1000114a:	7812      	ldrb	r2, [r2, #0]
1000114c:	2103      	movs	r1, #3
1000114e:	400a      	ands	r2, r1
10001150:	00d2      	lsls	r2, r2, #3
10001152:	1c11      	adds	r1, r2, #0
10001154:	22f8      	movs	r2, #248	; 0xf8
10001156:	408a      	lsls	r2, r1
10001158:	43d2      	mvns	r2, r2
1000115a:	401a      	ands	r2, r3
1000115c:	1c11      	adds	r1, r2, #0
1000115e:	68fb      	ldr	r3, [r7, #12]
10001160:	1d02      	adds	r2, r0, #4
10001162:	0092      	lsls	r2, r2, #2
10001164:	50d1      	str	r1, [r2, r3]

  /* HW port control is disabled */
  port->HWSEL &= ~(uint32_t)((uint32_t)PORT_HWSEL_Msk << ((uint32_t)pin << 1U));
10001166:	68fb      	ldr	r3, [r7, #12]
10001168:	6f5b      	ldr	r3, [r3, #116]	; 0x74
1000116a:	220b      	movs	r2, #11
1000116c:	18ba      	adds	r2, r7, r2
1000116e:	7812      	ldrb	r2, [r2, #0]
10001170:	0052      	lsls	r2, r2, #1
10001172:	1c11      	adds	r1, r2, #0
10001174:	2203      	movs	r2, #3
10001176:	408a      	lsls	r2, r1
10001178:	43d2      	mvns	r2, r2
1000117a:	401a      	ands	r2, r3
1000117c:	68fb      	ldr	r3, [r7, #12]
1000117e:	675a      	str	r2, [r3, #116]	; 0x74

  /* Set input hysteresis */
  port->PHCR[(uint32_t)pin >> 3U] &= ~(uint32_t)((uint32_t)PORT_PHCR_Msk << ((uint32_t)PORT_PHCR_Size * ((uint32_t)pin & 0x7U)));
10001180:	230b      	movs	r3, #11
10001182:	18fb      	adds	r3, r7, r3
10001184:	781b      	ldrb	r3, [r3, #0]
10001186:	08db      	lsrs	r3, r3, #3
10001188:	b2db      	uxtb	r3, r3
1000118a:	1c18      	adds	r0, r3, #0
1000118c:	230b      	movs	r3, #11
1000118e:	18fb      	adds	r3, r7, r3
10001190:	781b      	ldrb	r3, [r3, #0]
10001192:	08db      	lsrs	r3, r3, #3
10001194:	b2db      	uxtb	r3, r3
10001196:	1c1a      	adds	r2, r3, #0
10001198:	68fb      	ldr	r3, [r7, #12]
1000119a:	3210      	adds	r2, #16
1000119c:	0092      	lsls	r2, r2, #2
1000119e:	58d3      	ldr	r3, [r2, r3]
100011a0:	220b      	movs	r2, #11
100011a2:	18ba      	adds	r2, r7, r2
100011a4:	7812      	ldrb	r2, [r2, #0]
100011a6:	2107      	movs	r1, #7
100011a8:	400a      	ands	r2, r1
100011aa:	0092      	lsls	r2, r2, #2
100011ac:	1c11      	adds	r1, r2, #0
100011ae:	2204      	movs	r2, #4
100011b0:	408a      	lsls	r2, r1
100011b2:	43d2      	mvns	r2, r2
100011b4:	401a      	ands	r2, r3
100011b6:	1c11      	adds	r1, r2, #0
100011b8:	68fb      	ldr	r3, [r7, #12]
100011ba:	1c02      	adds	r2, r0, #0
100011bc:	3210      	adds	r2, #16
100011be:	0092      	lsls	r2, r2, #2
100011c0:	50d1      	str	r1, [r2, r3]
  port->PHCR[(uint32_t)pin >> 3U] |= (uint32_t)config->input_hysteresis << ((uint32_t)PORT_PHCR_Size * ((uint32_t)pin & 0x7U));
100011c2:	230b      	movs	r3, #11
100011c4:	18fb      	adds	r3, r7, r3
100011c6:	781b      	ldrb	r3, [r3, #0]
100011c8:	08db      	lsrs	r3, r3, #3
100011ca:	b2db      	uxtb	r3, r3
100011cc:	1c18      	adds	r0, r3, #0
100011ce:	230b      	movs	r3, #11
100011d0:	18fb      	adds	r3, r7, r3
100011d2:	781b      	ldrb	r3, [r3, #0]
100011d4:	08db      	lsrs	r3, r3, #3
100011d6:	b2db      	uxtb	r3, r3
100011d8:	1c1a      	adds	r2, r3, #0
100011da:	68fb      	ldr	r3, [r7, #12]
100011dc:	3210      	adds	r2, #16
100011de:	0092      	lsls	r2, r2, #2
100011e0:	58d2      	ldr	r2, [r2, r3]
100011e2:	687b      	ldr	r3, [r7, #4]
100011e4:	785b      	ldrb	r3, [r3, #1]
100011e6:	1c1c      	adds	r4, r3, #0
100011e8:	230b      	movs	r3, #11
100011ea:	18fb      	adds	r3, r7, r3
100011ec:	781b      	ldrb	r3, [r3, #0]
100011ee:	2107      	movs	r1, #7
100011f0:	400b      	ands	r3, r1
100011f2:	009b      	lsls	r3, r3, #2
100011f4:	409c      	lsls	r4, r3
100011f6:	1c23      	adds	r3, r4, #0
100011f8:	431a      	orrs	r2, r3
100011fa:	1c11      	adds	r1, r2, #0
100011fc:	68fb      	ldr	r3, [r7, #12]
100011fe:	1c02      	adds	r2, r0, #0
10001200:	3210      	adds	r2, #16
10001202:	0092      	lsls	r2, r2, #2
10001204:	50d1      	str	r1, [r2, r3]

  /* Enable digital input */
  if (XMC_GPIO_CHECK_ANALOG_PORT(port))
10001206:	68fb      	ldr	r3, [r7, #12]
10001208:	4a20      	ldr	r2, [pc, #128]	; (1000128c <XMC_GPIO_Init+0x178>)
1000120a:	4293      	cmp	r3, r2
1000120c:	d10b      	bne.n	10001226 <XMC_GPIO_Init+0x112>
  {
    port->PDISC &= ~(uint32_t)((uint32_t)0x1U << pin);
1000120e:	68fb      	ldr	r3, [r7, #12]
10001210:	6e1b      	ldr	r3, [r3, #96]	; 0x60
10001212:	220b      	movs	r2, #11
10001214:	18ba      	adds	r2, r7, r2
10001216:	7812      	ldrb	r2, [r2, #0]
10001218:	2101      	movs	r1, #1
1000121a:	4091      	lsls	r1, r2
1000121c:	1c0a      	adds	r2, r1, #0
1000121e:	43d2      	mvns	r2, r2
10001220:	401a      	ands	r2, r3
10001222:	68fb      	ldr	r3, [r7, #12]
10001224:	661a      	str	r2, [r3, #96]	; 0x60
  }

  if ((config->mode & XMC_GPIO_MODE_OE) != 0)
10001226:	687b      	ldr	r3, [r7, #4]
10001228:	781b      	ldrb	r3, [r3, #0]
1000122a:	b2db      	uxtb	r3, r3
1000122c:	b25b      	sxtb	r3, r3
1000122e:	2b00      	cmp	r3, #0
10001230:	da07      	bge.n	10001242 <XMC_GPIO_Init+0x12e>
  {
    /* If output is enabled */

    /* Set output level */
    port->OMR = (uint32_t)config->output_level << pin;
10001232:	687b      	ldr	r3, [r7, #4]
10001234:	685a      	ldr	r2, [r3, #4]
10001236:	230b      	movs	r3, #11
10001238:	18fb      	adds	r3, r7, r3
1000123a:	781b      	ldrb	r3, [r3, #0]
1000123c:	409a      	lsls	r2, r3
1000123e:	68fb      	ldr	r3, [r7, #12]
10001240:	605a      	str	r2, [r3, #4]
  }

  /* Set mode */
  port->IOCR[pin >> 2U] |= (uint32_t)config->mode << (PORT_IOCR_PC_Size * (pin & 0x3U));
10001242:	230b      	movs	r3, #11
10001244:	18fb      	adds	r3, r7, r3
10001246:	781b      	ldrb	r3, [r3, #0]
10001248:	089b      	lsrs	r3, r3, #2
1000124a:	b2db      	uxtb	r3, r3
1000124c:	1c18      	adds	r0, r3, #0
1000124e:	230b      	movs	r3, #11
10001250:	18fb      	adds	r3, r7, r3
10001252:	781b      	ldrb	r3, [r3, #0]
10001254:	089b      	lsrs	r3, r3, #2
10001256:	b2db      	uxtb	r3, r3
10001258:	1c1a      	adds	r2, r3, #0
1000125a:	68fb      	ldr	r3, [r7, #12]
1000125c:	3204      	adds	r2, #4
1000125e:	0092      	lsls	r2, r2, #2
10001260:	58d2      	ldr	r2, [r2, r3]
10001262:	687b      	ldr	r3, [r7, #4]
10001264:	781b      	ldrb	r3, [r3, #0]
10001266:	1c1c      	adds	r4, r3, #0
10001268:	230b      	movs	r3, #11
1000126a:	18fb      	adds	r3, r7, r3
1000126c:	781b      	ldrb	r3, [r3, #0]
1000126e:	2103      	movs	r1, #3
10001270:	400b      	ands	r3, r1
10001272:	00db      	lsls	r3, r3, #3
10001274:	409c      	lsls	r4, r3
10001276:	1c23      	adds	r3, r4, #0
10001278:	431a      	orrs	r2, r3
1000127a:	1c11      	adds	r1, r2, #0
1000127c:	68fb      	ldr	r3, [r7, #12]
1000127e:	1d02      	adds	r2, r0, #4
10001280:	0092      	lsls	r2, r2, #2
10001282:	50d1      	str	r1, [r2, r3]
}
10001284:	46bd      	mov	sp, r7
10001286:	b005      	add	sp, #20
10001288:	bd90      	pop	{r4, r7, pc}
1000128a:	46c0      	nop			; (mov r8, r8)
1000128c:	40040200 	.word	0x40040200

10001290 <XMC_SCU_LockProtectedBits>:
#endif
}

/* API to lock protected bitfields from being modified */
void XMC_SCU_LockProtectedBits(void)
{
10001290:	b580      	push	{r7, lr}
10001292:	af00      	add	r7, sp, #0
  SCU_GENERAL->PASSWD = SCU_GCU_PASSWD_PROT_ENABLE;
10001294:	4b02      	ldr	r3, [pc, #8]	; (100012a0 <XMC_SCU_LockProtectedBits+0x10>)
10001296:	22c3      	movs	r2, #195	; 0xc3
10001298:	625a      	str	r2, [r3, #36]	; 0x24
}
1000129a:	46bd      	mov	sp, r7
1000129c:	bd80      	pop	{r7, pc}
1000129e:	46c0      	nop			; (mov r8, r8)
100012a0:	40010000 	.word	0x40010000

100012a4 <XMC_SCU_UnlockProtectedBits>:

/* API to make protected bitfields available for modification */
void XMC_SCU_UnlockProtectedBits(void)
{
100012a4:	b580      	push	{r7, lr}
100012a6:	af00      	add	r7, sp, #0
  SCU_GENERAL->PASSWD = SCU_GCU_PASSWD_PROT_DISABLE;
100012a8:	4b05      	ldr	r3, [pc, #20]	; (100012c0 <XMC_SCU_UnlockProtectedBits+0x1c>)
100012aa:	22c0      	movs	r2, #192	; 0xc0
100012ac:	625a      	str	r2, [r3, #36]	; 0x24

  while (((SCU_GENERAL->PASSWD) & SCU_GENERAL_PASSWD_PROTS_Msk))
100012ae:	46c0      	nop			; (mov r8, r8)
100012b0:	4b03      	ldr	r3, [pc, #12]	; (100012c0 <XMC_SCU_UnlockProtectedBits+0x1c>)
100012b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
100012b4:	2204      	movs	r2, #4
100012b6:	4013      	ands	r3, r2
100012b8:	d1fa      	bne.n	100012b0 <XMC_SCU_UnlockProtectedBits+0xc>
  {
    /* Loop until the lock is removed */
  }
}
100012ba:	46bd      	mov	sp, r7
100012bc:	bd80      	pop	{r7, pc}
100012be:	46c0      	nop			; (mov r8, r8)
100012c0:	40010000 	.word	0x40010000

100012c4 <XMC_SCU_CLOCK_Init>:
}


/* API which initializes the clock tree ofthe device */
void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config)
{
100012c4:	b580      	push	{r7, lr}
100012c6:	b082      	sub	sp, #8
100012c8:	af00      	add	r7, sp, #0
100012ca:	6078      	str	r0, [r7, #4]
  /* Remove protection */
  XMC_SCU_UnlockProtectedBits();
100012cc:	f7ff ffea 	bl	100012a4 <XMC_SCU_UnlockProtectedBits>
  SCU_CLK->CLKCR1 = (SCU_CLK->CLKCR1 & ~SCU_CLK_CLKCR1_DCLKSEL_Msk) |
                    config->dclk_src;

#endif
  /* Update PCLK selection mux. */
  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_PCLKSEL_Msk | SCU_CLK_CLKCR_RTCCLKSEL_Msk)) |
100012d0:	4a0c      	ldr	r2, [pc, #48]	; (10001304 <XMC_SCU_CLOCK_Init+0x40>)
100012d2:	4b0c      	ldr	r3, [pc, #48]	; (10001304 <XMC_SCU_CLOCK_Init+0x40>)
100012d4:	681b      	ldr	r3, [r3, #0]
100012d6:	490c      	ldr	r1, [pc, #48]	; (10001308 <XMC_SCU_CLOCK_Init+0x44>)
100012d8:	4019      	ands	r1, r3
                   config->rtc_src |
100012da:	687b      	ldr	r3, [r7, #4]
100012dc:	689b      	ldr	r3, [r3, #8]
  SCU_CLK->CLKCR1 = (SCU_CLK->CLKCR1 & ~SCU_CLK_CLKCR1_DCLKSEL_Msk) |
                    config->dclk_src;

#endif
  /* Update PCLK selection mux. */
  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_PCLKSEL_Msk | SCU_CLK_CLKCR_RTCCLKSEL_Msk)) |
100012de:	4319      	orrs	r1, r3
                   config->rtc_src |
                   config->pclk_src;
100012e0:	687b      	ldr	r3, [r7, #4]
100012e2:	685b      	ldr	r3, [r3, #4]
                    config->dclk_src;

#endif
  /* Update PCLK selection mux. */
  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_PCLKSEL_Msk | SCU_CLK_CLKCR_RTCCLKSEL_Msk)) |
                   config->rtc_src |
100012e4:	430b      	orrs	r3, r1
  SCU_CLK->CLKCR1 = (SCU_CLK->CLKCR1 & ~SCU_CLK_CLKCR1_DCLKSEL_Msk) |
                    config->dclk_src;

#endif
  /* Update PCLK selection mux. */
  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_PCLKSEL_Msk | SCU_CLK_CLKCR_RTCCLKSEL_Msk)) |
100012e6:	6013      	str	r3, [r2, #0]
                   config->rtc_src |
                   config->pclk_src;

  /* Close the lock opened above. */
  XMC_SCU_LockProtectedBits();
100012e8:	f7ff ffd2 	bl	10001290 <XMC_SCU_LockProtectedBits>

  /* Update the dividers now */
  XMC_SCU_CLOCK_ScaleMCLKFrequency(config->idiv, config->fdiv);
100012ec:	687b      	ldr	r3, [r7, #4]
100012ee:	785b      	ldrb	r3, [r3, #1]
100012f0:	1c1a      	adds	r2, r3, #0
100012f2:	687b      	ldr	r3, [r7, #4]
100012f4:	781b      	ldrb	r3, [r3, #0]
100012f6:	1c10      	adds	r0, r2, #0
100012f8:	1c19      	adds	r1, r3, #0
100012fa:	f000 f825 	bl	10001348 <XMC_SCU_CLOCK_ScaleMCLKFrequency>

}
100012fe:	46bd      	mov	sp, r7
10001300:	b002      	add	sp, #8
10001302:	bd80      	pop	{r7, pc}
10001304:	40010300 	.word	0x40010300
10001308:	fff0ffff 	.word	0xfff0ffff

1000130c <XMC_SCU_CLOCK_UngatePeripheralClock>:
  XMC_SCU_LockProtectedBits();
}

/* API which ungates a clock note at its source */
void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
{
1000130c:	b580      	push	{r7, lr}
1000130e:	b082      	sub	sp, #8
10001310:	af00      	add	r7, sp, #0
10001312:	1c02      	adds	r2, r0, #0
10001314:	1dbb      	adds	r3, r7, #6
10001316:	801a      	strh	r2, [r3, #0]
  XMC_SCU_UnlockProtectedBits();
10001318:	f7ff ffc4 	bl	100012a4 <XMC_SCU_UnlockProtectedBits>
  SCU_CLK->CGATCLR0 |= (uint32_t)peripheral;
1000131c:	4b09      	ldr	r3, [pc, #36]	; (10001344 <XMC_SCU_CLOCK_UngatePeripheralClock+0x38>)
1000131e:	4a09      	ldr	r2, [pc, #36]	; (10001344 <XMC_SCU_CLOCK_UngatePeripheralClock+0x38>)
10001320:	6911      	ldr	r1, [r2, #16]
10001322:	1dba      	adds	r2, r7, #6
10001324:	8812      	ldrh	r2, [r2, #0]
10001326:	430a      	orrs	r2, r1
10001328:	611a      	str	r2, [r3, #16]
  while ((SCU_CLK->CLKCR) & SCU_CLK_CLKCR_VDDC2LOW_Msk)
1000132a:	46c0      	nop			; (mov r8, r8)
1000132c:	4b05      	ldr	r3, [pc, #20]	; (10001344 <XMC_SCU_CLOCK_UngatePeripheralClock+0x38>)
1000132e:	681a      	ldr	r2, [r3, #0]
10001330:	2380      	movs	r3, #128	; 0x80
10001332:	05db      	lsls	r3, r3, #23
10001334:	4013      	ands	r3, r2
10001336:	d1f9      	bne.n	1000132c <XMC_SCU_CLOCK_UngatePeripheralClock+0x20>
  {
    /* Wait voltage suply stabilization */
  }
  XMC_SCU_LockProtectedBits();
10001338:	f7ff ffaa 	bl	10001290 <XMC_SCU_LockProtectedBits>
}
1000133c:	46bd      	mov	sp, r7
1000133e:	b002      	add	sp, #8
10001340:	bd80      	pop	{r7, pc}
10001342:	46c0      	nop			; (mov r8, r8)
10001344:	40010300 	.word	0x40010300

10001348 <XMC_SCU_CLOCK_ScaleMCLKFrequency>:
}


/* A utility routine which updates the fractional dividers in steps */
void XMC_SCU_CLOCK_ScaleMCLKFrequency(uint32_t idiv, uint32_t fdiv)
{
10001348:	b580      	push	{r7, lr}
1000134a:	b084      	sub	sp, #16
1000134c:	af00      	add	r7, sp, #0
1000134e:	6078      	str	r0, [r7, #4]
10001350:	6039      	str	r1, [r7, #0]
  /* Find out current and target value of idiv */
  uint32_t curr_idiv;

  XMC_SCU_UnlockProtectedBits();
10001352:	f7ff ffa7 	bl	100012a4 <XMC_SCU_UnlockProtectedBits>

  /* Take a snapshot of value already programmed into IDIV */
  curr_idiv = (SCU_CLK->CLKCR & SCU_CLK_CLKCR_IDIV_Msk) >> SCU_CLK_CLKCR_IDIV_Pos;
10001356:	4b21      	ldr	r3, [pc, #132]	; (100013dc <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x94>)
10001358:	681a      	ldr	r2, [r3, #0]
1000135a:	23ff      	movs	r3, #255	; 0xff
1000135c:	021b      	lsls	r3, r3, #8
1000135e:	4013      	ands	r3, r2
10001360:	0a1b      	lsrs	r3, r3, #8
10001362:	60fb      	str	r3, [r7, #12]

  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_FDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
                   (uint32_t)((fdiv & 0xffU) << SCU_CLK_CLKCR_FDIV_Pos) |
                   (uint32_t)(1023UL << SCU_CLK_CLKCR_CNTADJ_Pos);
#else
  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_FDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
10001364:	4b1d      	ldr	r3, [pc, #116]	; (100013dc <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x94>)
10001366:	4a1d      	ldr	r2, [pc, #116]	; (100013dc <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x94>)
10001368:	6812      	ldr	r2, [r2, #0]
1000136a:	491d      	ldr	r1, [pc, #116]	; (100013e0 <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x98>)
1000136c:	4011      	ands	r1, r2
1000136e:	683a      	ldr	r2, [r7, #0]
10001370:	430a      	orrs	r2, r1
                   (uint32_t)(fdiv << SCU_CLK_CLKCR_FDIV_Pos) |
10001372:	491c      	ldr	r1, [pc, #112]	; (100013e4 <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x9c>)
10001374:	430a      	orrs	r2, r1

  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_FDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
                   (uint32_t)((fdiv & 0xffU) << SCU_CLK_CLKCR_FDIV_Pos) |
                   (uint32_t)(1023UL << SCU_CLK_CLKCR_CNTADJ_Pos);
#else
  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_FDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
10001376:	601a      	str	r2, [r3, #0]
                   (uint32_t)(fdiv << SCU_CLK_CLKCR_FDIV_Pos) |
                   (uint32_t)(1023UL << SCU_CLK_CLKCR_CNTADJ_Pos);
#endif

  while ((SCU_CLK->CLKCR)& SCU_CLK_CLKCR_VDDC2LOW_Msk)
10001378:	46c0      	nop			; (mov r8, r8)
1000137a:	4b18      	ldr	r3, [pc, #96]	; (100013dc <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x94>)
1000137c:	681a      	ldr	r2, [r3, #0]
1000137e:	2380      	movs	r3, #128	; 0x80
10001380:	05db      	lsls	r3, r3, #23
10001382:	4013      	ands	r3, r2
10001384:	d1f9      	bne.n	1000137a <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x32>
  {
    /* Spin until the core supply stabilizes */
  }

  if (curr_idiv <= idiv)
10001386:	68fa      	ldr	r2, [r7, #12]
10001388:	687b      	ldr	r3, [r7, #4]
1000138a:	429a      	cmp	r2, r3
1000138c:	d806      	bhi.n	1000139c <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x54>
  {
    /* Requested IDIV is greater than currently programmed IDIV. So downscale the frequency */
    XMC_SCU_CLOCK_lFrequencyDownScaling(curr_idiv, idiv);
1000138e:	68fa      	ldr	r2, [r7, #12]
10001390:	687b      	ldr	r3, [r7, #4]
10001392:	1c10      	adds	r0, r2, #0
10001394:	1c19      	adds	r1, r3, #0
10001396:	f000 f853 	bl	10001440 <XMC_SCU_CLOCK_lFrequencyDownScaling>
1000139a:	e005      	b.n	100013a8 <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x60>
  }
  else
  {
    /* Requested IDIV is lower than currently programmed IDIV. So upscale the frequency */
    XMC_SCU_CLOCK_lFrequencyUpScaling(curr_idiv, idiv);
1000139c:	68fa      	ldr	r2, [r7, #12]
1000139e:	687b      	ldr	r3, [r7, #4]
100013a0:	1c10      	adds	r0, r2, #0
100013a2:	1c19      	adds	r1, r3, #0
100013a4:	f000 f822 	bl	100013ec <XMC_SCU_CLOCK_lFrequencyUpScaling>
  }

  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_IDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
100013a8:	4b0c      	ldr	r3, [pc, #48]	; (100013dc <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x94>)
100013aa:	4a0c      	ldr	r2, [pc, #48]	; (100013dc <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x94>)
100013ac:	6812      	ldr	r2, [r2, #0]
100013ae:	490e      	ldr	r1, [pc, #56]	; (100013e8 <XMC_SCU_CLOCK_ScaleMCLKFrequency+0xa0>)
100013b0:	4011      	ands	r1, r2
                   (uint32_t)(idiv << SCU_CLK_CLKCR_IDIV_Pos) | (uint32_t)(1023UL << SCU_CLK_CLKCR_CNTADJ_Pos);
100013b2:	687a      	ldr	r2, [r7, #4]
100013b4:	0212      	lsls	r2, r2, #8
  {
    /* Requested IDIV is lower than currently programmed IDIV. So upscale the frequency */
    XMC_SCU_CLOCK_lFrequencyUpScaling(curr_idiv, idiv);
  }

  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_IDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
100013b6:	430a      	orrs	r2, r1
                   (uint32_t)(idiv << SCU_CLK_CLKCR_IDIV_Pos) | (uint32_t)(1023UL << SCU_CLK_CLKCR_CNTADJ_Pos);
100013b8:	490a      	ldr	r1, [pc, #40]	; (100013e4 <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x9c>)
100013ba:	430a      	orrs	r2, r1
  {
    /* Requested IDIV is lower than currently programmed IDIV. So upscale the frequency */
    XMC_SCU_CLOCK_lFrequencyUpScaling(curr_idiv, idiv);
  }

  SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_IDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
100013bc:	601a      	str	r2, [r3, #0]
                   (uint32_t)(idiv << SCU_CLK_CLKCR_IDIV_Pos) | (uint32_t)(1023UL << SCU_CLK_CLKCR_CNTADJ_Pos);

  while ((SCU_CLK->CLKCR) & SCU_CLK_CLKCR_VDDC2LOW_Msk)
100013be:	46c0      	nop			; (mov r8, r8)
100013c0:	4b06      	ldr	r3, [pc, #24]	; (100013dc <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x94>)
100013c2:	681a      	ldr	r2, [r3, #0]
100013c4:	2380      	movs	r3, #128	; 0x80
100013c6:	05db      	lsls	r3, r3, #23
100013c8:	4013      	ands	r3, r2
100013ca:	d1f9      	bne.n	100013c0 <XMC_SCU_CLOCK_ScaleMCLKFrequency+0x78>
  {
    /* Wait voltage suply stabilization */
  }

  XMC_SCU_LockProtectedBits();
100013cc:	f7ff ff60 	bl	10001290 <XMC_SCU_LockProtectedBits>

  SystemCoreClockUpdate();
100013d0:	f7ff fe6c 	bl	100010ac <SystemCoreClockUpdate>

}
100013d4:	46bd      	mov	sp, r7
100013d6:	b004      	add	sp, #16
100013d8:	bd80      	pop	{r7, pc}
100013da:	46c0      	nop			; (mov r8, r8)
100013dc:	40010300 	.word	0x40010300
100013e0:	c00fff00 	.word	0xc00fff00
100013e4:	3ff00000 	.word	0x3ff00000
100013e8:	c00f00ff 	.word	0xc00f00ff

100013ec <XMC_SCU_CLOCK_lFrequencyUpScaling>:

/* Utility routine to perform frequency up scaling */
static void XMC_SCU_CLOCK_lFrequencyUpScaling(uint32_t curr_idiv, uint32_t target_idiv)
{
100013ec:	b580      	push	{r7, lr}
100013ee:	b082      	sub	sp, #8
100013f0:	af00      	add	r7, sp, #0
100013f2:	6078      	str	r0, [r7, #4]
100013f4:	6039      	str	r1, [r7, #0]
  while (curr_idiv > (target_idiv * 4UL))
100013f6:	e014      	b.n	10001422 <XMC_SCU_CLOCK_lFrequencyUpScaling+0x36>
  {
    curr_idiv = (uint32_t)(curr_idiv >> 2UL);   /* Divide by 4. */
100013f8:	687b      	ldr	r3, [r7, #4]
100013fa:	089b      	lsrs	r3, r3, #2
100013fc:	607b      	str	r3, [r7, #4]

    SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_IDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
100013fe:	4b0d      	ldr	r3, [pc, #52]	; (10001434 <XMC_SCU_CLOCK_lFrequencyUpScaling+0x48>)
10001400:	4a0c      	ldr	r2, [pc, #48]	; (10001434 <XMC_SCU_CLOCK_lFrequencyUpScaling+0x48>)
10001402:	6812      	ldr	r2, [r2, #0]
10001404:	490c      	ldr	r1, [pc, #48]	; (10001438 <XMC_SCU_CLOCK_lFrequencyUpScaling+0x4c>)
10001406:	4011      	ands	r1, r2
                     (uint32_t)(curr_idiv << SCU_CLK_CLKCR_IDIV_Pos) |
10001408:	687a      	ldr	r2, [r7, #4]
1000140a:	0212      	lsls	r2, r2, #8
{
  while (curr_idiv > (target_idiv * 4UL))
  {
    curr_idiv = (uint32_t)(curr_idiv >> 2UL);   /* Divide by 4. */

    SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_IDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
1000140c:	430a      	orrs	r2, r1
                     (uint32_t)(curr_idiv << SCU_CLK_CLKCR_IDIV_Pos) |
1000140e:	490b      	ldr	r1, [pc, #44]	; (1000143c <XMC_SCU_CLOCK_lFrequencyUpScaling+0x50>)
10001410:	430a      	orrs	r2, r1
{
  while (curr_idiv > (target_idiv * 4UL))
  {
    curr_idiv = (uint32_t)(curr_idiv >> 2UL);   /* Divide by 4. */

    SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_IDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
10001412:	601a      	str	r2, [r3, #0]
                     (uint32_t)(curr_idiv << SCU_CLK_CLKCR_IDIV_Pos) |
                     (uint32_t)(1023UL << SCU_CLK_CLKCR_CNTADJ_Pos);

    while (SCU_CLK->CLKCR & SCU_CLK_CLKCR_VDDC2LOW_Msk)
10001414:	46c0      	nop			; (mov r8, r8)
10001416:	4b07      	ldr	r3, [pc, #28]	; (10001434 <XMC_SCU_CLOCK_lFrequencyUpScaling+0x48>)
10001418:	681a      	ldr	r2, [r3, #0]
1000141a:	2380      	movs	r3, #128	; 0x80
1000141c:	05db      	lsls	r3, r3, #23
1000141e:	4013      	ands	r3, r2
10001420:	d1f9      	bne.n	10001416 <XMC_SCU_CLOCK_lFrequencyUpScaling+0x2a>
}

/* Utility routine to perform frequency up scaling */
static void XMC_SCU_CLOCK_lFrequencyUpScaling(uint32_t curr_idiv, uint32_t target_idiv)
{
  while (curr_idiv > (target_idiv * 4UL))
10001422:	683b      	ldr	r3, [r7, #0]
10001424:	009a      	lsls	r2, r3, #2
10001426:	687b      	ldr	r3, [r7, #4]
10001428:	429a      	cmp	r2, r3
1000142a:	d3e5      	bcc.n	100013f8 <XMC_SCU_CLOCK_lFrequencyUpScaling+0xc>
    while (SCU_CLK->CLKCR & SCU_CLK_CLKCR_VDDC2LOW_Msk)
    {
      /* Wait voltage suply stabilization */
    }
  }
}
1000142c:	46bd      	mov	sp, r7
1000142e:	b002      	add	sp, #8
10001430:	bd80      	pop	{r7, pc}
10001432:	46c0      	nop			; (mov r8, r8)
10001434:	40010300 	.word	0x40010300
10001438:	c00f00ff 	.word	0xc00f00ff
1000143c:	3ff00000 	.word	0x3ff00000

10001440 <XMC_SCU_CLOCK_lFrequencyDownScaling>:

/* Utility routine to perform frequency down scaling */
static void XMC_SCU_CLOCK_lFrequencyDownScaling(uint32_t curr_idiv, uint32_t target_idiv)
{
10001440:	b580      	push	{r7, lr}
10001442:	b082      	sub	sp, #8
10001444:	af00      	add	r7, sp, #0
10001446:	6078      	str	r0, [r7, #4]
10001448:	6039      	str	r1, [r7, #0]

  while ((curr_idiv * 4UL) < target_idiv)
1000144a:	e019      	b.n	10001480 <XMC_SCU_CLOCK_lFrequencyDownScaling+0x40>
  {
    if (0U == curr_idiv)
1000144c:	687b      	ldr	r3, [r7, #4]
1000144e:	2b00      	cmp	r3, #0
10001450:	d101      	bne.n	10001456 <XMC_SCU_CLOCK_lFrequencyDownScaling+0x16>
    {
      curr_idiv = 1U;
10001452:	2301      	movs	r3, #1
10001454:	607b      	str	r3, [r7, #4]
    }
    curr_idiv  = (uint32_t)(curr_idiv << 2UL);   /* Multiply by 4. */
10001456:	687b      	ldr	r3, [r7, #4]
10001458:	009b      	lsls	r3, r3, #2
1000145a:	607b      	str	r3, [r7, #4]
    SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_IDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
1000145c:	4b0c      	ldr	r3, [pc, #48]	; (10001490 <XMC_SCU_CLOCK_lFrequencyDownScaling+0x50>)
1000145e:	4a0c      	ldr	r2, [pc, #48]	; (10001490 <XMC_SCU_CLOCK_lFrequencyDownScaling+0x50>)
10001460:	6812      	ldr	r2, [r2, #0]
10001462:	490c      	ldr	r1, [pc, #48]	; (10001494 <XMC_SCU_CLOCK_lFrequencyDownScaling+0x54>)
10001464:	4011      	ands	r1, r2
                     (uint32_t)(curr_idiv << SCU_CLK_CLKCR_IDIV_Pos) |
10001466:	687a      	ldr	r2, [r7, #4]
10001468:	0212      	lsls	r2, r2, #8
    if (0U == curr_idiv)
    {
      curr_idiv = 1U;
    }
    curr_idiv  = (uint32_t)(curr_idiv << 2UL);   /* Multiply by 4. */
    SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_IDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
1000146a:	430a      	orrs	r2, r1
                     (uint32_t)(curr_idiv << SCU_CLK_CLKCR_IDIV_Pos) |
1000146c:	490a      	ldr	r1, [pc, #40]	; (10001498 <XMC_SCU_CLOCK_lFrequencyDownScaling+0x58>)
1000146e:	430a      	orrs	r2, r1
    if (0U == curr_idiv)
    {
      curr_idiv = 1U;
    }
    curr_idiv  = (uint32_t)(curr_idiv << 2UL);   /* Multiply by 4. */
    SCU_CLK->CLKCR = (SCU_CLK->CLKCR & (uint32_t)~(SCU_CLK_CLKCR_IDIV_Msk | SCU_CLK_CLKCR_CNTADJ_Msk)) |
10001470:	601a      	str	r2, [r3, #0]
                     (uint32_t)(curr_idiv << SCU_CLK_CLKCR_IDIV_Pos) |
                     (uint32_t)(1023UL << SCU_CLK_CLKCR_CNTADJ_Pos);

    while (SCU_CLK->CLKCR & SCU_CLK_CLKCR_VDDC2LOW_Msk)
10001472:	46c0      	nop			; (mov r8, r8)
10001474:	4b06      	ldr	r3, [pc, #24]	; (10001490 <XMC_SCU_CLOCK_lFrequencyDownScaling+0x50>)
10001476:	681a      	ldr	r2, [r3, #0]
10001478:	2380      	movs	r3, #128	; 0x80
1000147a:	05db      	lsls	r3, r3, #23
1000147c:	4013      	ands	r3, r2
1000147e:	d1f9      	bne.n	10001474 <XMC_SCU_CLOCK_lFrequencyDownScaling+0x34>

/* Utility routine to perform frequency down scaling */
static void XMC_SCU_CLOCK_lFrequencyDownScaling(uint32_t curr_idiv, uint32_t target_idiv)
{

  while ((curr_idiv * 4UL) < target_idiv)
10001480:	687b      	ldr	r3, [r7, #4]
10001482:	009a      	lsls	r2, r3, #2
10001484:	683b      	ldr	r3, [r7, #0]
10001486:	429a      	cmp	r2, r3
10001488:	d3e0      	bcc.n	1000144c <XMC_SCU_CLOCK_lFrequencyDownScaling+0xc>
    while (SCU_CLK->CLKCR & SCU_CLK_CLKCR_VDDC2LOW_Msk)
    {
      /* Wait voltage suply stabilization */
    }
  }
}
1000148a:	46bd      	mov	sp, r7
1000148c:	b002      	add	sp, #8
1000148e:	bd80      	pop	{r7, pc}
10001490:	40010300 	.word	0x40010300
10001494:	c00f00ff 	.word	0xc00f00ff
10001498:	3ff00000 	.word	0x3ff00000

1000149c <XMC_CCU4_StartPrescaler>:
 * \par<b>Related APIs:</b><br>
 * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR>
 * XMC_CCU4_StopPrescaler().
 */
__STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
{
1000149c:	b580      	push	{r7, lr}
1000149e:	b082      	sub	sp, #8
100014a0:	af00      	add	r7, sp, #0
100014a2:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
  module->GIDLC = (uint32_t) CCU4_GIDLC_SPRB_Msk;
100014a4:	687b      	ldr	r3, [r7, #4]
100014a6:	2280      	movs	r2, #128	; 0x80
100014a8:	0052      	lsls	r2, r2, #1
100014aa:	60da      	str	r2, [r3, #12]
}
100014ac:	46bd      	mov	sp, r7
100014ae:	b002      	add	sp, #8
100014b0:	bd80      	pop	{r7, pc}
100014b2:	46c0      	nop			; (mov r8, r8)

100014b4 <XMC_CCU4_lUngateClock>:
    XMC_ASSERT("XMC_CCU4_lGateClock:Invalid Module Pointer", 0);
  }
}

__STATIC_INLINE void XMC_CCU4_lUngateClock(const XMC_CCU4_MODULE_t *const module)
{
100014b4:	b580      	push	{r7, lr}
100014b6:	b082      	sub	sp, #8
100014b8:	af00      	add	r7, sp, #0
100014ba:	6078      	str	r0, [r7, #4]
  if (module == CCU40)
100014bc:	687b      	ldr	r3, [r7, #4]
100014be:	4a04      	ldr	r2, [pc, #16]	; (100014d0 <XMC_CCU4_lUngateClock+0x1c>)
100014c0:	4293      	cmp	r3, r2
100014c2:	d102      	bne.n	100014ca <XMC_CCU4_lUngateClock+0x16>
  {
    XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
100014c4:	2004      	movs	r0, #4
100014c6:	f7ff ff21 	bl	1000130c <XMC_SCU_CLOCK_UngatePeripheralClock>
#endif
  else
  {
    XMC_ASSERT("XMC_CCU4_lUngateClock:Invalid Module Pointer", 0);
  }
}
100014ca:	46bd      	mov	sp, r7
100014cc:	b002      	add	sp, #8
100014ce:	bd80      	pop	{r7, pc}
100014d0:	48040000 	.word	0x48040000

100014d4 <XMC_CCU4_EnableModule>:
/*********************************************************************************************************************
 * API IMPLEMENTATION
 ********************************************************************************************************************/

void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module)
{
100014d4:	b580      	push	{r7, lr}
100014d6:	b082      	sub	sp, #8
100014d8:	af00      	add	r7, sp, #0
100014da:	6078      	str	r0, [r7, #4]
  /* Enable CCU4 module clock */
  XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
#endif

#if defined(CLOCK_GATING_SUPPORTED)
  XMC_CCU4_lUngateClock(module);
100014dc:	687b      	ldr	r3, [r7, #4]
100014de:	1c18      	adds	r0, r3, #0
100014e0:	f7ff ffe8 	bl	100014b4 <XMC_CCU4_lUngateClock>
#endif

#if defined(PERIPHERAL_RESET_SUPPORTED)
  XMC_CCU4_lDeassertReset(module);
#endif
}
100014e4:	46bd      	mov	sp, r7
100014e6:	b002      	add	sp, #8
100014e8:	bd80      	pop	{r7, pc}
100014ea:	46c0      	nop			; (mov r8, r8)

100014ec <XMC_CCU4_Init>:
#endif
}

/* API to initialize CCU4 global resources  */
void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action)
{
100014ec:	b580      	push	{r7, lr}
100014ee:	b084      	sub	sp, #16
100014f0:	af00      	add	r7, sp, #0
100014f2:	6078      	str	r0, [r7, #4]
100014f4:	1c0a      	adds	r2, r1, #0
100014f6:	1cfb      	adds	r3, r7, #3
100014f8:	701a      	strb	r2, [r3, #0]

  XMC_ASSERT("XMC_CCU4_Init:Invalid module pointer", XMC_CCU4_IsValidModule(module));
  XMC_ASSERT("XMC_CCU4_Init:Invalid mcs action", XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action));

  /* Enable CCU4 module */
  XMC_CCU4_EnableModule(module);
100014fa:	687b      	ldr	r3, [r7, #4]
100014fc:	1c18      	adds	r0, r3, #0
100014fe:	f7ff ffe9 	bl	100014d4 <XMC_CCU4_EnableModule>
  /* Start the prescaler */
  XMC_CCU4_StartPrescaler(module);
10001502:	687b      	ldr	r3, [r7, #4]
10001504:	1c18      	adds	r0, r3, #0
10001506:	f7ff ffc9 	bl	1000149c <XMC_CCU4_StartPrescaler>

  gctrl = module->GCTRL;
1000150a:	687b      	ldr	r3, [r7, #4]
1000150c:	681b      	ldr	r3, [r3, #0]
1000150e:	60fb      	str	r3, [r7, #12]
  gctrl &= ~((uint32_t) CCU4_GCTRL_MSDE_Msk);
10001510:	68fb      	ldr	r3, [r7, #12]
10001512:	4a07      	ldr	r2, [pc, #28]	; (10001530 <XMC_CCU4_Init+0x44>)
10001514:	4013      	ands	r3, r2
10001516:	60fb      	str	r3, [r7, #12]
  gctrl |= ((uint32_t) mcs_action) << CCU4_GCTRL_MSDE_Pos;
10001518:	1cfb      	adds	r3, r7, #3
1000151a:	781b      	ldrb	r3, [r3, #0]
1000151c:	039b      	lsls	r3, r3, #14
1000151e:	68fa      	ldr	r2, [r7, #12]
10001520:	4313      	orrs	r3, r2
10001522:	60fb      	str	r3, [r7, #12]

  module->GCTRL = gctrl;
10001524:	687b      	ldr	r3, [r7, #4]
10001526:	68fa      	ldr	r2, [r7, #12]
10001528:	601a      	str	r2, [r3, #0]
}
1000152a:	46bd      	mov	sp, r7
1000152c:	b004      	add	sp, #16
1000152e:	bd80      	pop	{r7, pc}
10001530:	ffff3fff 	.word	0xffff3fff

10001534 <XMC_GPIO_SetHardwareControl>:
  port->IOCR[(uint32_t)pin >> 2U] &= ~(uint32_t)((uint32_t)PORT_IOCR_PC_Msk << ((uint32_t)PORT_IOCR_PC_Size * ((uint32_t)pin & 0x3U)));
  port->IOCR[(uint32_t)pin >> 2U] |= (uint32_t)mode << ((uint32_t)PORT_IOCR_PC_Size * ((uint32_t)pin & 0x3U));
}

void XMC_GPIO_SetHardwareControl(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_HWCTRL_t hwctrl)
{
10001534:	b580      	push	{r7, lr}
10001536:	b082      	sub	sp, #8
10001538:	af00      	add	r7, sp, #0
1000153a:	6078      	str	r0, [r7, #4]
1000153c:	1c08      	adds	r0, r1, #0
1000153e:	1c11      	adds	r1, r2, #0
10001540:	1cfb      	adds	r3, r7, #3
10001542:	1c02      	adds	r2, r0, #0
10001544:	701a      	strb	r2, [r3, #0]
10001546:	1cbb      	adds	r3, r7, #2
10001548:	1c0a      	adds	r2, r1, #0
1000154a:	701a      	strb	r2, [r3, #0]
  XMC_ASSERT("XMC_GPIO_SetHardwareControl: Invalid port", XMC_GPIO_CHECK_PORT(port));
  XMC_ASSERT("XMC_GPIO_SetHardwareControl: Invalid hwctrl", XMC_GPIO_CHECK_HWCTRL(hwctrl));

  port->HWSEL &= ~(uint32_t)((uint32_t)PORT_HWSEL_Msk << ((uint32_t)pin << 1U));
1000154c:	687b      	ldr	r3, [r7, #4]
1000154e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
10001550:	1cfa      	adds	r2, r7, #3
10001552:	7812      	ldrb	r2, [r2, #0]
10001554:	0052      	lsls	r2, r2, #1
10001556:	1c11      	adds	r1, r2, #0
10001558:	2203      	movs	r2, #3
1000155a:	408a      	lsls	r2, r1
1000155c:	43d2      	mvns	r2, r2
1000155e:	401a      	ands	r2, r3
10001560:	687b      	ldr	r3, [r7, #4]
10001562:	675a      	str	r2, [r3, #116]	; 0x74
  port->HWSEL |= (uint32_t)hwctrl << ((uint32_t)pin << 1U);
10001564:	687b      	ldr	r3, [r7, #4]
10001566:	6f5a      	ldr	r2, [r3, #116]	; 0x74
10001568:	1cbb      	adds	r3, r7, #2
1000156a:	781b      	ldrb	r3, [r3, #0]
1000156c:	1cf9      	adds	r1, r7, #3
1000156e:	7809      	ldrb	r1, [r1, #0]
10001570:	0049      	lsls	r1, r1, #1
10001572:	408b      	lsls	r3, r1
10001574:	431a      	orrs	r2, r3
10001576:	687b      	ldr	r3, [r7, #4]
10001578:	675a      	str	r2, [r3, #116]	; 0x74
}
1000157a:	46bd      	mov	sp, r7
1000157c:	b002      	add	sp, #8
1000157e:	bd80      	pop	{r7, pc}

10001580 <XMC_VADC_GLOBAL_EnableModule>:
 * API IMPLEMENTATION
 ********************************************************************************************************************/

/*API to enable the VADC Module*/
void XMC_VADC_GLOBAL_EnableModule(void)
{
10001580:	b580      	push	{r7, lr}
10001582:	af00      	add	r7, sp, #0
#if defined (COMPARATOR)
  COMPARATOR->ORCCTRL = (uint32_t)0xFF;
#endif

#if defined(CLOCK_GATING_SUPPORTED)
  XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
10001584:	2001      	movs	r0, #1
10001586:	f7ff fec1 	bl	1000130c <XMC_SCU_CLOCK_UngatePeripheralClock>

#if defined(PERIPHERAL_RESET_SUPPORTED)
  /* Reset the Hardware */
  XMC_SCU_RESET_DeassertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC );
#endif
}
1000158a:	46bd      	mov	sp, r7
1000158c:	bd80      	pop	{r7, pc}
1000158e:	46c0      	nop			; (mov r8, r8)

10001590 <XMC_VADC_GLOBAL_Init>:
}


/* API to initialize global resources */
void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *config)
{
10001590:	b580      	push	{r7, lr}
10001592:	b084      	sub	sp, #16
10001594:	af00      	add	r7, sp, #0
10001596:	6078      	str	r0, [r7, #4]
10001598:	6039      	str	r1, [r7, #0]
#if (UC_SERIES == XMC14)
  XMC_SCU_CLOCK_SetAdcClockSrc(XMC_SCU_CLOCK_ADCCLKSRC_48MHZ);
#endif

  /* Enable the VADC module*/
  XMC_VADC_GLOBAL_EnableModule();
1000159a:	f7ff fff1 	bl	10001580 <XMC_VADC_GLOBAL_EnableModule>

  global_ptr->CLC = (uint32_t)(config->clc);
1000159e:	683b      	ldr	r3, [r7, #0]
100015a0:	691a      	ldr	r2, [r3, #16]
100015a2:	687b      	ldr	r3, [r7, #4]
100015a4:	601a      	str	r2, [r3, #0]
#if (XMC_VADC_GROUP_AVAILABLE == 1U)
  global_ptr->GLOBCFG  = (uint32_t)(config->clock_config.globcfg | (uint32_t)(VADC_GLOBCFG_DIVWC_Msk));
#endif

  /* ICLASS-0 configuration */
  global_ptr->GLOBICLASS[0] = (uint32_t)(config->class0.globiclass);
100015a6:	683b      	ldr	r3, [r7, #0]
100015a8:	685a      	ldr	r2, [r3, #4]
100015aa:	687b      	ldr	r3, [r7, #4]
100015ac:	21a0      	movs	r1, #160	; 0xa0
100015ae:	505a      	str	r2, [r3, r1]

  /* ICLASS-1 configuration */
  global_ptr->GLOBICLASS[1] = (uint32_t)(config->class1.globiclass);
100015b0:	683b      	ldr	r3, [r7, #0]
100015b2:	689a      	ldr	r2, [r3, #8]
100015b4:	687b      	ldr	r3, [r7, #4]
100015b6:	21a4      	movs	r1, #164	; 0xa4
100015b8:	505a      	str	r2, [r3, r1]


  /*Result generation related configuration */
  global_ptr->GLOBRCR = (uint32_t)(config->globrcr);
100015ba:	683b      	ldr	r3, [r7, #0]
100015bc:	68d9      	ldr	r1, [r3, #12]
100015be:	687a      	ldr	r2, [r7, #4]
100015c0:	23a0      	movs	r3, #160	; 0xa0
100015c2:	009b      	lsls	r3, r3, #2
100015c4:	50d1      	str	r1, [r2, r3]

  /* Configure the SHS register that are needed for XMC11xx devices*/
#if (XMC_VADC_GROUP_AVAILABLE == 0U)

  /* Enabling the Analog part of the converter*/
  reg = SHS0->SHSCFG  | SHS_SHSCFG_SCWC_Msk;
100015c6:	4b09      	ldr	r3, [pc, #36]	; (100015ec <XMC_VADC_GLOBAL_Init+0x5c>)
100015c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
100015ca:	2280      	movs	r2, #128	; 0x80
100015cc:	0212      	lsls	r2, r2, #8
100015ce:	4313      	orrs	r3, r2
100015d0:	60fb      	str	r3, [r7, #12]
  reg &= ~(SHS_SHSCFG_ANOFF_Msk);
100015d2:	68fb      	ldr	r3, [r7, #12]
100015d4:	4a06      	ldr	r2, [pc, #24]	; (100015f0 <XMC_VADC_GLOBAL_Init+0x60>)
100015d6:	4013      	ands	r3, r2
100015d8:	60fb      	str	r3, [r7, #12]
  SHS0->SHSCFG = reg;
100015da:	4b04      	ldr	r3, [pc, #16]	; (100015ec <XMC_VADC_GLOBAL_Init+0x5c>)
100015dc:	68fa      	ldr	r2, [r7, #12]
100015de:	641a      	str	r2, [r3, #64]	; 0x40

  /* From the Errata sheet of XMC1100 V1.7*/
  XMC_VADC_CONV_ENABLE_FOR_XMC11 = 1U;
100015e0:	4b04      	ldr	r3, [pc, #16]	; (100015f4 <XMC_VADC_GLOBAL_Init+0x64>)
100015e2:	2201      	movs	r2, #1
100015e4:	601a      	str	r2, [r3, #0]
#endif

}
100015e6:	46bd      	mov	sp, r7
100015e8:	b004      	add	sp, #16
100015ea:	bd80      	pop	{r7, pc}
100015ec:	48034000 	.word	0x48034000
100015f0:	ffffefff 	.word	0xffffefff
100015f4:	40010500 	.word	0x40010500

100015f8 <XMC_VADC_GLOBAL_InputClassInit>:

/* API to Set the Global IClass registers*/
void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLASS_t config,
                                    const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num)
{
100015f8:	b580      	push	{r7, lr}
100015fa:	b084      	sub	sp, #16
100015fc:	af00      	add	r7, sp, #0
100015fe:	60f8      	str	r0, [r7, #12]
10001600:	60b9      	str	r1, [r7, #8]
10001602:	603b      	str	r3, [r7, #0]
10001604:	1dfb      	adds	r3, r7, #7
10001606:	701a      	strb	r2, [r3, #0]
#if(XMC_VADC_EMUX_AVAILABLE == 1U)
  if (conv_type == XMC_VADC_GROUP_CONV_STD )
  {
#endif
    XMC_UNUSED_ARG(conv_type);
    global_ptr->GLOBICLASS[set_num] = config.globiclass &
10001608:	68bb      	ldr	r3, [r7, #8]
1000160a:	4a05      	ldr	r2, [pc, #20]	; (10001620 <XMC_VADC_GLOBAL_InputClassInit+0x28>)
1000160c:	4013      	ands	r3, r2
1000160e:	1c19      	adds	r1, r3, #0
10001610:	68fb      	ldr	r3, [r7, #12]
10001612:	683a      	ldr	r2, [r7, #0]
10001614:	3228      	adds	r2, #40	; 0x28
10001616:	0092      	lsls	r2, r2, #2
10001618:	50d1      	str	r1, [r2, r3]
  else
  {
    global_ptr->GLOBICLASS[set_num] = config.globiclass & (uint32_t)(VADC_GLOBICLASS_CME_Msk | VADC_GLOBICLASS_STCE_Msk);
  }
#endif
}
1000161a:	46bd      	mov	sp, r7
1000161c:	b004      	add	sp, #16
1000161e:	bd80      	pop	{r7, pc}
10001620:	0000071f 	.word	0x0000071f

10001624 <XMC_VADC_GLOBAL_StartupCalibration>:

/* API to enable startup calibration feature */
void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
{
10001624:	b580      	push	{r7, lr}
10001626:	b082      	sub	sp, #8
10001628:	af00      	add	r7, sp, #0
1000162a:	6078      	str	r0, [r7, #4]
  VADC_G_TypeDef *group_ptr;
#endif

  XMC_ASSERT("XMC_VADC_GLOBAL_StartupCalibration:Wrong Module Pointer", (global_ptr == VADC))

  global_ptr->GLOBCFG |= (uint32_t)VADC_GLOBCFG_SUCAL_Msk;
1000162c:	687b      	ldr	r3, [r7, #4]
1000162e:	2280      	movs	r2, #128	; 0x80
10001630:	589b      	ldr	r3, [r3, r2]
10001632:	2280      	movs	r2, #128	; 0x80
10001634:	0612      	lsls	r2, r2, #24
10001636:	431a      	orrs	r2, r3
10001638:	687b      	ldr	r3, [r7, #4]
1000163a:	2180      	movs	r1, #128	; 0x80
1000163c:	505a      	str	r2, [r3, r1]
    }
  }
#else

  /* Loop until calibration is started */
  while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) !=
1000163e:	e000      	b.n	10001642 <XMC_VADC_GLOBAL_StartupCalibration+0x1e>
         XMC_VADC_SHS_START_UP_CAL_ACTIVE  )
  {
    __NOP();
10001640:	46c0      	nop			; (mov r8, r8)
    }
  }
#else

  /* Loop until calibration is started */
  while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) !=
10001642:	4b07      	ldr	r3, [pc, #28]	; (10001660 <XMC_VADC_GLOBAL_StartupCalibration+0x3c>)
10001644:	6c1b      	ldr	r3, [r3, #64]	; 0x40
10001646:	0f1b      	lsrs	r3, r3, #28
10001648:	2b03      	cmp	r3, #3
1000164a:	d1f9      	bne.n	10001640 <XMC_VADC_GLOBAL_StartupCalibration+0x1c>
         XMC_VADC_SHS_START_UP_CAL_ACTIVE  )
  {
    __NOP();
  }
  /* Loop until it finishes calibration */
  while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) ==
1000164c:	e000      	b.n	10001650 <XMC_VADC_GLOBAL_StartupCalibration+0x2c>
         XMC_VADC_SHS_START_UP_CAL_ACTIVE )
  {
    __NOP();
1000164e:	46c0      	nop			; (mov r8, r8)
         XMC_VADC_SHS_START_UP_CAL_ACTIVE  )
  {
    __NOP();
  }
  /* Loop until it finishes calibration */
  while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) ==
10001650:	4b03      	ldr	r3, [pc, #12]	; (10001660 <XMC_VADC_GLOBAL_StartupCalibration+0x3c>)
10001652:	6c1b      	ldr	r3, [r3, #64]	; 0x40
10001654:	0f1b      	lsrs	r3, r3, #28
10001656:	2b03      	cmp	r3, #3
10001658:	d0f9      	beq.n	1000164e <XMC_VADC_GLOBAL_StartupCalibration+0x2a>
         XMC_VADC_SHS_START_UP_CAL_ACTIVE )
  {
    __NOP();
  }
#endif
}
1000165a:	46bd      	mov	sp, r7
1000165c:	b002      	add	sp, #8
1000165e:	bd80      	pop	{r7, pc}
10001660:	48034000 	.word	0x48034000

10001664 <XMC_VADC_GLOBAL_SetResultEventInterruptNode>:
}
#endif

/* API to bind result event with a service request line */
void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t sr)
{
10001664:	b580      	push	{r7, lr}
10001666:	b084      	sub	sp, #16
10001668:	af00      	add	r7, sp, #0
1000166a:	6078      	str	r0, [r7, #4]
1000166c:	1c0a      	adds	r2, r1, #0
1000166e:	1cfb      	adds	r3, r7, #3
10001670:	701a      	strb	r2, [r3, #0]
  uint32_t node;

  XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong Module Pointer", (global_ptr == VADC))
  XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong SR Number", (sr <= XMC_VADC_SR_SHARED_SR3))

  if (sr >= XMC_VADC_SR_SHARED_SR0)
10001672:	1cfb      	adds	r3, r7, #3
10001674:	781b      	ldrb	r3, [r3, #0]
10001676:	2b03      	cmp	r3, #3
10001678:	d904      	bls.n	10001684 <XMC_VADC_GLOBAL_SetResultEventInterruptNode+0x20>
  {
    node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
1000167a:	1cfb      	adds	r3, r7, #3
1000167c:	781b      	ldrb	r3, [r3, #0]
1000167e:	3b04      	subs	r3, #4
10001680:	60fb      	str	r3, [r7, #12]
10001682:	e002      	b.n	1000168a <XMC_VADC_GLOBAL_SetResultEventInterruptNode+0x26>
  }
  else
  {
    node = (uint32_t)sr;
10001684:	1cfb      	adds	r3, r7, #3
10001686:	781b      	ldrb	r3, [r3, #0]
10001688:	60fb      	str	r3, [r7, #12]
  }

  global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_REV0NP_Msk);
1000168a:	687a      	ldr	r2, [r7, #4]
1000168c:	23a0      	movs	r3, #160	; 0xa0
1000168e:	005b      	lsls	r3, r3, #1
10001690:	58d3      	ldr	r3, [r2, r3]
10001692:	4a0b      	ldr	r2, [pc, #44]	; (100016c0 <XMC_VADC_GLOBAL_SetResultEventInterruptNode+0x5c>)
10001694:	4013      	ands	r3, r2
10001696:	1c19      	adds	r1, r3, #0
10001698:	687a      	ldr	r2, [r7, #4]
1000169a:	23a0      	movs	r3, #160	; 0xa0
1000169c:	005b      	lsls	r3, r3, #1
1000169e:	50d1      	str	r1, [r2, r3]
  global_ptr->GLOBEVNP |= (uint32_t)(node << VADC_GLOBEVNP_REV0NP_Pos);
100016a0:	687a      	ldr	r2, [r7, #4]
100016a2:	23a0      	movs	r3, #160	; 0xa0
100016a4:	005b      	lsls	r3, r3, #1
100016a6:	58d2      	ldr	r2, [r2, r3]
100016a8:	68fb      	ldr	r3, [r7, #12]
100016aa:	041b      	lsls	r3, r3, #16
100016ac:	431a      	orrs	r2, r3
100016ae:	1c11      	adds	r1, r2, #0
100016b0:	687a      	ldr	r2, [r7, #4]
100016b2:	23a0      	movs	r3, #160	; 0xa0
100016b4:	005b      	lsls	r3, r3, #1
100016b6:	50d1      	str	r1, [r2, r3]
}
100016b8:	46bd      	mov	sp, r7
100016ba:	b004      	add	sp, #16
100016bc:	bd80      	pop	{r7, pc}
100016be:	46c0      	nop			; (mov r8, r8)
100016c0:	fff0ffff 	.word	0xfff0ffff

100016c4 <XMC_VADC_GLOBAL_BackgroundInit>:
}
#endif

/* API to initialize background scan request source hardware */
void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_CONFIG_t *config)
{
100016c4:	b580      	push	{r7, lr}
100016c6:	b082      	sub	sp, #8
100016c8:	af00      	add	r7, sp, #0
100016ca:	6078      	str	r0, [r7, #4]
100016cc:	6039      	str	r1, [r7, #0]

  }
#endif

  /* program BRSCTRL register */
  global_ptr->BRSCTRL = (uint32_t)(config->asctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk);
100016ce:	683b      	ldr	r3, [r7, #0]
100016d0:	685b      	ldr	r3, [r3, #4]
100016d2:	4a09      	ldr	r2, [pc, #36]	; (100016f8 <XMC_VADC_GLOBAL_BackgroundInit+0x34>)
100016d4:	431a      	orrs	r2, r3
100016d6:	1c11      	adds	r1, r2, #0
100016d8:	687a      	ldr	r2, [r7, #4]
100016da:	2380      	movs	r3, #128	; 0x80
100016dc:	009b      	lsls	r3, r3, #2
100016de:	50d1      	str	r1, [r2, r3]

  /* program BRSMR register */
  global_ptr->BRSMR = (uint32_t)((config->asmr) | (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VADC_BRSMR_ENGT_Pos));
100016e0:	683b      	ldr	r3, [r7, #0]
100016e2:	689b      	ldr	r3, [r3, #8]
100016e4:	2201      	movs	r2, #1
100016e6:	431a      	orrs	r2, r3
100016e8:	1c11      	adds	r1, r2, #0
100016ea:	687a      	ldr	r2, [r7, #4]
100016ec:	2381      	movs	r3, #129	; 0x81
100016ee:	009b      	lsls	r3, r3, #2
100016f0:	50d1      	str	r1, [r2, r3]
  {
    XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
  }
#endif

}
100016f2:	46bd      	mov	sp, r7
100016f4:	b002      	add	sp, #8
100016f6:	bd80      	pop	{r7, pc}
100016f8:	00808000 	.word	0x00808000

100016fc <_sbrk>:

// defined in linker script
extern caddr_t Heap_Bank1_Start;
extern caddr_t Heap_Bank1_End;
caddr_t _sbrk(int nbytes)
{
100016fc:	b580      	push	{r7, lr}
100016fe:	b084      	sub	sp, #16
10001700:	af00      	add	r7, sp, #0
10001702:	6078      	str	r0, [r7, #4]
  static caddr_t heap_ptr = NULL;
  caddr_t base;

  if (heap_ptr == NULL) {
10001704:	4b14      	ldr	r3, [pc, #80]	; (10001758 <_sbrk+0x5c>)
10001706:	681b      	ldr	r3, [r3, #0]
10001708:	2b00      	cmp	r3, #0
1000170a:	d102      	bne.n	10001712 <_sbrk+0x16>
    heap_ptr = (caddr_t)&Heap_Bank1_Start;
1000170c:	4b12      	ldr	r3, [pc, #72]	; (10001758 <_sbrk+0x5c>)
1000170e:	4a13      	ldr	r2, [pc, #76]	; (1000175c <_sbrk+0x60>)
10001710:	601a      	str	r2, [r3, #0]
  }

  base = heap_ptr;
10001712:	4b11      	ldr	r3, [pc, #68]	; (10001758 <_sbrk+0x5c>)
10001714:	681b      	ldr	r3, [r3, #0]
10001716:	60fb      	str	r3, [r7, #12]

  /* heap word alignment */
  nbytes = (nbytes + 3) & ~0x3U;
10001718:	687b      	ldr	r3, [r7, #4]
1000171a:	3303      	adds	r3, #3
1000171c:	2203      	movs	r2, #3
1000171e:	4393      	bics	r3, r2
10001720:	607b      	str	r3, [r7, #4]
  if ((caddr_t)&Heap_Bank1_End > (heap_ptr + nbytes))
10001722:	4b0d      	ldr	r3, [pc, #52]	; (10001758 <_sbrk+0x5c>)
10001724:	681a      	ldr	r2, [r3, #0]
10001726:	687b      	ldr	r3, [r7, #4]
10001728:	18d2      	adds	r2, r2, r3
1000172a:	4b0d      	ldr	r3, [pc, #52]	; (10001760 <_sbrk+0x64>)
1000172c:	429a      	cmp	r2, r3
1000172e:	d207      	bcs.n	10001740 <_sbrk+0x44>
  {
    heap_ptr += nbytes;
10001730:	4b09      	ldr	r3, [pc, #36]	; (10001758 <_sbrk+0x5c>)
10001732:	681a      	ldr	r2, [r3, #0]
10001734:	687b      	ldr	r3, [r7, #4]
10001736:	18d2      	adds	r2, r2, r3
10001738:	4b07      	ldr	r3, [pc, #28]	; (10001758 <_sbrk+0x5c>)
1000173a:	601a      	str	r2, [r3, #0]
    return (base);
1000173c:	68fb      	ldr	r3, [r7, #12]
1000173e:	e006      	b.n	1000174e <_sbrk+0x52>
  }
  else
  {
    /* Heap overflow */
    errno = ENOMEM;
10001740:	f001 fbfa 	bl	10002f38 <__errno>
10001744:	1c03      	adds	r3, r0, #0
10001746:	220c      	movs	r2, #12
10001748:	601a      	str	r2, [r3, #0]
    return ((caddr_t)-1);
1000174a:	2301      	movs	r3, #1
1000174c:	425b      	negs	r3, r3
  }
}
1000174e:	1c18      	adds	r0, r3, #0
10001750:	46bd      	mov	sp, r7
10001752:	b004      	add	sp, #16
10001754:	bd80      	pop	{r7, pc}
10001756:	46c0      	nop			; (mov r8, r8)
10001758:	2000061c 	.word	0x2000061c
1000175c:	200007a8 	.word	0x200007a8
10001760:	20003ffc 	.word	0x20003ffc

10001764 <_init>:

/* Init */
void _init(void)
{}
10001764:	b580      	push	{r7, lr}
10001766:	af00      	add	r7, sp, #0
10001768:	46bd      	mov	sp, r7
1000176a:	bd80      	pop	{r7, pc}

1000176c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
1000176c:	b5b0      	push	{r4, r5, r7, lr}
1000176e:	b082      	sub	sp, #8
10001770:	af00      	add	r7, sp, #0
10001772:	1c02      	adds	r2, r0, #0
10001774:	6039      	str	r1, [r7, #0]
10001776:	1dfb      	adds	r3, r7, #7
10001778:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
1000177a:	1dfb      	adds	r3, r7, #7
1000177c:	781b      	ldrb	r3, [r3, #0]
1000177e:	2b7f      	cmp	r3, #127	; 0x7f
10001780:	d827      	bhi.n	100017d2 <__NVIC_SetPriority+0x66>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10001782:	4c2d      	ldr	r4, [pc, #180]	; (10001838 <__NVIC_SetPriority+0xcc>)
10001784:	1dfb      	adds	r3, r7, #7
10001786:	781b      	ldrb	r3, [r3, #0]
10001788:	b25b      	sxtb	r3, r3
1000178a:	089b      	lsrs	r3, r3, #2
1000178c:	492a      	ldr	r1, [pc, #168]	; (10001838 <__NVIC_SetPriority+0xcc>)
1000178e:	1dfa      	adds	r2, r7, #7
10001790:	7812      	ldrb	r2, [r2, #0]
10001792:	b252      	sxtb	r2, r2
10001794:	0892      	lsrs	r2, r2, #2
10001796:	32c0      	adds	r2, #192	; 0xc0
10001798:	0092      	lsls	r2, r2, #2
1000179a:	5852      	ldr	r2, [r2, r1]
1000179c:	1df9      	adds	r1, r7, #7
1000179e:	7809      	ldrb	r1, [r1, #0]
100017a0:	1c08      	adds	r0, r1, #0
100017a2:	2103      	movs	r1, #3
100017a4:	4001      	ands	r1, r0
100017a6:	00c9      	lsls	r1, r1, #3
100017a8:	1c08      	adds	r0, r1, #0
100017aa:	21ff      	movs	r1, #255	; 0xff
100017ac:	4081      	lsls	r1, r0
100017ae:	43c9      	mvns	r1, r1
100017b0:	4011      	ands	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
100017b2:	683a      	ldr	r2, [r7, #0]
100017b4:	0192      	lsls	r2, r2, #6
100017b6:	20ff      	movs	r0, #255	; 0xff
100017b8:	4002      	ands	r2, r0
100017ba:	1df8      	adds	r0, r7, #7
100017bc:	7800      	ldrb	r0, [r0, #0]
100017be:	1c05      	adds	r5, r0, #0
100017c0:	2003      	movs	r0, #3
100017c2:	4028      	ands	r0, r5
100017c4:	00c0      	lsls	r0, r0, #3
100017c6:	4082      	lsls	r2, r0
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
100017c8:	430a      	orrs	r2, r1
100017ca:	33c0      	adds	r3, #192	; 0xc0
100017cc:	009b      	lsls	r3, r3, #2
100017ce:	511a      	str	r2, [r3, r4]
100017d0:	e02e      	b.n	10001830 <__NVIC_SetPriority+0xc4>
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
100017d2:	4c1a      	ldr	r4, [pc, #104]	; (1000183c <__NVIC_SetPriority+0xd0>)
100017d4:	1dfb      	adds	r3, r7, #7
100017d6:	781b      	ldrb	r3, [r3, #0]
100017d8:	1c1a      	adds	r2, r3, #0
100017da:	230f      	movs	r3, #15
100017dc:	4013      	ands	r3, r2
100017de:	3b08      	subs	r3, #8
100017e0:	0899      	lsrs	r1, r3, #2
100017e2:	4a16      	ldr	r2, [pc, #88]	; (1000183c <__NVIC_SetPriority+0xd0>)
100017e4:	1dfb      	adds	r3, r7, #7
100017e6:	781b      	ldrb	r3, [r3, #0]
100017e8:	1c18      	adds	r0, r3, #0
100017ea:	230f      	movs	r3, #15
100017ec:	4003      	ands	r3, r0
100017ee:	3b08      	subs	r3, #8
100017f0:	089b      	lsrs	r3, r3, #2
100017f2:	3306      	adds	r3, #6
100017f4:	009b      	lsls	r3, r3, #2
100017f6:	18d3      	adds	r3, r2, r3
100017f8:	685b      	ldr	r3, [r3, #4]
100017fa:	1dfa      	adds	r2, r7, #7
100017fc:	7812      	ldrb	r2, [r2, #0]
100017fe:	1c10      	adds	r0, r2, #0
10001800:	2203      	movs	r2, #3
10001802:	4002      	ands	r2, r0
10001804:	00d2      	lsls	r2, r2, #3
10001806:	1c10      	adds	r0, r2, #0
10001808:	22ff      	movs	r2, #255	; 0xff
1000180a:	4082      	lsls	r2, r0
1000180c:	43d2      	mvns	r2, r2
1000180e:	401a      	ands	r2, r3
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
10001810:	683b      	ldr	r3, [r7, #0]
10001812:	019b      	lsls	r3, r3, #6
10001814:	20ff      	movs	r0, #255	; 0xff
10001816:	4003      	ands	r3, r0
10001818:	1df8      	adds	r0, r7, #7
1000181a:	7800      	ldrb	r0, [r0, #0]
1000181c:	1c05      	adds	r5, r0, #0
1000181e:	2003      	movs	r0, #3
10001820:	4028      	ands	r0, r5
10001822:	00c0      	lsls	r0, r0, #3
10001824:	4083      	lsls	r3, r0
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10001826:	431a      	orrs	r2, r3
10001828:	1d8b      	adds	r3, r1, #6
1000182a:	009b      	lsls	r3, r3, #2
1000182c:	18e3      	adds	r3, r4, r3
1000182e:	605a      	str	r2, [r3, #4]
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
10001830:	46bd      	mov	sp, r7
10001832:	b002      	add	sp, #8
10001834:	bdb0      	pop	{r4, r5, r7, pc}
10001836:	46c0      	nop			; (mov r8, r8)
10001838:	e000e100 	.word	0xe000e100
1000183c:	e000ed00 	.word	0xe000ed00

10001840 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
10001840:	b580      	push	{r7, lr}
10001842:	b082      	sub	sp, #8
10001844:	af00      	add	r7, sp, #0
10001846:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
10001848:	687b      	ldr	r3, [r7, #4]
1000184a:	3b01      	subs	r3, #1
1000184c:	4a0c      	ldr	r2, [pc, #48]	; (10001880 <SysTick_Config+0x40>)
1000184e:	4293      	cmp	r3, r2
10001850:	d901      	bls.n	10001856 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
10001852:	2301      	movs	r3, #1
10001854:	e010      	b.n	10001878 <SysTick_Config+0x38>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
10001856:	4b0b      	ldr	r3, [pc, #44]	; (10001884 <SysTick_Config+0x44>)
10001858:	687a      	ldr	r2, [r7, #4]
1000185a:	3a01      	subs	r2, #1
1000185c:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
1000185e:	2301      	movs	r3, #1
10001860:	425b      	negs	r3, r3
10001862:	1c18      	adds	r0, r3, #0
10001864:	2103      	movs	r1, #3
10001866:	f7ff ff81 	bl	1000176c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
1000186a:	4b06      	ldr	r3, [pc, #24]	; (10001884 <SysTick_Config+0x44>)
1000186c:	2200      	movs	r2, #0
1000186e:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
10001870:	4b04      	ldr	r3, [pc, #16]	; (10001884 <SysTick_Config+0x44>)
10001872:	2207      	movs	r2, #7
10001874:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
10001876:	2300      	movs	r3, #0
}
10001878:	1c18      	adds	r0, r3, #0
1000187a:	46bd      	mov	sp, r7
1000187c:	b002      	add	sp, #8
1000187e:	bd80      	pop	{r7, pc}
10001880:	00ffffff 	.word	0x00ffffff
10001884:	e000e010 	.word	0xe000e010

10001888 <SYSTIMER_lInsertTimerList>:
**********************************************************************************************************************/
/*
 * This function is called to insert a timer into the timer list.
 */
static void SYSTIMER_lInsertTimerList(uint32_t tbl_index)
{
10001888:	b590      	push	{r4, r7, lr}
1000188a:	b087      	sub	sp, #28
1000188c:	af00      	add	r7, sp, #0
1000188e:	6078      	str	r0, [r7, #4]
  SYSTIMER_OBJECT_t *object_ptr;
  int32_t delta_ticks;
  int32_t timer_count;
  bool found_flag = false;
10001890:	230f      	movs	r3, #15
10001892:	18fb      	adds	r3, r7, r3
10001894:	2200      	movs	r2, #0
10001896:	701a      	strb	r2, [r3, #0]
   /* Get timer time */
  timer_count = (int32_t)g_timer_tbl[tbl_index].count;
10001898:	496b      	ldr	r1, [pc, #428]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
1000189a:	687a      	ldr	r2, [r7, #4]
1000189c:	1c13      	adds	r3, r2, #0
1000189e:	00db      	lsls	r3, r3, #3
100018a0:	189b      	adds	r3, r3, r2
100018a2:	009b      	lsls	r3, r3, #2
100018a4:	18cb      	adds	r3, r1, r3
100018a6:	3318      	adds	r3, #24
100018a8:	681b      	ldr	r3, [r3, #0]
100018aa:	60bb      	str	r3, [r7, #8]
  /* Check if Timer list is NULL */
  if (NULL == g_timer_list)
100018ac:	4b67      	ldr	r3, [pc, #412]	; (10001a4c <SYSTIMER_lInsertTimerList+0x1c4>)
100018ae:	681b      	ldr	r3, [r3, #0]
100018b0:	2b00      	cmp	r3, #0
100018b2:	d109      	bne.n	100018c8 <SYSTIMER_lInsertTimerList+0x40>
  {
    /* Set this as first Timer */
    g_timer_list = &g_timer_tbl[tbl_index];
100018b4:	687a      	ldr	r2, [r7, #4]
100018b6:	1c13      	adds	r3, r2, #0
100018b8:	00db      	lsls	r3, r3, #3
100018ba:	189b      	adds	r3, r3, r2
100018bc:	009b      	lsls	r3, r3, #2
100018be:	4a62      	ldr	r2, [pc, #392]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
100018c0:	189a      	adds	r2, r3, r2
100018c2:	4b62      	ldr	r3, [pc, #392]	; (10001a4c <SYSTIMER_lInsertTimerList+0x1c4>)
100018c4:	601a      	str	r2, [r3, #0]
100018c6:	e0bc      	b.n	10001a42 <SYSTIMER_lInsertTimerList+0x1ba>
  }
  /* If not, find the correct place, and insert the specified timer */
  else
  {
    object_ptr = g_timer_list;
100018c8:	4b60      	ldr	r3, [pc, #384]	; (10001a4c <SYSTIMER_lInsertTimerList+0x1c4>)
100018ca:	681b      	ldr	r3, [r3, #0]
100018cc:	617b      	str	r3, [r7, #20]
    /* Get timer tick */
    delta_ticks = timer_count;
100018ce:	68bb      	ldr	r3, [r7, #8]
100018d0:	613b      	str	r3, [r7, #16]
    /* Find correct place for inserting the timer */
    while ((NULL != object_ptr) && (false == found_flag))
100018d2:	e0aa      	b.n	10001a2a <SYSTIMER_lInsertTimerList+0x1a2>
    {
      /* Get timer Count Difference */
      delta_ticks -= (int32_t)object_ptr->count;
100018d4:	697b      	ldr	r3, [r7, #20]
100018d6:	699b      	ldr	r3, [r3, #24]
100018d8:	1c1a      	adds	r2, r3, #0
100018da:	693b      	ldr	r3, [r7, #16]
100018dc:	1a9b      	subs	r3, r3, r2
100018de:	613b      	str	r3, [r7, #16]
      /* Check for delta ticks < 0 */
      if (delta_ticks <= 0)
100018e0:	693b      	ldr	r3, [r7, #16]
100018e2:	2b00      	cmp	r3, #0
100018e4:	dc77      	bgt.n	100019d6 <SYSTIMER_lInsertTimerList+0x14e>
      {
        /* Check If head item */
        if (NULL != object_ptr->prev)
100018e6:	697b      	ldr	r3, [r7, #20]
100018e8:	685b      	ldr	r3, [r3, #4]
100018ea:	2b00      	cmp	r3, #0
100018ec:	d025      	beq.n	1000193a <SYSTIMER_lInsertTimerList+0xb2>
        {
          /* If Insert to list */
          object_ptr->prev->next = &g_timer_tbl[tbl_index];
100018ee:	697b      	ldr	r3, [r7, #20]
100018f0:	685a      	ldr	r2, [r3, #4]
100018f2:	6879      	ldr	r1, [r7, #4]
100018f4:	1c0b      	adds	r3, r1, #0
100018f6:	00db      	lsls	r3, r3, #3
100018f8:	185b      	adds	r3, r3, r1
100018fa:	009b      	lsls	r3, r3, #2
100018fc:	4952      	ldr	r1, [pc, #328]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
100018fe:	185b      	adds	r3, r3, r1
10001900:	6013      	str	r3, [r2, #0]
          g_timer_tbl[tbl_index].prev = object_ptr->prev;
10001902:	697b      	ldr	r3, [r7, #20]
10001904:	6859      	ldr	r1, [r3, #4]
10001906:	4850      	ldr	r0, [pc, #320]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
10001908:	687a      	ldr	r2, [r7, #4]
1000190a:	1c13      	adds	r3, r2, #0
1000190c:	00db      	lsls	r3, r3, #3
1000190e:	189b      	adds	r3, r3, r2
10001910:	009b      	lsls	r3, r3, #2
10001912:	18c3      	adds	r3, r0, r3
10001914:	6059      	str	r1, [r3, #4]
          g_timer_tbl[tbl_index].next = object_ptr;
10001916:	494c      	ldr	r1, [pc, #304]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
10001918:	687a      	ldr	r2, [r7, #4]
1000191a:	1c13      	adds	r3, r2, #0
1000191c:	00db      	lsls	r3, r3, #3
1000191e:	189b      	adds	r3, r3, r2
10001920:	009b      	lsls	r3, r3, #2
10001922:	697a      	ldr	r2, [r7, #20]
10001924:	505a      	str	r2, [r3, r1]
          object_ptr->prev = &g_timer_tbl[tbl_index];
10001926:	687a      	ldr	r2, [r7, #4]
10001928:	1c13      	adds	r3, r2, #0
1000192a:	00db      	lsls	r3, r3, #3
1000192c:	189b      	adds	r3, r3, r2
1000192e:	009b      	lsls	r3, r3, #2
10001930:	4a45      	ldr	r2, [pc, #276]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
10001932:	189a      	adds	r2, r3, r2
10001934:	697b      	ldr	r3, [r7, #20]
10001936:	605a      	str	r2, [r3, #4]
10001938:	e01b      	b.n	10001972 <SYSTIMER_lInsertTimerList+0xea>
        }
        else
        {
          /* Set Timer as first item */
          g_timer_tbl[tbl_index].next = g_timer_list;
1000193a:	4b44      	ldr	r3, [pc, #272]	; (10001a4c <SYSTIMER_lInsertTimerList+0x1c4>)
1000193c:	6818      	ldr	r0, [r3, #0]
1000193e:	4942      	ldr	r1, [pc, #264]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
10001940:	687a      	ldr	r2, [r7, #4]
10001942:	1c13      	adds	r3, r2, #0
10001944:	00db      	lsls	r3, r3, #3
10001946:	189b      	adds	r3, r3, r2
10001948:	009b      	lsls	r3, r3, #2
1000194a:	5058      	str	r0, [r3, r1]
          g_timer_list->prev = &g_timer_tbl[tbl_index];
1000194c:	4b3f      	ldr	r3, [pc, #252]	; (10001a4c <SYSTIMER_lInsertTimerList+0x1c4>)
1000194e:	681a      	ldr	r2, [r3, #0]
10001950:	6879      	ldr	r1, [r7, #4]
10001952:	1c0b      	adds	r3, r1, #0
10001954:	00db      	lsls	r3, r3, #3
10001956:	185b      	adds	r3, r3, r1
10001958:	009b      	lsls	r3, r3, #2
1000195a:	493b      	ldr	r1, [pc, #236]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
1000195c:	185b      	adds	r3, r3, r1
1000195e:	6053      	str	r3, [r2, #4]
          g_timer_list = &g_timer_tbl[tbl_index];
10001960:	687a      	ldr	r2, [r7, #4]
10001962:	1c13      	adds	r3, r2, #0
10001964:	00db      	lsls	r3, r3, #3
10001966:	189b      	adds	r3, r3, r2
10001968:	009b      	lsls	r3, r3, #2
1000196a:	4a37      	ldr	r2, [pc, #220]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
1000196c:	189a      	adds	r2, r3, r2
1000196e:	4b37      	ldr	r3, [pc, #220]	; (10001a4c <SYSTIMER_lInsertTimerList+0x1c4>)
10001970:	601a      	str	r2, [r3, #0]
        }
        g_timer_tbl[tbl_index].count = g_timer_tbl[tbl_index].next->count + (uint32_t)delta_ticks;
10001972:	4935      	ldr	r1, [pc, #212]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
10001974:	687a      	ldr	r2, [r7, #4]
10001976:	1c13      	adds	r3, r2, #0
10001978:	00db      	lsls	r3, r3, #3
1000197a:	189b      	adds	r3, r3, r2
1000197c:	009b      	lsls	r3, r3, #2
1000197e:	585b      	ldr	r3, [r3, r1]
10001980:	699a      	ldr	r2, [r3, #24]
10001982:	693b      	ldr	r3, [r7, #16]
10001984:	18d1      	adds	r1, r2, r3
10001986:	4830      	ldr	r0, [pc, #192]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
10001988:	687a      	ldr	r2, [r7, #4]
1000198a:	1c13      	adds	r3, r2, #0
1000198c:	00db      	lsls	r3, r3, #3
1000198e:	189b      	adds	r3, r3, r2
10001990:	009b      	lsls	r3, r3, #2
10001992:	18c3      	adds	r3, r0, r3
10001994:	3318      	adds	r3, #24
10001996:	6019      	str	r1, [r3, #0]
        g_timer_tbl[tbl_index].next->count  -= g_timer_tbl[tbl_index].count;
10001998:	492b      	ldr	r1, [pc, #172]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
1000199a:	687a      	ldr	r2, [r7, #4]
1000199c:	1c13      	adds	r3, r2, #0
1000199e:	00db      	lsls	r3, r3, #3
100019a0:	189b      	adds	r3, r3, r2
100019a2:	009b      	lsls	r3, r3, #2
100019a4:	585a      	ldr	r2, [r3, r1]
100019a6:	4828      	ldr	r0, [pc, #160]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
100019a8:	6879      	ldr	r1, [r7, #4]
100019aa:	1c0b      	adds	r3, r1, #0
100019ac:	00db      	lsls	r3, r3, #3
100019ae:	185b      	adds	r3, r3, r1
100019b0:	009b      	lsls	r3, r3, #2
100019b2:	581b      	ldr	r3, [r3, r0]
100019b4:	6998      	ldr	r0, [r3, #24]
100019b6:	4c24      	ldr	r4, [pc, #144]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
100019b8:	6879      	ldr	r1, [r7, #4]
100019ba:	1c0b      	adds	r3, r1, #0
100019bc:	00db      	lsls	r3, r3, #3
100019be:	185b      	adds	r3, r3, r1
100019c0:	009b      	lsls	r3, r3, #2
100019c2:	18e3      	adds	r3, r4, r3
100019c4:	3318      	adds	r3, #24
100019c6:	681b      	ldr	r3, [r3, #0]
100019c8:	1ac3      	subs	r3, r0, r3
100019ca:	6193      	str	r3, [r2, #24]
        found_flag = true;
100019cc:	230f      	movs	r3, #15
100019ce:	18fb      	adds	r3, r7, r3
100019d0:	2201      	movs	r2, #1
100019d2:	701a      	strb	r2, [r3, #0]
100019d4:	e026      	b.n	10001a24 <SYSTIMER_lInsertTimerList+0x19c>
      }
      /* Check for last item in list */
      else
      {
        if ((delta_ticks > 0) && (NULL == object_ptr->next))
100019d6:	693b      	ldr	r3, [r7, #16]
100019d8:	2b00      	cmp	r3, #0
100019da:	dd23      	ble.n	10001a24 <SYSTIMER_lInsertTimerList+0x19c>
100019dc:	697b      	ldr	r3, [r7, #20]
100019de:	681b      	ldr	r3, [r3, #0]
100019e0:	2b00      	cmp	r3, #0
100019e2:	d11f      	bne.n	10001a24 <SYSTIMER_lInsertTimerList+0x19c>
        {
          /* Yes, insert into */
          g_timer_tbl[tbl_index].prev = object_ptr;
100019e4:	4918      	ldr	r1, [pc, #96]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
100019e6:	687a      	ldr	r2, [r7, #4]
100019e8:	1c13      	adds	r3, r2, #0
100019ea:	00db      	lsls	r3, r3, #3
100019ec:	189b      	adds	r3, r3, r2
100019ee:	009b      	lsls	r3, r3, #2
100019f0:	18cb      	adds	r3, r1, r3
100019f2:	697a      	ldr	r2, [r7, #20]
100019f4:	605a      	str	r2, [r3, #4]
          object_ptr->next = &g_timer_tbl[tbl_index];
100019f6:	687a      	ldr	r2, [r7, #4]
100019f8:	1c13      	adds	r3, r2, #0
100019fa:	00db      	lsls	r3, r3, #3
100019fc:	189b      	adds	r3, r3, r2
100019fe:	009b      	lsls	r3, r3, #2
10001a00:	4a11      	ldr	r2, [pc, #68]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
10001a02:	189a      	adds	r2, r3, r2
10001a04:	697b      	ldr	r3, [r7, #20]
10001a06:	601a      	str	r2, [r3, #0]
          g_timer_tbl[tbl_index].count = (uint32_t)delta_ticks;
10001a08:	6939      	ldr	r1, [r7, #16]
10001a0a:	480f      	ldr	r0, [pc, #60]	; (10001a48 <SYSTIMER_lInsertTimerList+0x1c0>)
10001a0c:	687a      	ldr	r2, [r7, #4]
10001a0e:	1c13      	adds	r3, r2, #0
10001a10:	00db      	lsls	r3, r3, #3
10001a12:	189b      	adds	r3, r3, r2
10001a14:	009b      	lsls	r3, r3, #2
10001a16:	18c3      	adds	r3, r0, r3
10001a18:	3318      	adds	r3, #24
10001a1a:	6019      	str	r1, [r3, #0]
          found_flag = true;
10001a1c:	230f      	movs	r3, #15
10001a1e:	18fb      	adds	r3, r7, r3
10001a20:	2201      	movs	r2, #1
10001a22:	701a      	strb	r2, [r3, #0]
        }
      }
      /* Get the next item in timer list */
      object_ptr = object_ptr->next;
10001a24:	697b      	ldr	r3, [r7, #20]
10001a26:	681b      	ldr	r3, [r3, #0]
10001a28:	617b      	str	r3, [r7, #20]
  {
    object_ptr = g_timer_list;
    /* Get timer tick */
    delta_ticks = timer_count;
    /* Find correct place for inserting the timer */
    while ((NULL != object_ptr) && (false == found_flag))
10001a2a:	697b      	ldr	r3, [r7, #20]
10001a2c:	2b00      	cmp	r3, #0
10001a2e:	d008      	beq.n	10001a42 <SYSTIMER_lInsertTimerList+0x1ba>
10001a30:	230f      	movs	r3, #15
10001a32:	18fb      	adds	r3, r7, r3
10001a34:	781b      	ldrb	r3, [r3, #0]
10001a36:	2201      	movs	r2, #1
10001a38:	4053      	eors	r3, r2
10001a3a:	b2db      	uxtb	r3, r3
10001a3c:	2b00      	cmp	r3, #0
10001a3e:	d000      	beq.n	10001a42 <SYSTIMER_lInsertTimerList+0x1ba>
10001a40:	e748      	b.n	100018d4 <SYSTIMER_lInsertTimerList+0x4c>
      }
      /* Get the next item in timer list */
      object_ptr = object_ptr->next;
    }
  }
}
10001a42:	46bd      	mov	sp, r7
10001a44:	b007      	add	sp, #28
10001a46:	bd90      	pop	{r4, r7, pc}
10001a48:	20000680 	.word	0x20000680
10001a4c:	20000620 	.word	0x20000620

10001a50 <SYSTIMER_lRemoveTimerList>:

/*
 * This function is called to remove a timer from the timer list. 
 */
static void SYSTIMER_lRemoveTimerList(uint32_t tbl_index)
{
10001a50:	b580      	push	{r7, lr}
10001a52:	b084      	sub	sp, #16
10001a54:	af00      	add	r7, sp, #0
10001a56:	6078      	str	r0, [r7, #4]
  SYSTIMER_OBJECT_t *object_ptr;
  object_ptr = &g_timer_tbl[tbl_index];
10001a58:	687a      	ldr	r2, [r7, #4]
10001a5a:	1c13      	adds	r3, r2, #0
10001a5c:	00db      	lsls	r3, r3, #3
10001a5e:	189b      	adds	r3, r3, r2
10001a60:	009b      	lsls	r3, r3, #2
10001a62:	4a28      	ldr	r2, [pc, #160]	; (10001b04 <SYSTIMER_lRemoveTimerList+0xb4>)
10001a64:	189b      	adds	r3, r3, r2
10001a66:	60fb      	str	r3, [r7, #12]
  /* Check whether only one timer available */
  if ((NULL == object_ptr->prev) && (NULL == object_ptr->next ))
10001a68:	68fb      	ldr	r3, [r7, #12]
10001a6a:	685b      	ldr	r3, [r3, #4]
10001a6c:	2b00      	cmp	r3, #0
10001a6e:	d107      	bne.n	10001a80 <SYSTIMER_lRemoveTimerList+0x30>
10001a70:	68fb      	ldr	r3, [r7, #12]
10001a72:	681b      	ldr	r3, [r3, #0]
10001a74:	2b00      	cmp	r3, #0
10001a76:	d103      	bne.n	10001a80 <SYSTIMER_lRemoveTimerList+0x30>
  {
    /* set timer list as NULL */ 
    g_timer_list = NULL;                  
10001a78:	4b23      	ldr	r3, [pc, #140]	; (10001b08 <SYSTIMER_lRemoveTimerList+0xb8>)
10001a7a:	2200      	movs	r2, #0
10001a7c:	601a      	str	r2, [r3, #0]
10001a7e:	e03d      	b.n	10001afc <SYSTIMER_lRemoveTimerList+0xac>
  }
  /* Check if the first item in timer list */
  else if (NULL == object_ptr->prev)
10001a80:	68fb      	ldr	r3, [r7, #12]
10001a82:	685b      	ldr	r3, [r3, #4]
10001a84:	2b00      	cmp	r3, #0
10001a86:	d114      	bne.n	10001ab2 <SYSTIMER_lRemoveTimerList+0x62>
  {
    /* Remove timer from list, and reset timer list */
    g_timer_list  = object_ptr->next;
10001a88:	68fb      	ldr	r3, [r7, #12]
10001a8a:	681a      	ldr	r2, [r3, #0]
10001a8c:	4b1e      	ldr	r3, [pc, #120]	; (10001b08 <SYSTIMER_lRemoveTimerList+0xb8>)
10001a8e:	601a      	str	r2, [r3, #0]
    g_timer_list->prev = NULL;
10001a90:	4b1d      	ldr	r3, [pc, #116]	; (10001b08 <SYSTIMER_lRemoveTimerList+0xb8>)
10001a92:	681b      	ldr	r3, [r3, #0]
10001a94:	2200      	movs	r2, #0
10001a96:	605a      	str	r2, [r3, #4]
    g_timer_list->count += object_ptr->count;
10001a98:	4b1b      	ldr	r3, [pc, #108]	; (10001b08 <SYSTIMER_lRemoveTimerList+0xb8>)
10001a9a:	681b      	ldr	r3, [r3, #0]
10001a9c:	4a1a      	ldr	r2, [pc, #104]	; (10001b08 <SYSTIMER_lRemoveTimerList+0xb8>)
10001a9e:	6812      	ldr	r2, [r2, #0]
10001aa0:	6991      	ldr	r1, [r2, #24]
10001aa2:	68fa      	ldr	r2, [r7, #12]
10001aa4:	6992      	ldr	r2, [r2, #24]
10001aa6:	188a      	adds	r2, r1, r2
10001aa8:	619a      	str	r2, [r3, #24]
    object_ptr->next    = NULL;
10001aaa:	68fb      	ldr	r3, [r7, #12]
10001aac:	2200      	movs	r2, #0
10001aae:	601a      	str	r2, [r3, #0]
10001ab0:	e024      	b.n	10001afc <SYSTIMER_lRemoveTimerList+0xac>
  }
  /* Check if the last item in timer list */
  else if (NULL == object_ptr->next)
10001ab2:	68fb      	ldr	r3, [r7, #12]
10001ab4:	681b      	ldr	r3, [r3, #0]
10001ab6:	2b00      	cmp	r3, #0
10001ab8:	d107      	bne.n	10001aca <SYSTIMER_lRemoveTimerList+0x7a>
  {
    /* Remove timer from list */
    object_ptr->prev->next = NULL;
10001aba:	68fb      	ldr	r3, [r7, #12]
10001abc:	685b      	ldr	r3, [r3, #4]
10001abe:	2200      	movs	r2, #0
10001ac0:	601a      	str	r2, [r3, #0]
    object_ptr->prev = NULL;
10001ac2:	68fb      	ldr	r3, [r7, #12]
10001ac4:	2200      	movs	r2, #0
10001ac6:	605a      	str	r2, [r3, #4]
10001ac8:	e018      	b.n	10001afc <SYSTIMER_lRemoveTimerList+0xac>
  }
  else                       
  {
    /* Remove timer from list */
    object_ptr->prev->next  =  object_ptr->next;
10001aca:	68fb      	ldr	r3, [r7, #12]
10001acc:	685b      	ldr	r3, [r3, #4]
10001ace:	68fa      	ldr	r2, [r7, #12]
10001ad0:	6812      	ldr	r2, [r2, #0]
10001ad2:	601a      	str	r2, [r3, #0]
    object_ptr->next->prev  =  object_ptr->prev;
10001ad4:	68fb      	ldr	r3, [r7, #12]
10001ad6:	681b      	ldr	r3, [r3, #0]
10001ad8:	68fa      	ldr	r2, [r7, #12]
10001ada:	6852      	ldr	r2, [r2, #4]
10001adc:	605a      	str	r2, [r3, #4]
    object_ptr->next->count += object_ptr->count;
10001ade:	68fb      	ldr	r3, [r7, #12]
10001ae0:	681b      	ldr	r3, [r3, #0]
10001ae2:	68fa      	ldr	r2, [r7, #12]
10001ae4:	6812      	ldr	r2, [r2, #0]
10001ae6:	6991      	ldr	r1, [r2, #24]
10001ae8:	68fa      	ldr	r2, [r7, #12]
10001aea:	6992      	ldr	r2, [r2, #24]
10001aec:	188a      	adds	r2, r1, r2
10001aee:	619a      	str	r2, [r3, #24]
    object_ptr->next = NULL;
10001af0:	68fb      	ldr	r3, [r7, #12]
10001af2:	2200      	movs	r2, #0
10001af4:	601a      	str	r2, [r3, #0]
    object_ptr->prev = NULL;
10001af6:	68fb      	ldr	r3, [r7, #12]
10001af8:	2200      	movs	r2, #0
10001afa:	605a      	str	r2, [r3, #4]
  }
}
10001afc:	46bd      	mov	sp, r7
10001afe:	b004      	add	sp, #16
10001b00:	bd80      	pop	{r7, pc}
10001b02:	46c0      	nop			; (mov r8, r8)
10001b04:	20000680 	.word	0x20000680
10001b08:	20000620 	.word	0x20000620

10001b0c <SYSTIMER_lTimerHandler>:

/*
 * Handler function called from SysTick event handler.
 */
static void SYSTIMER_lTimerHandler(void)
{
10001b0c:	b580      	push	{r7, lr}
10001b0e:	b082      	sub	sp, #8
10001b10:	af00      	add	r7, sp, #0
  SYSTIMER_OBJECT_t *object_ptr;
  /* Get first item of timer list */
  object_ptr = g_timer_list;
10001b12:	4b2f      	ldr	r3, [pc, #188]	; (10001bd0 <SYSTIMER_lTimerHandler+0xc4>)
10001b14:	681b      	ldr	r3, [r3, #0]
10001b16:	607b      	str	r3, [r7, #4]
  while ((NULL != object_ptr) && (0U == object_ptr->count))
10001b18:	e050      	b.n	10001bbc <SYSTIMER_lTimerHandler+0xb0>
  {
    if (true == object_ptr->delete_swtmr)
10001b1a:	687b      	ldr	r3, [r7, #4]
10001b1c:	2220      	movs	r2, #32
10001b1e:	5c9b      	ldrb	r3, [r3, r2]
10001b20:	2b00      	cmp	r3, #0
10001b22:	d013      	beq.n	10001b4c <SYSTIMER_lTimerHandler+0x40>
    {
      /* Yes, remove this timer from timer list */
      SYSTIMER_lRemoveTimerList((uint32_t)object_ptr->id);
10001b24:	687b      	ldr	r3, [r7, #4]
10001b26:	695b      	ldr	r3, [r3, #20]
10001b28:	1c18      	adds	r0, r3, #0
10001b2a:	f7ff ff91 	bl	10001a50 <SYSTIMER_lRemoveTimerList>
      /* Set timer status as SYSTIMER_STATE_NOT_INITIALIZED */
      object_ptr->state = SYSTIMER_STATE_NOT_INITIALIZED;
10001b2e:	687b      	ldr	r3, [r7, #4]
10001b30:	2200      	movs	r2, #0
10001b32:	735a      	strb	r2, [r3, #13]
      /* Release resource which are hold by this timer */
      g_timer_tracker &= ~(1U << object_ptr->id);
10001b34:	687b      	ldr	r3, [r7, #4]
10001b36:	695b      	ldr	r3, [r3, #20]
10001b38:	1c1a      	adds	r2, r3, #0
10001b3a:	2301      	movs	r3, #1
10001b3c:	4093      	lsls	r3, r2
10001b3e:	43da      	mvns	r2, r3
10001b40:	4b24      	ldr	r3, [pc, #144]	; (10001bd4 <SYSTIMER_lTimerHandler+0xc8>)
10001b42:	681b      	ldr	r3, [r3, #0]
10001b44:	401a      	ands	r2, r3
10001b46:	4b23      	ldr	r3, [pc, #140]	; (10001bd4 <SYSTIMER_lTimerHandler+0xc8>)
10001b48:	601a      	str	r2, [r3, #0]
10001b4a:	e034      	b.n	10001bb6 <SYSTIMER_lTimerHandler+0xaa>
    }
    /* Check whether timer is a one shot timer */
    else if (SYSTIMER_MODE_ONE_SHOT == object_ptr->mode)
10001b4c:	687b      	ldr	r3, [r7, #4]
10001b4e:	7b1b      	ldrb	r3, [r3, #12]
10001b50:	2b00      	cmp	r3, #0
10001b52:	d112      	bne.n	10001b7a <SYSTIMER_lTimerHandler+0x6e>
    {
      if (SYSTIMER_STATE_RUNNING == object_ptr->state)
10001b54:	687b      	ldr	r3, [r7, #4]
10001b56:	7b5b      	ldrb	r3, [r3, #13]
10001b58:	2b01      	cmp	r3, #1
10001b5a:	d12c      	bne.n	10001bb6 <SYSTIMER_lTimerHandler+0xaa>
      {
        /* Yes, remove this timer from timer list */
        SYSTIMER_lRemoveTimerList((uint32_t)object_ptr->id);
10001b5c:	687b      	ldr	r3, [r7, #4]
10001b5e:	695b      	ldr	r3, [r3, #20]
10001b60:	1c18      	adds	r0, r3, #0
10001b62:	f7ff ff75 	bl	10001a50 <SYSTIMER_lRemoveTimerList>
        /* Set timer status as SYSTIMER_STATE_STOPPED */
        object_ptr->state = SYSTIMER_STATE_STOPPED;
10001b66:	687b      	ldr	r3, [r7, #4]
10001b68:	2202      	movs	r2, #2
10001b6a:	735a      	strb	r2, [r3, #13]
        /* Call timer callback function */
        (object_ptr->callback)(object_ptr->args);
10001b6c:	687b      	ldr	r3, [r7, #4]
10001b6e:	689a      	ldr	r2, [r3, #8]
10001b70:	687b      	ldr	r3, [r7, #4]
10001b72:	691b      	ldr	r3, [r3, #16]
10001b74:	1c18      	adds	r0, r3, #0
10001b76:	4790      	blx	r2
10001b78:	e01d      	b.n	10001bb6 <SYSTIMER_lTimerHandler+0xaa>
      }
    }
    /* Check whether timer is periodic timer */
    else if (SYSTIMER_MODE_PERIODIC == object_ptr->mode)
10001b7a:	687b      	ldr	r3, [r7, #4]
10001b7c:	7b1b      	ldrb	r3, [r3, #12]
10001b7e:	2b01      	cmp	r3, #1
10001b80:	d118      	bne.n	10001bb4 <SYSTIMER_lTimerHandler+0xa8>
    {
      if (SYSTIMER_STATE_RUNNING == object_ptr->state)
10001b82:	687b      	ldr	r3, [r7, #4]
10001b84:	7b5b      	ldrb	r3, [r3, #13]
10001b86:	2b01      	cmp	r3, #1
10001b88:	d115      	bne.n	10001bb6 <SYSTIMER_lTimerHandler+0xaa>
      {
        /* Yes, remove this timer from timer list */
        SYSTIMER_lRemoveTimerList((uint32_t)object_ptr->id);
10001b8a:	687b      	ldr	r3, [r7, #4]
10001b8c:	695b      	ldr	r3, [r3, #20]
10001b8e:	1c18      	adds	r0, r3, #0
10001b90:	f7ff ff5e 	bl	10001a50 <SYSTIMER_lRemoveTimerList>
        /* Reset timer tick */
        object_ptr->count = object_ptr->reload;
10001b94:	687b      	ldr	r3, [r7, #4]
10001b96:	69da      	ldr	r2, [r3, #28]
10001b98:	687b      	ldr	r3, [r7, #4]
10001b9a:	619a      	str	r2, [r3, #24]
        /* Insert timer into timer list */
        SYSTIMER_lInsertTimerList((uint32_t)object_ptr->id);
10001b9c:	687b      	ldr	r3, [r7, #4]
10001b9e:	695b      	ldr	r3, [r3, #20]
10001ba0:	1c18      	adds	r0, r3, #0
10001ba2:	f7ff fe71 	bl	10001888 <SYSTIMER_lInsertTimerList>
        /* Call timer callback function */
        (object_ptr->callback)(object_ptr->args);
10001ba6:	687b      	ldr	r3, [r7, #4]
10001ba8:	689a      	ldr	r2, [r3, #8]
10001baa:	687b      	ldr	r3, [r7, #4]
10001bac:	691b      	ldr	r3, [r3, #16]
10001bae:	1c18      	adds	r0, r3, #0
10001bb0:	4790      	blx	r2
10001bb2:	e000      	b.n	10001bb6 <SYSTIMER_lTimerHandler+0xaa>
      }
    }
    else
    {
      break;
10001bb4:	e009      	b.n	10001bca <SYSTIMER_lTimerHandler+0xbe>
    }
    /* Get first item of timer list */
    object_ptr = g_timer_list;
10001bb6:	4b06      	ldr	r3, [pc, #24]	; (10001bd0 <SYSTIMER_lTimerHandler+0xc4>)
10001bb8:	681b      	ldr	r3, [r3, #0]
10001bba:	607b      	str	r3, [r7, #4]
static void SYSTIMER_lTimerHandler(void)
{
  SYSTIMER_OBJECT_t *object_ptr;
  /* Get first item of timer list */
  object_ptr = g_timer_list;
  while ((NULL != object_ptr) && (0U == object_ptr->count))
10001bbc:	687b      	ldr	r3, [r7, #4]
10001bbe:	2b00      	cmp	r3, #0
10001bc0:	d003      	beq.n	10001bca <SYSTIMER_lTimerHandler+0xbe>
10001bc2:	687b      	ldr	r3, [r7, #4]
10001bc4:	699b      	ldr	r3, [r3, #24]
10001bc6:	2b00      	cmp	r3, #0
10001bc8:	d0a7      	beq.n	10001b1a <SYSTIMER_lTimerHandler+0xe>
      break;
    }
    /* Get first item of timer list */
    object_ptr = g_timer_list;
  }
}
10001bca:	46bd      	mov	sp, r7
10001bcc:	b002      	add	sp, #8
10001bce:	bd80      	pop	{r7, pc}
10001bd0:	20000620 	.word	0x20000620
10001bd4:	20000624 	.word	0x20000624

10001bd8 <SysTick_Handler>:

/*
 *  SysTick Event Handler.
 */
void SysTick_Handler(void)
{
10001bd8:	b580      	push	{r7, lr}
10001bda:	b082      	sub	sp, #8
10001bdc:	af00      	add	r7, sp, #0
  SYSTIMER_OBJECT_t *object_ptr;
  object_ptr = g_timer_list;
10001bde:	4b0e      	ldr	r3, [pc, #56]	; (10001c18 <SysTick_Handler+0x40>)
10001be0:	681b      	ldr	r3, [r3, #0]
10001be2:	607b      	str	r3, [r7, #4]
  g_systick_count++;
10001be4:	4b0d      	ldr	r3, [pc, #52]	; (10001c1c <SysTick_Handler+0x44>)
10001be6:	681b      	ldr	r3, [r3, #0]
10001be8:	1c5a      	adds	r2, r3, #1
10001bea:	4b0c      	ldr	r3, [pc, #48]	; (10001c1c <SysTick_Handler+0x44>)
10001bec:	601a      	str	r2, [r3, #0]

  if (NULL != object_ptr)
10001bee:	687b      	ldr	r3, [r7, #4]
10001bf0:	2b00      	cmp	r3, #0
10001bf2:	d00e      	beq.n	10001c12 <SysTick_Handler+0x3a>
  {
    if (object_ptr->count > 1UL)
10001bf4:	687b      	ldr	r3, [r7, #4]
10001bf6:	699b      	ldr	r3, [r3, #24]
10001bf8:	2b01      	cmp	r3, #1
10001bfa:	d905      	bls.n	10001c08 <SysTick_Handler+0x30>
    {
      object_ptr->count--;
10001bfc:	687b      	ldr	r3, [r7, #4]
10001bfe:	699b      	ldr	r3, [r3, #24]
10001c00:	1e5a      	subs	r2, r3, #1
10001c02:	687b      	ldr	r3, [r7, #4]
10001c04:	619a      	str	r2, [r3, #24]
10001c06:	e004      	b.n	10001c12 <SysTick_Handler+0x3a>
    }
    else
    {
      object_ptr->count = 0U;
10001c08:	687b      	ldr	r3, [r7, #4]
10001c0a:	2200      	movs	r2, #0
10001c0c:	619a      	str	r2, [r3, #24]
      SYSTIMER_lTimerHandler();
10001c0e:	f7ff ff7d 	bl	10001b0c <SYSTIMER_lTimerHandler>
    }
  }
}
10001c12:	46bd      	mov	sp, r7
10001c14:	b002      	add	sp, #8
10001c16:	bd80      	pop	{r7, pc}
10001c18:	20000620 	.word	0x20000620
10001c1c:	20000628 	.word	0x20000628

10001c20 <SYSTIMER_Init>:

/*
 * Initialization function which initializes the SYSTIMER APP, configures SysTick timer and SysTick exception.
 */
SYSTIMER_STATUS_t SYSTIMER_Init(SYSTIMER_t *handle)
{
10001c20:	b580      	push	{r7, lr}
10001c22:	b084      	sub	sp, #16
10001c24:	af00      	add	r7, sp, #0
10001c26:	6078      	str	r0, [r7, #4]
  SYSTIMER_STATUS_t status = SYSTIMER_STATUS_SUCCESS;
10001c28:	230f      	movs	r3, #15
10001c2a:	18fb      	adds	r3, r7, r3
10001c2c:	2200      	movs	r2, #0
10001c2e:	701a      	strb	r2, [r3, #0]
  XMC_ASSERT("SYSTIMER_Init: SYSTIMER APP handle pointer uninitialized", (handle != NULL));

  /* Check APP initialization status to ensure whether SYSTIMER_Init called or not, initialize SYSTIMER if
   * SYSTIMER_Init called first time.
   */
  if (false == handle->init_status)
10001c30:	687b      	ldr	r3, [r7, #4]
10001c32:	781b      	ldrb	r3, [r3, #0]
10001c34:	2201      	movs	r2, #1
10001c36:	4053      	eors	r3, r2
10001c38:	b2db      	uxtb	r3, r3
10001c3a:	2b00      	cmp	r3, #0
10001c3c:	d020      	beq.n	10001c80 <SYSTIMER_Init+0x60>
  {
    /* Initialize the header of the list */
    g_timer_list = NULL;
10001c3e:	4b14      	ldr	r3, [pc, #80]	; (10001c90 <SYSTIMER_Init+0x70>)
10001c40:	2200      	movs	r2, #0
10001c42:	601a      	str	r2, [r3, #0]
    /* Initialize SysTick timer */
    status = (SYSTIMER_STATUS_t)SysTick_Config((uint32_t)(SYSTIMER_SYSTICK_CLOCK * SYSTIMER_TICK_PERIOD));
10001c44:	23fa      	movs	r3, #250	; 0xfa
10001c46:	01db      	lsls	r3, r3, #7
10001c48:	1c18      	adds	r0, r3, #0
10001c4a:	f7ff fdf9 	bl	10001840 <SysTick_Config>
10001c4e:	1c02      	adds	r2, r0, #0
10001c50:	230f      	movs	r3, #15
10001c52:	18fb      	adds	r3, r7, r3
10001c54:	701a      	strb	r2, [r3, #0]

    if (SYSTIMER_STATUS_FAILURE == status)
10001c56:	230f      	movs	r3, #15
10001c58:	18fb      	adds	r3, r7, r3
10001c5a:	781b      	ldrb	r3, [r3, #0]
10001c5c:	2b01      	cmp	r3, #1
10001c5e:	d00f      	beq.n	10001c80 <SYSTIMER_Init+0x60>
      /* setting of First SW Timer period is always and subpriority value for XMC4000 devices */
      NVIC_SetPriority(SysTick_IRQn, NVIC_EncodePriority(
      NVIC_GetPriorityGrouping(), SYSTIMER_PRIORITY, SYSTIMER_SUBPRIORITY));
#elif (UC_FAMILY == XMC1)
      /* setting of priority value for XMC1000 devices */
      NVIC_SetPriority(SysTick_IRQn, SYSTIMER_PRIORITY);
10001c60:	2301      	movs	r3, #1
10001c62:	425b      	negs	r3, r3
10001c64:	1c18      	adds	r0, r3, #0
10001c66:	2103      	movs	r1, #3
10001c68:	f7ff fd80 	bl	1000176c <__NVIC_SetPriority>
#endif      
      g_timer_tracker = 0U;
10001c6c:	4b09      	ldr	r3, [pc, #36]	; (10001c94 <SYSTIMER_Init+0x74>)
10001c6e:	2200      	movs	r2, #0
10001c70:	601a      	str	r2, [r3, #0]
      /* Update the Initialization status of the SYSTIMER APP instance */
      handle->init_status = true;
10001c72:	687b      	ldr	r3, [r7, #4]
10001c74:	2201      	movs	r2, #1
10001c76:	701a      	strb	r2, [r3, #0]
      status = SYSTIMER_STATUS_SUCCESS;
10001c78:	230f      	movs	r3, #15
10001c7a:	18fb      	adds	r3, r7, r3
10001c7c:	2200      	movs	r2, #0
10001c7e:	701a      	strb	r2, [r3, #0]
    }
  }

  return (status);
10001c80:	230f      	movs	r3, #15
10001c82:	18fb      	adds	r3, r7, r3
10001c84:	781b      	ldrb	r3, [r3, #0]
}
10001c86:	1c18      	adds	r0, r3, #0
10001c88:	46bd      	mov	sp, r7
10001c8a:	b004      	add	sp, #16
10001c8c:	bd80      	pop	{r7, pc}
10001c8e:	46c0      	nop			; (mov r8, r8)
10001c90:	20000620 	.word	0x20000620
10001c94:	20000624 	.word	0x20000624

10001c98 <SYSTIMER_GetTime>:

/*
 *  API to get the current SysTick time in microsecond.
 */
uint32_t SYSTIMER_GetTime(void)
{
10001c98:	b580      	push	{r7, lr}
10001c9a:	af00      	add	r7, sp, #0
  return (g_systick_count * SYSTIMER_TICK_PERIOD_US);
10001c9c:	4b03      	ldr	r3, [pc, #12]	; (10001cac <SYSTIMER_GetTime+0x14>)
10001c9e:	681b      	ldr	r3, [r3, #0]
10001ca0:	22fa      	movs	r2, #250	; 0xfa
10001ca2:	0092      	lsls	r2, r2, #2
10001ca4:	4353      	muls	r3, r2
}
10001ca6:	1c18      	adds	r0, r3, #0
10001ca8:	46bd      	mov	sp, r7
10001caa:	bd80      	pop	{r7, pc}
10001cac:	20000628 	.word	0x20000628

10001cb0 <XMC_CCU4_StartPrescaler>:
 * \par<b>Related APIs:</b><br>
 * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR>
 * XMC_CCU4_StopPrescaler().
 */
__STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
{
10001cb0:	b580      	push	{r7, lr}
10001cb2:	b082      	sub	sp, #8
10001cb4:	af00      	add	r7, sp, #0
10001cb6:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
  module->GIDLC = (uint32_t) CCU4_GIDLC_SPRB_Msk;
10001cb8:	687b      	ldr	r3, [r7, #4]
10001cba:	2280      	movs	r2, #128	; 0x80
10001cbc:	0052      	lsls	r2, r2, #1
10001cbe:	60da      	str	r2, [r3, #12]
}
10001cc0:	46bd      	mov	sp, r7
10001cc2:	b002      	add	sp, #8
10001cc4:	bd80      	pop	{r7, pc}
10001cc6:	46c0      	nop			; (mov r8, r8)

10001cc8 <GLOBAL_CCU4_Init>:
  return version;
}

/* Initializes the slice with the generated configuration */
GLOBAL_CCU4_STATUS_t GLOBAL_CCU4_Init(GLOBAL_CCU4_t* handle)
{
10001cc8:	b580      	push	{r7, lr}
10001cca:	b082      	sub	sp, #8
10001ccc:	af00      	add	r7, sp, #0
10001cce:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("GLOBAL_CCU4_Init:NULL handler", (NULL != handle));

  if (false == handle->is_initialized)
10001cd0:	687b      	ldr	r3, [r7, #4]
10001cd2:	7b5b      	ldrb	r3, [r3, #13]
10001cd4:	2201      	movs	r2, #1
10001cd6:	4053      	eors	r3, r2
10001cd8:	b2db      	uxtb	r3, r3
10001cda:	2b00      	cmp	r3, #0
10001cdc:	d00f      	beq.n	10001cfe <GLOBAL_CCU4_Init+0x36>
  {
    /* Enable CCU4 module */
    XMC_CCU4_Init(handle->module_ptr,handle->mcs_action);
10001cde:	687b      	ldr	r3, [r7, #4]
10001ce0:	689a      	ldr	r2, [r3, #8]
10001ce2:	687b      	ldr	r3, [r7, #4]
10001ce4:	7b1b      	ldrb	r3, [r3, #12]
10001ce6:	1c10      	adds	r0, r2, #0
10001ce8:	1c19      	adds	r1, r3, #0
10001cea:	f7ff fbff 	bl	100014ec <XMC_CCU4_Init>
    /* Start the prescaler */
    XMC_CCU4_StartPrescaler(handle->module_ptr);
10001cee:	687b      	ldr	r3, [r7, #4]
10001cf0:	689b      	ldr	r3, [r3, #8]
10001cf2:	1c18      	adds	r0, r3, #0
10001cf4:	f7ff ffdc 	bl	10001cb0 <XMC_CCU4_StartPrescaler>
    /* Restricts multiple initializations */
    handle->is_initialized = true;
10001cf8:	687b      	ldr	r3, [r7, #4]
10001cfa:	2201      	movs	r2, #1
10001cfc:	735a      	strb	r2, [r3, #13]
  }

  return (GLOBAL_CCU4_STATUS_SUCCESS);
10001cfe:	2300      	movs	r3, #0
}
10001d00:	1c18      	adds	r0, r3, #0
10001d02:	46bd      	mov	sp, r7
10001d04:	b002      	add	sp, #8
10001d06:	bd80      	pop	{r7, pc}

10001d08 <XMC_VADC_GLOBAL_SHS_SetAnalogReference>:
 * \par<b>Related APIs:</b><BR>
 * None.
 */
__STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetAnalogReference(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
    const XMC_VADC_GLOBAL_SHS_AREF_t aref)
{
10001d08:	b580      	push	{r7, lr}
10001d0a:	b082      	sub	sp, #8
10001d0c:	af00      	add	r7, sp, #0
10001d0e:	6078      	str	r0, [r7, #4]
10001d10:	1c0a      	adds	r2, r1, #0
10001d12:	1cbb      	adds	r3, r7, #2
10001d14:	801a      	strh	r2, [r3, #0]
  XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
             (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))

  shs_ptr->SHSCFG = (shs_ptr->SHSCFG & (uint32_t)~SHS_SHSCFG_AREF_Msk) | (uint32_t)aref | SHS_SHSCFG_SCWC_Msk;
10001d16:	687b      	ldr	r3, [r7, #4]
10001d18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
10001d1a:	4a06      	ldr	r2, [pc, #24]	; (10001d34 <XMC_VADC_GLOBAL_SHS_SetAnalogReference+0x2c>)
10001d1c:	401a      	ands	r2, r3
10001d1e:	1cbb      	adds	r3, r7, #2
10001d20:	881b      	ldrh	r3, [r3, #0]
10001d22:	4313      	orrs	r3, r2
10001d24:	2280      	movs	r2, #128	; 0x80
10001d26:	0212      	lsls	r2, r2, #8
10001d28:	431a      	orrs	r2, r3
10001d2a:	687b      	ldr	r3, [r7, #4]
10001d2c:	641a      	str	r2, [r3, #64]	; 0x40
}
10001d2e:	46bd      	mov	sp, r7
10001d30:	b002      	add	sp, #8
10001d32:	bd80      	pop	{r7, pc}
10001d34:	fffff3ff 	.word	0xfffff3ff

10001d38 <GLOBAL_ADC_Init>:
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/**
 * This function initializes all instances of the ADC Global APP and low level app.
 */
GLOBAL_ADC_STATUS_t GLOBAL_ADC_Init(GLOBAL_ADC_t *const handle_ptr)
{
10001d38:	b580      	push	{r7, lr}
10001d3a:	b082      	sub	sp, #8
10001d3c:	af00      	add	r7, sp, #0
10001d3e:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("GLOBAL_ADC_Init:Invalid handle_ptr", (handle_ptr != NULL));
#if (XMC_VADC_GROUP_AVAILABLE == 1U)
  uint32_t group_index;
#endif

  if (GLOBAL_ADC_UNINITIALIZED == handle_ptr->init_state)
10001d40:	687b      	ldr	r3, [r7, #4]
10001d42:	7c1b      	ldrb	r3, [r3, #16]
10001d44:	2b02      	cmp	r3, #2
10001d46:	d119      	bne.n	10001d7c <GLOBAL_ADC_Init+0x44>
  {  
    /* Initialize an instance of Global hardware */
    XMC_VADC_GLOBAL_Init(handle_ptr->module_ptr, handle_ptr->global_config_handle);
10001d48:	687b      	ldr	r3, [r7, #4]
10001d4a:	685a      	ldr	r2, [r3, #4]
10001d4c:	687b      	ldr	r3, [r7, #4]
10001d4e:	681b      	ldr	r3, [r3, #0]
10001d50:	1c10      	adds	r0, r2, #0
10001d52:	1c19      	adds	r1, r3, #0
10001d54:	f7ff fc1c 	bl	10001590 <XMC_VADC_GLOBAL_Init>
#if(XMC_VADC_SHS_AVAILABLE == 1U)
    XMC_VADC_GLOBAL_SHS_SetClockDivider(handle_ptr->global_shs_ptr, (uint8_t) GLOBAL_ADC_DIVS_VALUE);
#endif
#endif /* _XMC_VADC_GROUP_AVAILABLE_ */
#if(XMC_VADC_SHS_AVAILABLE == 1U)
    XMC_VADC_GLOBAL_SHS_SetAnalogReference(handle_ptr->global_shs_ptr, GLOBAL_ADC_AREF_VALUE);
10001d58:	687b      	ldr	r3, [r7, #4]
10001d5a:	689b      	ldr	r3, [r3, #8]
10001d5c:	1c18      	adds	r0, r3, #0
10001d5e:	2100      	movs	r1, #0
10001d60:	f7ff ffd2 	bl	10001d08 <XMC_VADC_GLOBAL_SHS_SetAnalogReference>
#endif
    if((bool)true == handle_ptr->enable_startup_calibration)
10001d64:	687b      	ldr	r3, [r7, #4]
10001d66:	7c5b      	ldrb	r3, [r3, #17]
10001d68:	2b00      	cmp	r3, #0
10001d6a:	d004      	beq.n	10001d76 <GLOBAL_ADC_Init+0x3e>
    {
    	XMC_VADC_GLOBAL_StartupCalibration(handle_ptr->module_ptr);
10001d6c:	687b      	ldr	r3, [r7, #4]
10001d6e:	685b      	ldr	r3, [r3, #4]
10001d70:	1c18      	adds	r0, r3, #0
10001d72:	f7ff fc57 	bl	10001624 <XMC_VADC_GLOBAL_StartupCalibration>
    }
    handle_ptr->init_state = GLOBAL_ADC_SUCCESS;
10001d76:	687b      	ldr	r3, [r7, #4]
10001d78:	2200      	movs	r2, #0
10001d7a:	741a      	strb	r2, [r3, #16]
  }
  return (handle_ptr->init_state);
10001d7c:	687b      	ldr	r3, [r7, #4]
10001d7e:	7c1b      	ldrb	r3, [r3, #16]
}
10001d80:	1c18      	adds	r0, r3, #0
10001d82:	46bd      	mov	sp, r7
10001d84:	b002      	add	sp, #8
10001d86:	bd80      	pop	{r7, pc}

10001d88 <DIGITAL_IO_Init>:
* @param handler Pointer pointing to APP data structure.
* @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status.
*/

DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler)
{
10001d88:	b580      	push	{r7, lr}
10001d8a:	b082      	sub	sp, #8
10001d8c:	af00      	add	r7, sp, #0
10001d8e:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("DIGITAL_IO_Init: handler null pointer", handler != NULL);

  /* Initializes input / output characteristics */
  XMC_GPIO_Init(handler->gpio_port, handler->gpio_pin, &handler->gpio_config);
10001d90:	687b      	ldr	r3, [r7, #4]
10001d92:	6819      	ldr	r1, [r3, #0]
10001d94:	687b      	ldr	r3, [r7, #4]
10001d96:	7b1a      	ldrb	r2, [r3, #12]
10001d98:	687b      	ldr	r3, [r7, #4]
10001d9a:	3304      	adds	r3, #4
10001d9c:	1c08      	adds	r0, r1, #0
10001d9e:	1c11      	adds	r1, r2, #0
10001da0:	1c1a      	adds	r2, r3, #0
10001da2:	f7ff f9b7 	bl	10001114 <XMC_GPIO_Init>

  /*Configure hardware port control*/
  XMC_GPIO_SetHardwareControl(handler->gpio_port, handler->gpio_pin, handler->hwctrl);
10001da6:	687b      	ldr	r3, [r7, #4]
10001da8:	6819      	ldr	r1, [r3, #0]
10001daa:	687b      	ldr	r3, [r7, #4]
10001dac:	7b1a      	ldrb	r2, [r3, #12]
10001dae:	687b      	ldr	r3, [r7, #4]
10001db0:	7b5b      	ldrb	r3, [r3, #13]
10001db2:	1c08      	adds	r0, r1, #0
10001db4:	1c11      	adds	r1, r2, #0
10001db6:	1c1a      	adds	r2, r3, #0
10001db8:	f7ff fbbc 	bl	10001534 <XMC_GPIO_SetHardwareControl>

  return (DIGITAL_IO_STATUS_OK);
10001dbc:	2300      	movs	r3, #0
}
10001dbe:	1c18      	adds	r0, r3, #0
10001dc0:	46bd      	mov	sp, r7
10001dc2:	b002      	add	sp, #8
10001dc4:	bd80      	pop	{r7, pc}
10001dc6:	46c0      	nop			; (mov r8, r8)

10001dc8 <SystemCoreSetup>:
{
  .initialized = false
};
 
void SystemCoreSetup(void)
{
10001dc8:	b580      	push	{r7, lr}
10001dca:	af00      	add	r7, sp, #0
#if UC_SERIES == XMC14
  /* Enable Prefetch unit */
  SCU_GENERAL->PFUCR &= ~SCU_GENERAL_PFUCR_PFUBYP_Msk;
#endif
}
10001dcc:	46bd      	mov	sp, r7
10001dce:	bd80      	pop	{r7, pc}

10001dd0 <CLOCK_XMC1_Init>:

/*
 * API to initialize the CLOCK_XMC1 APP Interrupts
 */
CLOCK_XMC1_STATUS_t CLOCK_XMC1_Init(CLOCK_XMC1_t *handle)
{
10001dd0:	b580      	push	{r7, lr}
10001dd2:	b084      	sub	sp, #16
10001dd4:	af00      	add	r7, sp, #0
10001dd6:	6078      	str	r0, [r7, #4]
  CLOCK_XMC1_STATUS_t status = CLOCK_XMC1_STATUS_SUCCESS;
10001dd8:	230f      	movs	r3, #15
10001dda:	18fb      	adds	r3, r7, r3
10001ddc:	2200      	movs	r2, #0
10001dde:	701a      	strb	r2, [r3, #0]
  CLOCK_XMC1_STATUS_t loci_event_status = CLOCK_XMC1_STATUS_SUCCESS;
10001de0:	230e      	movs	r3, #14
10001de2:	18fb      	adds	r3, r7, r3
10001de4:	2200      	movs	r2, #0
10001de6:	701a      	strb	r2, [r3, #0]
  CLOCK_XMC1_STATUS_t stdbyclkfail_status = CLOCK_XMC1_STATUS_SUCCESS;
10001de8:	230d      	movs	r3, #13
10001dea:	18fb      	adds	r3, r7, r3
10001dec:	2200      	movs	r2, #0
10001dee:	701a      	strb	r2, [r3, #0]
  CLOCK_XMC1_STATUS_t loss_ext_clock_event_status = CLOCK_XMC1_STATUS_SUCCESS;
10001df0:	230c      	movs	r3, #12
10001df2:	18fb      	adds	r3, r7, r3
10001df4:	2200      	movs	r2, #0
10001df6:	701a      	strb	r2, [r3, #0]
  CLOCK_XMC1_STATUS_t dco1_out_sync_status = CLOCK_XMC1_STATUS_SUCCESS;
10001df8:	230b      	movs	r3, #11
10001dfa:	18fb      	adds	r3, r7, r3
10001dfc:	2200      	movs	r2, #0
10001dfe:	701a      	strb	r2, [r3, #0]

  XMC_ASSERT("CLOCK_XMC1_Init: CLOCK_XMC1 APP handle pointer uninitialized", (handle != NULL));

  if (handle->init_status == false)
10001e00:	687b      	ldr	r3, [r7, #4]
10001e02:	781b      	ldrb	r3, [r3, #0]
10001e04:	2201      	movs	r2, #1
10001e06:	4053      	eors	r3, r2
10001e08:	b2db      	uxtb	r3, r3
10001e0a:	2b00      	cmp	r3, #0
10001e0c:	d01b      	beq.n	10001e46 <CLOCK_XMC1_Init+0x76>

#endif
    }

#endif
    status = (CLOCK_XMC1_STATUS_t)(((uint32_t)loci_event_status) | ((uint32_t)stdbyclkfail_status) |
10001e0e:	230e      	movs	r3, #14
10001e10:	18fa      	adds	r2, r7, r3
10001e12:	230d      	movs	r3, #13
10001e14:	18fb      	adds	r3, r7, r3
10001e16:	7812      	ldrb	r2, [r2, #0]
10001e18:	781b      	ldrb	r3, [r3, #0]
10001e1a:	4313      	orrs	r3, r2
10001e1c:	b2da      	uxtb	r2, r3
10001e1e:	230c      	movs	r3, #12
10001e20:	18fb      	adds	r3, r7, r3
10001e22:	781b      	ldrb	r3, [r3, #0]
10001e24:	4313      	orrs	r3, r2
10001e26:	b2d9      	uxtb	r1, r3
10001e28:	230f      	movs	r3, #15
10001e2a:	18fb      	adds	r3, r7, r3
10001e2c:	220b      	movs	r2, #11
10001e2e:	18ba      	adds	r2, r7, r2
10001e30:	7812      	ldrb	r2, [r2, #0]
10001e32:	430a      	orrs	r2, r1
10001e34:	701a      	strb	r2, [r3, #0]
    		                       ((uint32_t)loss_ext_clock_event_status) | ((uint32_t)dco1_out_sync_status));
    if (CLOCK_XMC1_STATUS_SUCCESS == status)
10001e36:	230f      	movs	r3, #15
10001e38:	18fb      	adds	r3, r7, r3
10001e3a:	781b      	ldrb	r3, [r3, #0]
10001e3c:	2b00      	cmp	r3, #0
10001e3e:	d102      	bne.n	10001e46 <CLOCK_XMC1_Init+0x76>
    {
      handle->init_status = true;
10001e40:	687b      	ldr	r3, [r7, #4]
10001e42:	2201      	movs	r2, #1
10001e44:	701a      	strb	r2, [r3, #0]
    }
  }
  return (status);
10001e46:	230f      	movs	r3, #15
10001e48:	18fb      	adds	r3, r7, r3
10001e4a:	781b      	ldrb	r3, [r3, #0]
}
10001e4c:	1c18      	adds	r0, r3, #0
10001e4e:	46bd      	mov	sp, r7
10001e50:	b004      	add	sp, #16
10001e52:	bd80      	pop	{r7, pc}

10001e54 <SystemCoreClockSetup>:

/**********************************************************************************************************************
* API IMPLEMENTATION
**********************************************************************************************************************/
void SystemCoreClockSetup(void)
{
10001e54:	b590      	push	{r4, r7, lr}
10001e56:	b085      	sub	sp, #20
10001e58:	af00      	add	r7, sp, #0
/* LOCAL DATA STRUCTURES */
const XMC_SCU_CLOCK_CONFIG_t CLOCK_XMC1_0_CONFIG =
10001e5a:	1d3b      	adds	r3, r7, #4
10001e5c:	4a04      	ldr	r2, [pc, #16]	; (10001e70 <SystemCoreClockSetup+0x1c>)
10001e5e:	ca13      	ldmia	r2!, {r0, r1, r4}
10001e60:	c313      	stmia	r3!, {r0, r1, r4}
  .idiv = 1U,  /**< 8 Bit integer divider */

};

  /* Configure FDIV, IDIV, PCLKSEL dividers*/
  XMC_SCU_CLOCK_Init(&CLOCK_XMC1_0_CONFIG);
10001e62:	1d3b      	adds	r3, r7, #4
10001e64:	1c18      	adds	r0, r3, #0
10001e66:	f7ff fa2d 	bl	100012c4 <XMC_SCU_CLOCK_Init>
}
10001e6a:	46bd      	mov	sp, r7
10001e6c:	b005      	add	sp, #20
10001e6e:	bd90      	pop	{r4, r7, pc}
10001e70:	10006808 	.word	0x10006808

10001e74 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
10001e74:	b580      	push	{r7, lr}
10001e76:	b082      	sub	sp, #8
10001e78:	af00      	add	r7, sp, #0
10001e7a:	1c02      	adds	r2, r0, #0
10001e7c:	1dfb      	adds	r3, r7, #7
10001e7e:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
10001e80:	1dfb      	adds	r3, r7, #7
10001e82:	781b      	ldrb	r3, [r3, #0]
10001e84:	2b7f      	cmp	r3, #127	; 0x7f
10001e86:	d809      	bhi.n	10001e9c <__NVIC_EnableIRQ+0x28>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
10001e88:	4b06      	ldr	r3, [pc, #24]	; (10001ea4 <__NVIC_EnableIRQ+0x30>)
10001e8a:	1dfa      	adds	r2, r7, #7
10001e8c:	7812      	ldrb	r2, [r2, #0]
10001e8e:	1c11      	adds	r1, r2, #0
10001e90:	221f      	movs	r2, #31
10001e92:	400a      	ands	r2, r1
10001e94:	2101      	movs	r1, #1
10001e96:	4091      	lsls	r1, r2
10001e98:	1c0a      	adds	r2, r1, #0
10001e9a:	601a      	str	r2, [r3, #0]
    __COMPILER_BARRIER();
  }
}
10001e9c:	46bd      	mov	sp, r7
10001e9e:	b002      	add	sp, #8
10001ea0:	bd80      	pop	{r7, pc}
10001ea2:	46c0      	nop			; (mov r8, r8)
10001ea4:	e000e100 	.word	0xe000e100

10001ea8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
10001ea8:	b5b0      	push	{r4, r5, r7, lr}
10001eaa:	b082      	sub	sp, #8
10001eac:	af00      	add	r7, sp, #0
10001eae:	1c02      	adds	r2, r0, #0
10001eb0:	6039      	str	r1, [r7, #0]
10001eb2:	1dfb      	adds	r3, r7, #7
10001eb4:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
10001eb6:	1dfb      	adds	r3, r7, #7
10001eb8:	781b      	ldrb	r3, [r3, #0]
10001eba:	2b7f      	cmp	r3, #127	; 0x7f
10001ebc:	d827      	bhi.n	10001f0e <__NVIC_SetPriority+0x66>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10001ebe:	4c2d      	ldr	r4, [pc, #180]	; (10001f74 <__NVIC_SetPriority+0xcc>)
10001ec0:	1dfb      	adds	r3, r7, #7
10001ec2:	781b      	ldrb	r3, [r3, #0]
10001ec4:	b25b      	sxtb	r3, r3
10001ec6:	089b      	lsrs	r3, r3, #2
10001ec8:	492a      	ldr	r1, [pc, #168]	; (10001f74 <__NVIC_SetPriority+0xcc>)
10001eca:	1dfa      	adds	r2, r7, #7
10001ecc:	7812      	ldrb	r2, [r2, #0]
10001ece:	b252      	sxtb	r2, r2
10001ed0:	0892      	lsrs	r2, r2, #2
10001ed2:	32c0      	adds	r2, #192	; 0xc0
10001ed4:	0092      	lsls	r2, r2, #2
10001ed6:	5852      	ldr	r2, [r2, r1]
10001ed8:	1df9      	adds	r1, r7, #7
10001eda:	7809      	ldrb	r1, [r1, #0]
10001edc:	1c08      	adds	r0, r1, #0
10001ede:	2103      	movs	r1, #3
10001ee0:	4001      	ands	r1, r0
10001ee2:	00c9      	lsls	r1, r1, #3
10001ee4:	1c08      	adds	r0, r1, #0
10001ee6:	21ff      	movs	r1, #255	; 0xff
10001ee8:	4081      	lsls	r1, r0
10001eea:	43c9      	mvns	r1, r1
10001eec:	4011      	ands	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
10001eee:	683a      	ldr	r2, [r7, #0]
10001ef0:	0192      	lsls	r2, r2, #6
10001ef2:	20ff      	movs	r0, #255	; 0xff
10001ef4:	4002      	ands	r2, r0
10001ef6:	1df8      	adds	r0, r7, #7
10001ef8:	7800      	ldrb	r0, [r0, #0]
10001efa:	1c05      	adds	r5, r0, #0
10001efc:	2003      	movs	r0, #3
10001efe:	4028      	ands	r0, r5
10001f00:	00c0      	lsls	r0, r0, #3
10001f02:	4082      	lsls	r2, r0
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10001f04:	430a      	orrs	r2, r1
10001f06:	33c0      	adds	r3, #192	; 0xc0
10001f08:	009b      	lsls	r3, r3, #2
10001f0a:	511a      	str	r2, [r3, r4]
10001f0c:	e02e      	b.n	10001f6c <__NVIC_SetPriority+0xc4>
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10001f0e:	4c1a      	ldr	r4, [pc, #104]	; (10001f78 <__NVIC_SetPriority+0xd0>)
10001f10:	1dfb      	adds	r3, r7, #7
10001f12:	781b      	ldrb	r3, [r3, #0]
10001f14:	1c1a      	adds	r2, r3, #0
10001f16:	230f      	movs	r3, #15
10001f18:	4013      	ands	r3, r2
10001f1a:	3b08      	subs	r3, #8
10001f1c:	0899      	lsrs	r1, r3, #2
10001f1e:	4a16      	ldr	r2, [pc, #88]	; (10001f78 <__NVIC_SetPriority+0xd0>)
10001f20:	1dfb      	adds	r3, r7, #7
10001f22:	781b      	ldrb	r3, [r3, #0]
10001f24:	1c18      	adds	r0, r3, #0
10001f26:	230f      	movs	r3, #15
10001f28:	4003      	ands	r3, r0
10001f2a:	3b08      	subs	r3, #8
10001f2c:	089b      	lsrs	r3, r3, #2
10001f2e:	3306      	adds	r3, #6
10001f30:	009b      	lsls	r3, r3, #2
10001f32:	18d3      	adds	r3, r2, r3
10001f34:	685b      	ldr	r3, [r3, #4]
10001f36:	1dfa      	adds	r2, r7, #7
10001f38:	7812      	ldrb	r2, [r2, #0]
10001f3a:	1c10      	adds	r0, r2, #0
10001f3c:	2203      	movs	r2, #3
10001f3e:	4002      	ands	r2, r0
10001f40:	00d2      	lsls	r2, r2, #3
10001f42:	1c10      	adds	r0, r2, #0
10001f44:	22ff      	movs	r2, #255	; 0xff
10001f46:	4082      	lsls	r2, r0
10001f48:	43d2      	mvns	r2, r2
10001f4a:	401a      	ands	r2, r3
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
10001f4c:	683b      	ldr	r3, [r7, #0]
10001f4e:	019b      	lsls	r3, r3, #6
10001f50:	20ff      	movs	r0, #255	; 0xff
10001f52:	4003      	ands	r3, r0
10001f54:	1df8      	adds	r0, r7, #7
10001f56:	7800      	ldrb	r0, [r0, #0]
10001f58:	1c05      	adds	r5, r0, #0
10001f5a:	2003      	movs	r0, #3
10001f5c:	4028      	ands	r0, r5
10001f5e:	00c0      	lsls	r0, r0, #3
10001f60:	4083      	lsls	r3, r0
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10001f62:	431a      	orrs	r2, r3
10001f64:	1d8b      	adds	r3, r1, #6
10001f66:	009b      	lsls	r3, r3, #2
10001f68:	18e3      	adds	r3, r4, r3
10001f6a:	605a      	str	r2, [r3, #4]
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
10001f6c:	46bd      	mov	sp, r7
10001f6e:	b002      	add	sp, #8
10001f70:	bdb0      	pop	{r4, r5, r7, pc}
10001f72:	46c0      	nop			; (mov r8, r8)
10001f74:	e000e100 	.word	0xe000e100
10001f78:	e000ed00 	.word	0xe000ed00

10001f7c <XMC_VADC_GLOBAL_ResultInit>:
 * None
 *
 */

__STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_CONFIG_t *config)
{
10001f7c:	b580      	push	{r7, lr}
10001f7e:	b082      	sub	sp, #8
10001f80:	af00      	add	r7, sp, #0
10001f82:	6078      	str	r0, [r7, #4]
10001f84:	6039      	str	r1, [r7, #0]
  XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))

  /* Configure GLOBRCR*/
  global_ptr->GLOBRCR = config->g_rcr;
10001f86:	683b      	ldr	r3, [r7, #0]
10001f88:	6819      	ldr	r1, [r3, #0]
10001f8a:	687a      	ldr	r2, [r7, #4]
10001f8c:	23a0      	movs	r3, #160	; 0xa0
10001f8e:	009b      	lsls	r3, r3, #2
10001f90:	50d1      	str	r1, [r2, r3]
}
10001f92:	46bd      	mov	sp, r7
10001f94:	b002      	add	sp, #8
10001f96:	bd80      	pop	{r7, pc}

10001f98 <XMC_VADC_GLOBAL_BackgroundTriggerConversion>:
 *
 * \par<b>Related APIs:</b><br>
 *  None.
 */
__STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerConversion(XMC_VADC_GLOBAL_t *const global_ptr)
{
10001f98:	b580      	push	{r7, lr}
10001f9a:	b082      	sub	sp, #8
10001f9c:	af00      	add	r7, sp, #0
10001f9e:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerConversion:Wrong Module Pointer", (global_ptr == VADC))
  global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_LDEV_Msk;
10001fa0:	687a      	ldr	r2, [r7, #4]
10001fa2:	2381      	movs	r3, #129	; 0x81
10001fa4:	009b      	lsls	r3, r3, #2
10001fa6:	58d3      	ldr	r3, [r2, r3]
10001fa8:	2280      	movs	r2, #128	; 0x80
10001faa:	0092      	lsls	r2, r2, #2
10001fac:	431a      	orrs	r2, r3
10001fae:	1c11      	adds	r1, r2, #0
10001fb0:	687a      	ldr	r2, [r7, #4]
10001fb2:	2381      	movs	r3, #129	; 0x81
10001fb4:	009b      	lsls	r3, r3, #2
10001fb6:	50d1      	str	r1, [r2, r3]
}
10001fb8:	46bd      	mov	sp, r7
10001fba:	b002      	add	sp, #8
10001fbc:	bd80      	pop	{r7, pc}
10001fbe:	46c0      	nop			; (mov r8, r8)

10001fc0 <XMC_VADC_GLOBAL_BackgroundAddChannelToSequence>:
 *  XMC_VADC_GLOBAL_BackgroundAddMultipleChannels()<BR>
 */
__STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(XMC_VADC_GLOBAL_t *const global_ptr,
    const uint32_t grp_num,
    const uint32_t ch_num)
{
10001fc0:	b580      	push	{r7, lr}
10001fc2:	b084      	sub	sp, #16
10001fc4:	af00      	add	r7, sp, #0
10001fc6:	60f8      	str	r0, [r7, #12]
10001fc8:	60b9      	str	r1, [r7, #8]
10001fca:	607a      	str	r2, [r7, #4]
  XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == VADC))
  XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number", ((grp_num) < XMC_VADC_MAXIMUM_NUM_GROUPS))
  XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
             ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))

  global_ptr->BRSSEL[grp_num] |= (uint32_t)((uint32_t)1 << ch_num);
10001fcc:	68fb      	ldr	r3, [r7, #12]
10001fce:	68ba      	ldr	r2, [r7, #8]
10001fd0:	3260      	adds	r2, #96	; 0x60
10001fd2:	0092      	lsls	r2, r2, #2
10001fd4:	58d2      	ldr	r2, [r2, r3]
10001fd6:	687b      	ldr	r3, [r7, #4]
10001fd8:	2101      	movs	r1, #1
10001fda:	4099      	lsls	r1, r3
10001fdc:	1c0b      	adds	r3, r1, #0
10001fde:	431a      	orrs	r2, r3
10001fe0:	1c11      	adds	r1, r2, #0
10001fe2:	68fb      	ldr	r3, [r7, #12]
10001fe4:	68ba      	ldr	r2, [r7, #8]
10001fe6:	3260      	adds	r2, #96	; 0x60
10001fe8:	0092      	lsls	r2, r2, #2
10001fea:	50d1      	str	r1, [r2, r3]
}
10001fec:	46bd      	mov	sp, r7
10001fee:	b004      	add	sp, #16
10001ff0:	bd80      	pop	{r7, pc}
10001ff2:	46c0      	nop			; (mov r8, r8)

10001ff4 <ADC_MEASUREMENT_Init>:
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/* Initialization routine to call ADC LLD API's */
ADC_MEASUREMENT_STATUS_t ADC_MEASUREMENT_Init(ADC_MEASUREMENT_t *const handle_ptr)
{
10001ff4:	b590      	push	{r4, r7, lr}
10001ff6:	b085      	sub	sp, #20
10001ff8:	af00      	add	r7, sp, #0
10001ffa:	6078      	str	r0, [r7, #4]
  uint8_t j;
  ADC_MEASUREMENT_STATUS_t status;

  XMC_ASSERT("ADC_MEASUREMENT_Init:Invalid handle_ptr", (handle_ptr != NULL));

  if (ADC_MEASUREMENT_STATUS_UNINITIALIZED == handle_ptr->init_state)
10001ffc:	687b      	ldr	r3, [r7, #4]
10001ffe:	7e1b      	ldrb	r3, [r3, #24]
10002000:	2b02      	cmp	r3, #2
10002002:	d000      	beq.n	10002006 <ADC_MEASUREMENT_Init+0x12>
10002004:	e08b      	b.n	1000211e <ADC_MEASUREMENT_Init+0x12a>
  {
    /* Call the function to initialise Clock and ADC global functional units*/
    status = (ADC_MEASUREMENT_STATUS_t) GLOBAL_ADC_Init(handle_ptr->global_handle);
10002006:	687b      	ldr	r3, [r7, #4]
10002008:	68db      	ldr	r3, [r3, #12]
1000200a:	220e      	movs	r2, #14
1000200c:	18bc      	adds	r4, r7, r2
1000200e:	1c18      	adds	r0, r3, #0
10002010:	f7ff fe92 	bl	10001d38 <GLOBAL_ADC_Init>
10002014:	1c03      	adds	r3, r0, #0
10002016:	7023      	strb	r3, [r4, #0]
  
    /*Initialize the Global Conversion class 0*/
    XMC_VADC_GLOBAL_InputClassInit(handle_ptr->global_handle->module_ptr,*handle_ptr->iclass_config_handle,
10002018:	687b      	ldr	r3, [r7, #4]
1000201a:	68db      	ldr	r3, [r3, #12]
1000201c:	685a      	ldr	r2, [r3, #4]
1000201e:	687b      	ldr	r3, [r7, #4]
10002020:	689b      	ldr	r3, [r3, #8]
10002022:	681b      	ldr	r3, [r3, #0]
10002024:	1c10      	adds	r0, r2, #0
10002026:	1c19      	adds	r1, r3, #0
10002028:	2200      	movs	r2, #0
1000202a:	2300      	movs	r3, #0
1000202c:	f7ff fae4 	bl	100015f8 <XMC_VADC_GLOBAL_InputClassInit>
                                      XMC_VADC_GROUP_CONV_STD,ADC_MEASUREMENT_ICLASS_NUM);
#if (UC_SERIES == XMC11)
    /*Initialize the Global Conversion class 1*/
    XMC_VADC_GLOBAL_InputClassInit(handle_ptr->global_handle->module_ptr,*handle_ptr->iclass_config_handle,
10002030:	687b      	ldr	r3, [r7, #4]
10002032:	68db      	ldr	r3, [r3, #12]
10002034:	685a      	ldr	r2, [r3, #4]
10002036:	687b      	ldr	r3, [r7, #4]
10002038:	689b      	ldr	r3, [r3, #8]
1000203a:	681b      	ldr	r3, [r3, #0]
1000203c:	1c10      	adds	r0, r2, #0
1000203e:	1c19      	adds	r1, r3, #0
10002040:	2200      	movs	r2, #0
10002042:	2301      	movs	r3, #1
10002044:	f7ff fad8 	bl	100015f8 <XMC_VADC_GLOBAL_InputClassInit>
                                      XMC_VADC_GROUP_CONV_STD,ADC_MEASUREMENT_ICLASS_NUM_XMC11);
#endif
  
    /* Initialize the Background Scan hardware */
    XMC_VADC_GLOBAL_BackgroundInit(handle_ptr->global_handle->module_ptr, handle_ptr->backgnd_config_handle);
10002048:	687b      	ldr	r3, [r7, #4]
1000204a:	68db      	ldr	r3, [r3, #12]
1000204c:	685a      	ldr	r2, [r3, #4]
1000204e:	687b      	ldr	r3, [r7, #4]
10002050:	685b      	ldr	r3, [r3, #4]
10002052:	1c10      	adds	r0, r2, #0
10002054:	1c19      	adds	r1, r3, #0
10002056:	f7ff fb35 	bl	100016c4 <XMC_VADC_GLOBAL_BackgroundInit>
  
#if (XMC_VADC_GROUP_AVAILABLE == 0U)
    /* Initialize the global result register */
    XMC_VADC_GLOBAL_ResultInit(handle_ptr->global_handle->module_ptr,handle_ptr->array->res_handle);
1000205a:	687b      	ldr	r3, [r7, #4]
1000205c:	68db      	ldr	r3, [r3, #12]
1000205e:	685a      	ldr	r2, [r3, #4]
10002060:	687b      	ldr	r3, [r7, #4]
10002062:	681b      	ldr	r3, [r3, #0]
10002064:	685b      	ldr	r3, [r3, #4]
10002066:	1c10      	adds	r0, r2, #0
10002068:	1c19      	adds	r1, r3, #0
1000206a:	f7ff ff87 	bl	10001f7c <XMC_VADC_GLOBAL_ResultInit>
#endif

    for (j = (uint8_t)0; j < (uint8_t)ADC_MEASUREMENT_MAXCHANNELS; j++)
1000206e:	230f      	movs	r3, #15
10002070:	18fb      	adds	r3, r7, r3
10002072:	2200      	movs	r2, #0
10002074:	701a      	strb	r2, [r3, #0]
10002076:	e01a      	b.n	100020ae <ADC_MEASUREMENT_Init+0xba>
    {
      indexed = handle_ptr->array->channel_array[j];
10002078:	687b      	ldr	r3, [r7, #4]
1000207a:	681b      	ldr	r3, [r3, #0]
1000207c:	220f      	movs	r2, #15
1000207e:	18ba      	adds	r2, r7, r2
10002080:	7812      	ldrb	r2, [r2, #0]
10002082:	0092      	lsls	r2, r2, #2
10002084:	58d3      	ldr	r3, [r2, r3]
10002086:	60bb      	str	r3, [r7, #8]
      /* Initialize for configured result registers */
      XMC_VADC_GROUP_ResultInit(indexed->group_handle, (uint32_t)indexed->ch_handle->result_reg_number,
                                indexed->res_handle);
#endif
      /* Add all channels into the Background Request Source Channel Select Register */
      XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(handle_ptr->global_handle->module_ptr,
10002088:	687b      	ldr	r3, [r7, #4]
1000208a:	68db      	ldr	r3, [r3, #12]
1000208c:	685a      	ldr	r2, [r3, #4]
                                                     (uint32_t)indexed->group_index, (uint32_t)indexed->ch_num);
1000208e:	68bb      	ldr	r3, [r7, #8]
10002090:	781b      	ldrb	r3, [r3, #0]
      /* Initialize for configured result registers */
      XMC_VADC_GROUP_ResultInit(indexed->group_handle, (uint32_t)indexed->ch_handle->result_reg_number,
                                indexed->res_handle);
#endif
      /* Add all channels into the Background Request Source Channel Select Register */
      XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(handle_ptr->global_handle->module_ptr,
10002092:	1c19      	adds	r1, r3, #0
                                                     (uint32_t)indexed->group_index, (uint32_t)indexed->ch_num);
10002094:	68bb      	ldr	r3, [r7, #8]
10002096:	785b      	ldrb	r3, [r3, #1]
      /* Initialize for configured result registers */
      XMC_VADC_GROUP_ResultInit(indexed->group_handle, (uint32_t)indexed->ch_handle->result_reg_number,
                                indexed->res_handle);
#endif
      /* Add all channels into the Background Request Source Channel Select Register */
      XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(handle_ptr->global_handle->module_ptr,
10002098:	1c10      	adds	r0, r2, #0
1000209a:	1c1a      	adds	r2, r3, #0
1000209c:	f7ff ff90 	bl	10001fc0 <XMC_VADC_GLOBAL_BackgroundAddChannelToSequence>
#if (XMC_VADC_GROUP_AVAILABLE == 0U)
    /* Initialize the global result register */
    XMC_VADC_GLOBAL_ResultInit(handle_ptr->global_handle->module_ptr,handle_ptr->array->res_handle);
#endif

    for (j = (uint8_t)0; j < (uint8_t)ADC_MEASUREMENT_MAXCHANNELS; j++)
100020a0:	230f      	movs	r3, #15
100020a2:	18fb      	adds	r3, r7, r3
100020a4:	781a      	ldrb	r2, [r3, #0]
100020a6:	230f      	movs	r3, #15
100020a8:	18fb      	adds	r3, r7, r3
100020aa:	3201      	adds	r2, #1
100020ac:	701a      	strb	r2, [r3, #0]
100020ae:	230f      	movs	r3, #15
100020b0:	18fb      	adds	r3, r7, r3
100020b2:	781b      	ldrb	r3, [r3, #0]
100020b4:	2b00      	cmp	r3, #0
100020b6:	d0df      	beq.n	10002078 <ADC_MEASUREMENT_Init+0x84>
  XMC_SCU_SetInterruptControl(handle_ptr->req_src_intr_handle->node_id,
                              ((handle_ptr->req_src_intr_handle->node_id << 8) | handle_ptr->req_src_intr_handle->irqctrl));
#endif
    }
#else /* Selected device is XMC11*/
    XMC_VADC_GLOBAL_SetResultEventInterruptNode(handle_ptr->global_handle->module_ptr, handle_ptr->srv_req_node );
100020b8:	687b      	ldr	r3, [r7, #4]
100020ba:	68db      	ldr	r3, [r3, #12]
100020bc:	685a      	ldr	r2, [r3, #4]
100020be:	687b      	ldr	r3, [r7, #4]
100020c0:	7e5b      	ldrb	r3, [r3, #25]
100020c2:	1c10      	adds	r0, r2, #0
100020c4:	1c19      	adds	r1, r3, #0
100020c6:	f7ff facd 	bl	10001664 <XMC_VADC_GLOBAL_SetResultEventInterruptNode>
#ifdef ADC_MEASUREMENT_CPU_1X /* End of single measurement is enabled*/
    NVIC_SetPriority((IRQn_Type)handle_ptr->result_intr_handle->node_id,
100020ca:	687b      	ldr	r3, [r7, #4]
100020cc:	691b      	ldr	r3, [r3, #16]
100020ce:	681b      	ldr	r3, [r3, #0]
100020d0:	b2da      	uxtb	r2, r3
                            handle_ptr->result_intr_handle->priority);
100020d2:	687b      	ldr	r3, [r7, #4]
100020d4:	691b      	ldr	r3, [r3, #16]
#endif
    }
#else /* Selected device is XMC11*/
    XMC_VADC_GLOBAL_SetResultEventInterruptNode(handle_ptr->global_handle->module_ptr, handle_ptr->srv_req_node );
#ifdef ADC_MEASUREMENT_CPU_1X /* End of single measurement is enabled*/
    NVIC_SetPriority((IRQn_Type)handle_ptr->result_intr_handle->node_id,
100020d6:	685b      	ldr	r3, [r3, #4]
100020d8:	b252      	sxtb	r2, r2
100020da:	1c10      	adds	r0, r2, #0
100020dc:	1c19      	adds	r1, r3, #0
100020de:	f7ff fee3 	bl	10001ea8 <__NVIC_SetPriority>
                            handle_ptr->result_intr_handle->priority);

    /* Enable Background Scan Request source IRQ */
    NVIC_EnableIRQ((IRQn_Type)handle_ptr->result_intr_handle->node_id);
100020e2:	687b      	ldr	r3, [r7, #4]
100020e4:	691b      	ldr	r3, [r3, #16]
100020e6:	681b      	ldr	r3, [r3, #0]
100020e8:	b2db      	uxtb	r3, r3
100020ea:	b25b      	sxtb	r3, r3
100020ec:	1c18      	adds	r0, r3, #0
100020ee:	f7ff fec1 	bl	10001e74 <__NVIC_EnableIRQ>
#endif
#endif
    /* Mux Configuration is done*/
    if (handle_ptr->mux_config != NULL)
100020f2:	687b      	ldr	r3, [r7, #4]
100020f4:	695b      	ldr	r3, [r3, #20]
100020f6:	2b00      	cmp	r3, #0
100020f8:	d002      	beq.n	10002100 <ADC_MEASUREMENT_Init+0x10c>
    {
      (handle_ptr->mux_config)();
100020fa:	687b      	ldr	r3, [r7, #4]
100020fc:	695b      	ldr	r3, [r3, #20]
100020fe:	4798      	blx	r3
    }
  
    if (handle_ptr->start_conversion != (bool)false)
10002100:	687b      	ldr	r3, [r7, #4]
10002102:	7e9b      	ldrb	r3, [r3, #26]
10002104:	2b00      	cmp	r3, #0
10002106:	d005      	beq.n	10002114 <ADC_MEASUREMENT_Init+0x120>
    {
      /* Start conversion manually using load event trigger*/
      XMC_VADC_GLOBAL_BackgroundTriggerConversion(handle_ptr->global_handle->module_ptr);
10002108:	687b      	ldr	r3, [r7, #4]
1000210a:	68db      	ldr	r3, [r3, #12]
1000210c:	685b      	ldr	r3, [r3, #4]
1000210e:	1c18      	adds	r0, r3, #0
10002110:	f7ff ff42 	bl	10001f98 <XMC_VADC_GLOBAL_BackgroundTriggerConversion>
    }
    handle_ptr->init_state = status;
10002114:	687b      	ldr	r3, [r7, #4]
10002116:	220e      	movs	r2, #14
10002118:	18ba      	adds	r2, r7, r2
1000211a:	7812      	ldrb	r2, [r2, #0]
1000211c:	761a      	strb	r2, [r3, #24]
  }
  return (handle_ptr->init_state);
1000211e:	687b      	ldr	r3, [r7, #4]
10002120:	7e1b      	ldrb	r3, [r3, #24]
}
10002122:	1c18      	adds	r0, r3, #0
10002124:	46bd      	mov	sp, r7
10002126:	b005      	add	sp, #20
10002128:	bd90      	pop	{r4, r7, pc}
1000212a:	46c0      	nop			; (mov r8, r8)

1000212c <ADC_MEASUREMENT_StartConversion>:
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

/* This API will Software trigger ADC Background request source and starts conversion*/
void ADC_MEASUREMENT_StartConversion(ADC_MEASUREMENT_t *const handle_ptr)
{
1000212c:	b580      	push	{r7, lr}
1000212e:	b082      	sub	sp, #8
10002130:	af00      	add	r7, sp, #0
10002132:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("ADC_MEASUREMENT_Start:Invalid handle_ptr", (handle_ptr != NULL));

  /* Generate a load event to start background request source conversion*/
  XMC_VADC_GLOBAL_BackgroundTriggerConversion(handle_ptr->global_handle->module_ptr);
10002134:	687b      	ldr	r3, [r7, #4]
10002136:	68db      	ldr	r3, [r3, #12]
10002138:	685b      	ldr	r3, [r3, #4]
1000213a:	1c18      	adds	r0, r3, #0
1000213c:	f7ff ff2c 	bl	10001f98 <XMC_VADC_GLOBAL_BackgroundTriggerConversion>
}
10002140:	46bd      	mov	sp, r7
10002142:	b002      	add	sp, #8
10002144:	bd80      	pop	{r7, pc}
10002146:	46c0      	nop			; (mov r8, r8)

10002148 <DAVE_Init>:
 * @param[in]  None
 *
 * @return  DAVE_STATUS_t <BR>
 ******************************************************************************/
__WEAK DAVE_STATUS_t DAVE_Init(void)
{
10002148:	b590      	push	{r4, r7, lr}
1000214a:	b083      	sub	sp, #12
1000214c:	af00      	add	r7, sp, #0
  DAVE_STATUS_t init_status;
  
  init_status = DAVE_STATUS_SUCCESS;
1000214e:	1dfb      	adds	r3, r7, #7
10002150:	2200      	movs	r2, #0
10002152:	701a      	strb	r2, [r3, #0]
     /** @Initialization of APPs Init Functions */
     init_status = (DAVE_STATUS_t)CLOCK_XMC1_Init(&CLOCK_XMC1_0);
10002154:	1dfc      	adds	r4, r7, #7
10002156:	4b53      	ldr	r3, [pc, #332]	; (100022a4 <DAVE_Init+0x15c>)
10002158:	1c18      	adds	r0, r3, #0
1000215a:	f7ff fe39 	bl	10001dd0 <CLOCK_XMC1_Init>
1000215e:	1c03      	adds	r3, r0, #0
10002160:	7023      	strb	r3, [r4, #0]

  if (init_status == DAVE_STATUS_SUCCESS)
10002162:	1dfb      	adds	r3, r7, #7
10002164:	781b      	ldrb	r3, [r3, #0]
10002166:	2b00      	cmp	r3, #0
10002168:	d106      	bne.n	10002178 <DAVE_Init+0x30>
  {
	 /**  Initialization of ADC_MEASUREMENT APP instance ADC_SENSOR */
	 init_status = (DAVE_STATUS_t)ADC_MEASUREMENT_Init(&ADC_SENSOR); 
1000216a:	1dfc      	adds	r4, r7, #7
1000216c:	4b4e      	ldr	r3, [pc, #312]	; (100022a8 <DAVE_Init+0x160>)
1000216e:	1c18      	adds	r0, r3, #0
10002170:	f7ff ff40 	bl	10001ff4 <ADC_MEASUREMENT_Init>
10002174:	1c03      	adds	r3, r0, #0
10002176:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
10002178:	1dfb      	adds	r3, r7, #7
1000217a:	781b      	ldrb	r3, [r3, #0]
1000217c:	2b00      	cmp	r3, #0
1000217e:	d106      	bne.n	1000218e <DAVE_Init+0x46>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_USB_SI */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_USB_SI); 
10002180:	1dfc      	adds	r4, r7, #7
10002182:	4b4a      	ldr	r3, [pc, #296]	; (100022ac <DAVE_Init+0x164>)
10002184:	1c18      	adds	r0, r3, #0
10002186:	f7ff fdff 	bl	10001d88 <DIGITAL_IO_Init>
1000218a:	1c03      	adds	r3, r0, #0
1000218c:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
1000218e:	1dfb      	adds	r3, r7, #7
10002190:	781b      	ldrb	r3, [r3, #0]
10002192:	2b00      	cmp	r3, #0
10002194:	d106      	bne.n	100021a4 <DAVE_Init+0x5c>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_USB_OE */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_USB_OE); 
10002196:	1dfc      	adds	r4, r7, #7
10002198:	4b45      	ldr	r3, [pc, #276]	; (100022b0 <DAVE_Init+0x168>)
1000219a:	1c18      	adds	r0, r3, #0
1000219c:	f7ff fdf4 	bl	10001d88 <DIGITAL_IO_Init>
100021a0:	1c03      	adds	r3, r0, #0
100021a2:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
100021a4:	1dfb      	adds	r3, r7, #7
100021a6:	781b      	ldrb	r3, [r3, #0]
100021a8:	2b00      	cmp	r3, #0
100021aa:	d106      	bne.n	100021ba <DAVE_Init+0x72>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_LED_RELAY */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_LED_RELAY); 
100021ac:	1dfc      	adds	r4, r7, #7
100021ae:	4b41      	ldr	r3, [pc, #260]	; (100022b4 <DAVE_Init+0x16c>)
100021b0:	1c18      	adds	r0, r3, #0
100021b2:	f7ff fde9 	bl	10001d88 <DIGITAL_IO_Init>
100021b6:	1c03      	adds	r3, r0, #0
100021b8:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
100021ba:	1dfb      	adds	r3, r7, #7
100021bc:	781b      	ldrb	r3, [r3, #0]
100021be:	2b00      	cmp	r3, #0
100021c0:	d106      	bne.n	100021d0 <DAVE_Init+0x88>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_SW_USB */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_SW_USB); 
100021c2:	1dfc      	adds	r4, r7, #7
100021c4:	4b3c      	ldr	r3, [pc, #240]	; (100022b8 <DAVE_Init+0x170>)
100021c6:	1c18      	adds	r0, r3, #0
100021c8:	f7ff fdde 	bl	10001d88 <DIGITAL_IO_Init>
100021cc:	1c03      	adds	r3, r0, #0
100021ce:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
100021d0:	1dfb      	adds	r3, r7, #7
100021d2:	781b      	ldrb	r3, [r3, #0]
100021d4:	2b00      	cmp	r3, #0
100021d6:	d106      	bne.n	100021e6 <DAVE_Init+0x9e>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_SW_UP */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_SW_UP); 
100021d8:	1dfc      	adds	r4, r7, #7
100021da:	4b38      	ldr	r3, [pc, #224]	; (100022bc <DAVE_Init+0x174>)
100021dc:	1c18      	adds	r0, r3, #0
100021de:	f7ff fdd3 	bl	10001d88 <DIGITAL_IO_Init>
100021e2:	1c03      	adds	r3, r0, #0
100021e4:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
100021e6:	1dfb      	adds	r3, r7, #7
100021e8:	781b      	ldrb	r3, [r3, #0]
100021ea:	2b00      	cmp	r3, #0
100021ec:	d106      	bne.n	100021fc <DAVE_Init+0xb4>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_SW_DOWN */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_SW_DOWN); 
100021ee:	1dfc      	adds	r4, r7, #7
100021f0:	4b33      	ldr	r3, [pc, #204]	; (100022c0 <DAVE_Init+0x178>)
100021f2:	1c18      	adds	r0, r3, #0
100021f4:	f7ff fdc8 	bl	10001d88 <DIGITAL_IO_Init>
100021f8:	1c03      	adds	r3, r0, #0
100021fa:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
100021fc:	1dfb      	adds	r3, r7, #7
100021fe:	781b      	ldrb	r3, [r3, #0]
10002200:	2b00      	cmp	r3, #0
10002202:	d106      	bne.n	10002212 <DAVE_Init+0xca>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_USBPWR_2 */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_USBPWR_2); 
10002204:	1dfc      	adds	r4, r7, #7
10002206:	4b2f      	ldr	r3, [pc, #188]	; (100022c4 <DAVE_Init+0x17c>)
10002208:	1c18      	adds	r0, r3, #0
1000220a:	f7ff fdbd 	bl	10001d88 <DIGITAL_IO_Init>
1000220e:	1c03      	adds	r3, r0, #0
10002210:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
10002212:	1dfb      	adds	r3, r7, #7
10002214:	781b      	ldrb	r3, [r3, #0]
10002216:	2b00      	cmp	r3, #0
10002218:	d106      	bne.n	10002228 <DAVE_Init+0xe0>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_USBPWR_1 */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_USBPWR_1); 
1000221a:	1dfc      	adds	r4, r7, #7
1000221c:	4b2a      	ldr	r3, [pc, #168]	; (100022c8 <DAVE_Init+0x180>)
1000221e:	1c18      	adds	r0, r3, #0
10002220:	f7ff fdb2 	bl	10001d88 <DIGITAL_IO_Init>
10002224:	1c03      	adds	r3, r0, #0
10002226:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
10002228:	1dfb      	adds	r3, r7, #7
1000222a:	781b      	ldrb	r3, [r3, #0]
1000222c:	2b00      	cmp	r3, #0
1000222e:	d106      	bne.n	1000223e <DAVE_Init+0xf6>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_RELAY */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_RELAY); 
10002230:	1dfc      	adds	r4, r7, #7
10002232:	4b26      	ldr	r3, [pc, #152]	; (100022cc <DAVE_Init+0x184>)
10002234:	1c18      	adds	r0, r3, #0
10002236:	f7ff fda7 	bl	10001d88 <DIGITAL_IO_Init>
1000223a:	1c03      	adds	r3, r0, #0
1000223c:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
1000223e:	1dfb      	adds	r3, r7, #7
10002240:	781b      	ldrb	r3, [r3, #0]
10002242:	2b00      	cmp	r3, #0
10002244:	d106      	bne.n	10002254 <DAVE_Init+0x10c>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_LED_USB2 */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_LED_USB2); 
10002246:	1dfc      	adds	r4, r7, #7
10002248:	4b21      	ldr	r3, [pc, #132]	; (100022d0 <DAVE_Init+0x188>)
1000224a:	1c18      	adds	r0, r3, #0
1000224c:	f7ff fd9c 	bl	10001d88 <DIGITAL_IO_Init>
10002250:	1c03      	adds	r3, r0, #0
10002252:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
10002254:	1dfb      	adds	r3, r7, #7
10002256:	781b      	ldrb	r3, [r3, #0]
10002258:	2b00      	cmp	r3, #0
1000225a:	d106      	bne.n	1000226a <DAVE_Init+0x122>
  {
	 /**  Initialization of DIGITAL_IO APP instance IO_LED_USB1 */
	 init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&IO_LED_USB1); 
1000225c:	1dfc      	adds	r4, r7, #7
1000225e:	4b1d      	ldr	r3, [pc, #116]	; (100022d4 <DAVE_Init+0x18c>)
10002260:	1c18      	adds	r0, r3, #0
10002262:	f7ff fd91 	bl	10001d88 <DIGITAL_IO_Init>
10002266:	1c03      	adds	r3, r0, #0
10002268:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
1000226a:	1dfb      	adds	r3, r7, #7
1000226c:	781b      	ldrb	r3, [r3, #0]
1000226e:	2b00      	cmp	r3, #0
10002270:	d106      	bne.n	10002280 <DAVE_Init+0x138>
  {
	 /**  Initialization of SYSTIMER APP instance SYSTIMER_0 */
	 init_status = (DAVE_STATUS_t)SYSTIMER_Init(&SYSTIMER_0); 
10002272:	1dfc      	adds	r4, r7, #7
10002274:	4b18      	ldr	r3, [pc, #96]	; (100022d8 <DAVE_Init+0x190>)
10002276:	1c18      	adds	r0, r3, #0
10002278:	f7ff fcd2 	bl	10001c20 <SYSTIMER_Init>
1000227c:	1c03      	adds	r3, r0, #0
1000227e:	7023      	strb	r3, [r4, #0]
   } 
  if (init_status == DAVE_STATUS_SUCCESS)
10002280:	1dfb      	adds	r3, r7, #7
10002282:	781b      	ldrb	r3, [r3, #0]
10002284:	2b00      	cmp	r3, #0
10002286:	d106      	bne.n	10002296 <DAVE_Init+0x14e>
  {
	 /**  Initialization of GLOBAL_CCU4 APP instance GLOBAL_CCU4_0 */
	 init_status = (DAVE_STATUS_t)GLOBAL_CCU4_Init(&GLOBAL_CCU4_0); 
10002288:	1dfc      	adds	r4, r7, #7
1000228a:	4b14      	ldr	r3, [pc, #80]	; (100022dc <DAVE_Init+0x194>)
1000228c:	1c18      	adds	r0, r3, #0
1000228e:	f7ff fd1b 	bl	10001cc8 <GLOBAL_CCU4_Init>
10002292:	1c03      	adds	r3, r0, #0
10002294:	7023      	strb	r3, [r4, #0]
   }  
  return init_status;
10002296:	1dfb      	adds	r3, r7, #7
10002298:	781b      	ldrb	r3, [r3, #0]
} /**  End of function DAVE_Init */
1000229a:	1c18      	adds	r0, r3, #0
1000229c:	46bd      	mov	sp, r7
1000229e:	b003      	add	sp, #12
100022a0:	bd90      	pop	{r4, r7, pc}
100022a2:	46c0      	nop			; (mov r8, r8)
100022a4:	20000630 	.word	0x20000630
100022a8:	20000550 	.word	0x20000550
100022ac:	10006758 	.word	0x10006758
100022b0:	10006768 	.word	0x10006768
100022b4:	10006778 	.word	0x10006778
100022b8:	10006788 	.word	0x10006788
100022bc:	10006798 	.word	0x10006798
100022c0:	100067a8 	.word	0x100067a8
100022c4:	100067b8 	.word	0x100067b8
100022c8:	100067c8 	.word	0x100067c8
100022cc:	100067d8 	.word	0x100067d8
100022d0:	100067e8 	.word	0x100067e8
100022d4:	100067f8 	.word	0x100067f8
100022d8:	2000062c 	.word	0x2000062c
100022dc:	20000520 	.word	0x20000520

100022e0 <XMC_VADC_GLOBAL_GetDetailedResult>:
 *
 * \par<b>Related APIs:</b><BR>
 * XMC_VADC_GLOBAL_GetResult()
 */
__STATIC_INLINE uint32_t XMC_VADC_GLOBAL_GetDetailedResult(XMC_VADC_GLOBAL_t *const global_ptr)
{
100022e0:	b580      	push	{r7, lr}
100022e2:	b082      	sub	sp, #8
100022e4:	af00      	add	r7, sp, #0
100022e6:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("XMC_VADC_GLOBAL_GetDetailedResult:Wrong Module Pointer", (global_ptr == VADC))

  return (global_ptr->GLOBRES);
100022e8:	687a      	ldr	r2, [r7, #4]
100022ea:	23c0      	movs	r3, #192	; 0xc0
100022ec:	009b      	lsls	r3, r3, #2
100022ee:	58d3      	ldr	r3, [r2, r3]
}
100022f0:	1c18      	adds	r0, r3, #0
100022f2:	46bd      	mov	sp, r7
100022f4:	b002      	add	sp, #8
100022f6:	bd80      	pop	{r7, pc}

100022f8 <ADC_MEASUREMENT_GetGlobalDetailedResult>:
    return 0;
  }
 @endcode
 */
__STATIC_INLINE uint32_t ADC_MEASUREMENT_GetGlobalDetailedResult(void)
{
100022f8:	b580      	push	{r7, lr}
100022fa:	b082      	sub	sp, #8
100022fc:	af00      	add	r7, sp, #0
  uint32_t result;
  result = XMC_VADC_GLOBAL_GetDetailedResult(ADC_MEASUREMENT_MODULE_PTR);
100022fe:	4b05      	ldr	r3, [pc, #20]	; (10002314 <ADC_MEASUREMENT_GetGlobalDetailedResult+0x1c>)
10002300:	1c18      	adds	r0, r3, #0
10002302:	f7ff ffed 	bl	100022e0 <XMC_VADC_GLOBAL_GetDetailedResult>
10002306:	1c03      	adds	r3, r0, #0
10002308:	607b      	str	r3, [r7, #4]

  return (result);
1000230a:	687b      	ldr	r3, [r7, #4]
}
1000230c:	1c18      	adds	r0, r3, #0
1000230e:	46bd      	mov	sp, r7
10002310:	b002      	add	sp, #8
10002312:	bd80      	pop	{r7, pc}
10002314:	48030000 	.word	0x48030000

10002318 <XMC_GPIO_SetOutputHigh>:
 * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value of 0.
 *
 */

__STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
{
10002318:	b580      	push	{r7, lr}
1000231a:	b082      	sub	sp, #8
1000231c:	af00      	add	r7, sp, #0
1000231e:	6078      	str	r0, [r7, #4]
10002320:	1c0a      	adds	r2, r1, #0
10002322:	1cfb      	adds	r3, r7, #3
10002324:	701a      	strb	r2, [r3, #0]
  XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));

  port->OMR = (uint32_t)0x1U << pin;
10002326:	1cfb      	adds	r3, r7, #3
10002328:	781b      	ldrb	r3, [r3, #0]
1000232a:	2201      	movs	r2, #1
1000232c:	409a      	lsls	r2, r3
1000232e:	687b      	ldr	r3, [r7, #4]
10002330:	605a      	str	r2, [r3, #4]
}
10002332:	46bd      	mov	sp, r7
10002334:	b002      	add	sp, #8
10002336:	bd80      	pop	{r7, pc}

10002338 <XMC_GPIO_SetOutputLow>:
 * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value of 0.\n
 *
 */

__STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
{
10002338:	b580      	push	{r7, lr}
1000233a:	b082      	sub	sp, #8
1000233c:	af00      	add	r7, sp, #0
1000233e:	6078      	str	r0, [r7, #4]
10002340:	1c0a      	adds	r2, r1, #0
10002342:	1cfb      	adds	r3, r7, #3
10002344:	701a      	strb	r2, [r3, #0]
  XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));

  port->OMR = 0x10000U << pin;
10002346:	1cfb      	adds	r3, r7, #3
10002348:	781b      	ldrb	r3, [r3, #0]
1000234a:	2280      	movs	r2, #128	; 0x80
1000234c:	0252      	lsls	r2, r2, #9
1000234e:	409a      	lsls	r2, r3
10002350:	687b      	ldr	r3, [r7, #4]
10002352:	605a      	str	r2, [r3, #4]
}
10002354:	46bd      	mov	sp, r7
10002356:	b002      	add	sp, #8
10002358:	bd80      	pop	{r7, pc}
1000235a:	46c0      	nop			; (mov r8, r8)

1000235c <XMC_GPIO_GetInput>:
 * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 *
 */

__STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
{
1000235c:	b580      	push	{r7, lr}
1000235e:	b082      	sub	sp, #8
10002360:	af00      	add	r7, sp, #0
10002362:	6078      	str	r0, [r7, #4]
10002364:	1c0a      	adds	r2, r1, #0
10002366:	1cfb      	adds	r3, r7, #3
10002368:	701a      	strb	r2, [r3, #0]
  XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));

  return (((port->IN) >> pin) & 0x1U);
1000236a:	687b      	ldr	r3, [r7, #4]
1000236c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
1000236e:	1cfb      	adds	r3, r7, #3
10002370:	781b      	ldrb	r3, [r3, #0]
10002372:	40da      	lsrs	r2, r3
10002374:	1c13      	adds	r3, r2, #0
10002376:	2201      	movs	r2, #1
10002378:	4013      	ands	r3, r2
}
1000237a:	1c18      	adds	r0, r3, #0
1000237c:	46bd      	mov	sp, r7
1000237e:	b002      	add	sp, #8
10002380:	bd80      	pop	{r7, pc}
10002382:	46c0      	nop			; (mov r8, r8)

10002384 <DIGITAL_IO_SetOutputHigh>:
* }
*  @endcode
*/

__STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
{
10002384:	b580      	push	{r7, lr}
10002386:	b082      	sub	sp, #8
10002388:	af00      	add	r7, sp, #0
1000238a:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
  XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
1000238c:	687b      	ldr	r3, [r7, #4]
1000238e:	681a      	ldr	r2, [r3, #0]
10002390:	687b      	ldr	r3, [r7, #4]
10002392:	7b1b      	ldrb	r3, [r3, #12]
10002394:	1c10      	adds	r0, r2, #0
10002396:	1c19      	adds	r1, r3, #0
10002398:	f7ff ffbe 	bl	10002318 <XMC_GPIO_SetOutputHigh>
}
1000239c:	46bd      	mov	sp, r7
1000239e:	b002      	add	sp, #8
100023a0:	bd80      	pop	{r7, pc}
100023a2:	46c0      	nop			; (mov r8, r8)

100023a4 <DIGITAL_IO_SetOutputLow>:
* }
*  @endcode
*/

__STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
{
100023a4:	b580      	push	{r7, lr}
100023a6:	b082      	sub	sp, #8
100023a8:	af00      	add	r7, sp, #0
100023aa:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
  XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
100023ac:	687b      	ldr	r3, [r7, #4]
100023ae:	681a      	ldr	r2, [r3, #0]
100023b0:	687b      	ldr	r3, [r7, #4]
100023b2:	7b1b      	ldrb	r3, [r3, #12]
100023b4:	1c10      	adds	r0, r2, #0
100023b6:	1c19      	adds	r1, r3, #0
100023b8:	f7ff ffbe 	bl	10002338 <XMC_GPIO_SetOutputLow>
}
100023bc:	46bd      	mov	sp, r7
100023be:	b002      	add	sp, #8
100023c0:	bd80      	pop	{r7, pc}
100023c2:	46c0      	nop			; (mov r8, r8)

100023c4 <DIGITAL_IO_GetInput>:
* }
*  @endcode
*/

__STATIC_INLINE uint32_t DIGITAL_IO_GetInput(const DIGITAL_IO_t *const handler)
{
100023c4:	b580      	push	{r7, lr}
100023c6:	b082      	sub	sp, #8
100023c8:	af00      	add	r7, sp, #0
100023ca:	6078      	str	r0, [r7, #4]
  XMC_ASSERT("DIGITAL_IO_GetInput: handler null pointer", handler != NULL);
  return XMC_GPIO_GetInput(handler->gpio_port, handler->gpio_pin);
100023cc:	687b      	ldr	r3, [r7, #4]
100023ce:	681a      	ldr	r2, [r3, #0]
100023d0:	687b      	ldr	r3, [r7, #4]
100023d2:	7b1b      	ldrb	r3, [r3, #12]
100023d4:	1c10      	adds	r0, r2, #0
100023d6:	1c19      	adds	r1, r3, #0
100023d8:	f7ff ffc0 	bl	1000235c <XMC_GPIO_GetInput>
100023dc:	1c03      	adds	r3, r0, #0
}
100023de:	1c18      	adds	r0, r3, #0
100023e0:	46bd      	mov	sp, r7
100023e2:	b002      	add	sp, #8
100023e4:	bd80      	pop	{r7, pc}
100023e6:	46c0      	nop			; (mov r8, r8)

100023e8 <reset_relay_led>:
}

//****************************************************************************
// reset_relay_led - gets state of relay and sets relay led according
//****************************************************************************
void reset_relay_led(){
100023e8:	b580      	push	{r7, lr}
100023ea:	b082      	sub	sp, #8
100023ec:	af00      	add	r7, sp, #0
	uint32_t state = DIGITAL_IO_GetInput(&IO_RELAY);
100023ee:	4b0d      	ldr	r3, [pc, #52]	; (10002424 <reset_relay_led+0x3c>)
100023f0:	1c18      	adds	r0, r3, #0
100023f2:	f7ff ffe7 	bl	100023c4 <DIGITAL_IO_GetInput>
100023f6:	1c03      	adds	r3, r0, #0
100023f8:	607b      	str	r3, [r7, #4]
	if(state == 0){
100023fa:	687b      	ldr	r3, [r7, #4]
100023fc:	2b00      	cmp	r3, #0
100023fe:	d107      	bne.n	10002410 <reset_relay_led+0x28>
		led_relay_pattern = LED_OFF;
10002400:	4b09      	ldr	r3, [pc, #36]	; (10002428 <reset_relay_led+0x40>)
10002402:	2200      	movs	r2, #0
10002404:	701a      	strb	r2, [r3, #0]
		DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
10002406:	4b09      	ldr	r3, [pc, #36]	; (1000242c <reset_relay_led+0x44>)
10002408:	1c18      	adds	r0, r3, #0
1000240a:	f7ff ffbb 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
1000240e:	e006      	b.n	1000241e <reset_relay_led+0x36>
	}
	else{
		led_relay_pattern = LED_ON;
10002410:	4b05      	ldr	r3, [pc, #20]	; (10002428 <reset_relay_led+0x40>)
10002412:	2201      	movs	r2, #1
10002414:	701a      	strb	r2, [r3, #0]
		DIGITAL_IO_SetOutputLow(&IO_LED_RELAY);
10002416:	4b05      	ldr	r3, [pc, #20]	; (1000242c <reset_relay_led+0x44>)
10002418:	1c18      	adds	r0, r3, #0
1000241a:	f7ff ffc3 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
	}
}
1000241e:	46bd      	mov	sp, r7
10002420:	b002      	add	sp, #8
10002422:	bd80      	pop	{r7, pc}
10002424:	100067d8 	.word	0x100067d8
10002428:	20000638 	.word	0x20000638
1000242c:	10006778 	.word	0x10006778

10002430 <manage_status_led>:

//****************************************************************************
// manage_leds -
//****************************************************************************

void manage_status_led(){
10002430:	b580      	push	{r7, lr}
10002432:	af00      	add	r7, sp, #0
	static uint16_t led_number_state;
	static uint32_t led_number_state_timestamp;
	static uint16_t led_number_state_length;

	// Check target pattern an initiate
	if(led_relay_pattern != led_relay_pattern_last){
10002434:	4b3f      	ldr	r3, [pc, #252]	; (10002534 <manage_status_led+0x104>)
10002436:	781a      	ldrb	r2, [r3, #0]
10002438:	4b3f      	ldr	r3, [pc, #252]	; (10002538 <manage_status_led+0x108>)
1000243a:	781b      	ldrb	r3, [r3, #0]
1000243c:	429a      	cmp	r2, r3
1000243e:	d02b      	beq.n	10002498 <manage_status_led+0x68>
		switch (led_relay_pattern){
10002440:	4b3c      	ldr	r3, [pc, #240]	; (10002534 <manage_status_led+0x104>)
10002442:	781b      	ldrb	r3, [r3, #0]
10002444:	2b01      	cmp	r3, #1
10002446:	d008      	beq.n	1000245a <manage_status_led+0x2a>
10002448:	2b02      	cmp	r3, #2
1000244a:	d00b      	beq.n	10002464 <manage_status_led+0x34>
1000244c:	2b00      	cmp	r3, #0
1000244e:	d11f      	bne.n	10002490 <manage_status_led+0x60>
			case LED_OFF:
				DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
10002450:	4b3a      	ldr	r3, [pc, #232]	; (1000253c <manage_status_led+0x10c>)
10002452:	1c18      	adds	r0, r3, #0
10002454:	f7ff ff96 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
				break;
10002458:	e01a      	b.n	10002490 <manage_status_led+0x60>
			case LED_ON:
				DIGITAL_IO_SetOutputLow(&IO_LED_RELAY);
1000245a:	4b38      	ldr	r3, [pc, #224]	; (1000253c <manage_status_led+0x10c>)
1000245c:	1c18      	adds	r0, r3, #0
1000245e:	f7ff ffa1 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
				break;
10002462:	e015      	b.n	10002490 <manage_status_led+0x60>
			case LED_NUMBER:
				if(led_number >= 1){
10002464:	4b36      	ldr	r3, [pc, #216]	; (10002540 <manage_status_led+0x110>)
10002466:	881b      	ldrh	r3, [r3, #0]
10002468:	2b00      	cmp	r3, #0
1000246a:	d010      	beq.n	1000248e <manage_status_led+0x5e>
					led_number_state_timestamp = SYSTIMER_GetTime();
1000246c:	f7ff fc14 	bl	10001c98 <SYSTIMER_GetTime>
10002470:	1c02      	adds	r2, r0, #0
10002472:	4b34      	ldr	r3, [pc, #208]	; (10002544 <manage_status_led+0x114>)
10002474:	601a      	str	r2, [r3, #0]
					led_number_state_length = LED_PULSE_SHORT;
10002476:	4b34      	ldr	r3, [pc, #208]	; (10002548 <manage_status_led+0x118>)
10002478:	2296      	movs	r2, #150	; 0x96
1000247a:	0052      	lsls	r2, r2, #1
1000247c:	801a      	strh	r2, [r3, #0]
					DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
1000247e:	4b2f      	ldr	r3, [pc, #188]	; (1000253c <manage_status_led+0x10c>)
10002480:	1c18      	adds	r0, r3, #0
10002482:	f7ff ff7f 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
					led_number_state = 0;
10002486:	4b31      	ldr	r3, [pc, #196]	; (1000254c <manage_status_led+0x11c>)
10002488:	2200      	movs	r2, #0
1000248a:	801a      	strh	r2, [r3, #0]
				}
				break;
1000248c:	e7ff      	b.n	1000248e <manage_status_led+0x5e>
1000248e:	46c0      	nop			; (mov r8, r8)
		}
		led_relay_pattern_last = led_relay_pattern;
10002490:	4b28      	ldr	r3, [pc, #160]	; (10002534 <manage_status_led+0x104>)
10002492:	781a      	ldrb	r2, [r3, #0]
10002494:	4b28      	ldr	r3, [pc, #160]	; (10002538 <manage_status_led+0x108>)
10002496:	701a      	strb	r2, [r3, #0]
	}

	// Handle LED_NUMBER pattern
	if(led_relay_pattern == LED_NUMBER){
10002498:	4b26      	ldr	r3, [pc, #152]	; (10002534 <manage_status_led+0x104>)
1000249a:	781b      	ldrb	r3, [r3, #0]
1000249c:	2b02      	cmp	r3, #2
1000249e:	d146      	bne.n	1000252e <manage_status_led+0xfe>
		if((SYSTIMER_GetTime() - led_number_state_timestamp) / 1000 >= led_number_state_length){
100024a0:	f7ff fbfa 	bl	10001c98 <SYSTIMER_GetTime>
100024a4:	1c02      	adds	r2, r0, #0
100024a6:	4b27      	ldr	r3, [pc, #156]	; (10002544 <manage_status_led+0x114>)
100024a8:	681b      	ldr	r3, [r3, #0]
100024aa:	1ad3      	subs	r3, r2, r3
100024ac:	1c18      	adds	r0, r3, #0
100024ae:	23fa      	movs	r3, #250	; 0xfa
100024b0:	0099      	lsls	r1, r3, #2
100024b2:	f000 fba1 	bl	10002bf8 <__aeabi_uidiv>
100024b6:	1c03      	adds	r3, r0, #0
100024b8:	1c1a      	adds	r2, r3, #0
100024ba:	4b23      	ldr	r3, [pc, #140]	; (10002548 <manage_status_led+0x118>)
100024bc:	881b      	ldrh	r3, [r3, #0]
100024be:	429a      	cmp	r2, r3
100024c0:	d335      	bcc.n	1000252e <manage_status_led+0xfe>
			// Next state
			led_number_state++;
100024c2:	4b22      	ldr	r3, [pc, #136]	; (1000254c <manage_status_led+0x11c>)
100024c4:	881b      	ldrh	r3, [r3, #0]
100024c6:	3301      	adds	r3, #1
100024c8:	b29a      	uxth	r2, r3
100024ca:	4b20      	ldr	r3, [pc, #128]	; (1000254c <manage_status_led+0x11c>)
100024cc:	801a      	strh	r2, [r3, #0]

			// Check if LED must be powered on or off for this state
			if(led_number_state % 2)
100024ce:	4b1f      	ldr	r3, [pc, #124]	; (1000254c <manage_status_led+0x11c>)
100024d0:	881b      	ldrh	r3, [r3, #0]
100024d2:	2201      	movs	r2, #1
100024d4:	4013      	ands	r3, r2
100024d6:	b29b      	uxth	r3, r3
100024d8:	2b00      	cmp	r3, #0
100024da:	d004      	beq.n	100024e6 <manage_status_led+0xb6>
				DIGITAL_IO_SetOutputLow(&IO_LED_RELAY);
100024dc:	4b17      	ldr	r3, [pc, #92]	; (1000253c <manage_status_led+0x10c>)
100024de:	1c18      	adds	r0, r3, #0
100024e0:	f7ff ff60 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
100024e4:	e003      	b.n	100024ee <manage_status_led+0xbe>
			else
				DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
100024e6:	4b15      	ldr	r3, [pc, #84]	; (1000253c <manage_status_led+0x10c>)
100024e8:	1c18      	adds	r0, r3, #0
100024ea:	f7ff ff4b 	bl	10002384 <DIGITAL_IO_SetOutputHigh>

			// Detect last low phase and make it longer
			if(led_number_state == (led_number*2))
100024ee:	4b17      	ldr	r3, [pc, #92]	; (1000254c <manage_status_led+0x11c>)
100024f0:	881b      	ldrh	r3, [r3, #0]
100024f2:	1c1a      	adds	r2, r3, #0
100024f4:	4b12      	ldr	r3, [pc, #72]	; (10002540 <manage_status_led+0x110>)
100024f6:	881b      	ldrh	r3, [r3, #0]
100024f8:	005b      	lsls	r3, r3, #1
100024fa:	429a      	cmp	r2, r3
100024fc:	d103      	bne.n	10002506 <manage_status_led+0xd6>
				led_number_state_length = LED_PULSE_LONG;
100024fe:	4b12      	ldr	r3, [pc, #72]	; (10002548 <manage_status_led+0x118>)
10002500:	4a13      	ldr	r2, [pc, #76]	; (10002550 <manage_status_led+0x120>)
10002502:	801a      	strh	r2, [r3, #0]
10002504:	e003      	b.n	1000250e <manage_status_led+0xde>
			else
				led_number_state_length = LED_PULSE_SHORT;
10002506:	4b10      	ldr	r3, [pc, #64]	; (10002548 <manage_status_led+0x118>)
10002508:	2296      	movs	r2, #150	; 0x96
1000250a:	0052      	lsls	r2, r2, #1
1000250c:	801a      	strh	r2, [r3, #0]

			// Store current time
			led_number_state_timestamp = SYSTIMER_GetTime();
1000250e:	f7ff fbc3 	bl	10001c98 <SYSTIMER_GetTime>
10002512:	1c02      	adds	r2, r0, #0
10002514:	4b0b      	ldr	r3, [pc, #44]	; (10002544 <manage_status_led+0x114>)
10002516:	601a      	str	r2, [r3, #0]

			// Check if LED pattern is finished
			if(led_number_state > led_number*2){
10002518:	4b0c      	ldr	r3, [pc, #48]	; (1000254c <manage_status_led+0x11c>)
1000251a:	881b      	ldrh	r3, [r3, #0]
1000251c:	1c1a      	adds	r2, r3, #0
1000251e:	4b08      	ldr	r3, [pc, #32]	; (10002540 <manage_status_led+0x110>)
10002520:	881b      	ldrh	r3, [r3, #0]
10002522:	005b      	lsls	r3, r3, #1
10002524:	429a      	cmp	r2, r3
10002526:	dd02      	ble.n	1000252e <manage_status_led+0xfe>
				//led_relay_pattern = LED_OFF;
				led_number_state = 1;
10002528:	4b08      	ldr	r3, [pc, #32]	; (1000254c <manage_status_led+0x11c>)
1000252a:	2201      	movs	r2, #1
1000252c:	801a      	strh	r2, [r3, #0]
			}
		}
	}
}
1000252e:	46bd      	mov	sp, r7
10002530:	bd80      	pop	{r7, pc}
10002532:	46c0      	nop			; (mov r8, r8)
10002534:	20000638 	.word	0x20000638
10002538:	20000639 	.word	0x20000639
1000253c:	10006778 	.word	0x10006778
10002540:	2000063a 	.word	0x2000063a
10002544:	20000670 	.word	0x20000670
10002548:	20000674 	.word	0x20000674
1000254c:	20000676 	.word	0x20000676
10002550:	0000044c 	.word	0x0000044c

10002554 <main>:

//****************************************************************************
// main - primary loop function
//****************************************************************************
int main(void)
{
10002554:	b590      	push	{r4, r7, lr}
10002556:	b085      	sub	sp, #20
10002558:	af00      	add	r7, sp, #0
	// Initialization of DAVE APPs
	DAVE_STATUS_t status;
	status = DAVE_Init();
1000255a:	230b      	movs	r3, #11
1000255c:	18fc      	adds	r4, r7, r3
1000255e:	f7ff fdf3 	bl	10002148 <DAVE_Init>
10002562:	1c03      	adds	r3, r0, #0
10002564:	7023      	strb	r3, [r4, #0]

	// Error routine
	if (status != DAVE_STATUS_SUCCESS) {
10002566:	230b      	movs	r3, #11
10002568:	18fb      	adds	r3, r7, r3
1000256a:	781b      	ldrb	r3, [r3, #0]
1000256c:	2b00      	cmp	r3, #0
1000256e:	d000      	beq.n	10002572 <main+0x1e>
		while(1U){
		}
10002570:	e7fe      	b.n	10002570 <main+0x1c>
	}

	/// - Set initial state -
	// Enable USB chip and switch to USB1
	DIGITAL_IO_SetOutputLow(&IO_USB_SI);
10002572:	4bcc      	ldr	r3, [pc, #816]	; (100028a4 <main+0x350>)
10002574:	1c18      	adds	r0, r3, #0
10002576:	f7ff ff15 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
	DIGITAL_IO_SetOutputLow(&IO_USB_OE);
1000257a:	4bcb      	ldr	r3, [pc, #812]	; (100028a8 <main+0x354>)
1000257c:	1c18      	adds	r0, r3, #0
1000257e:	f7ff ff11 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
	// Enable USB1
	DIGITAL_IO_SetOutputHigh(&IO_USBPWR_1);
10002582:	4bca      	ldr	r3, [pc, #808]	; (100028ac <main+0x358>)
10002584:	1c18      	adds	r0, r3, #0
10002586:	f7ff fefd 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
	DIGITAL_IO_SetOutputLow(&IO_LED_USB1);
1000258a:	4bc9      	ldr	r3, [pc, #804]	; (100028b0 <main+0x35c>)
1000258c:	1c18      	adds	r0, r3, #0
1000258e:	f7ff ff09 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
	// Disable USB2
	DIGITAL_IO_SetOutputLow(&IO_USBPWR_2);
10002592:	4bc8      	ldr	r3, [pc, #800]	; (100028b4 <main+0x360>)
10002594:	1c18      	adds	r0, r3, #0
10002596:	f7ff ff05 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
	DIGITAL_IO_SetOutputHigh(&IO_LED_USB2);
1000259a:	4bc7      	ldr	r3, [pc, #796]	; (100028b8 <main+0x364>)
1000259c:	1c18      	adds	r0, r3, #0
1000259e:	f7ff fef1 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
	// Disable Relay and set LED off
	DIGITAL_IO_SetOutputLow(&IO_RELAY);
100025a2:	4bc6      	ldr	r3, [pc, #792]	; (100028bc <main+0x368>)
100025a4:	1c18      	adds	r0, r3, #0
100025a6:	f7ff fefd 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
	DIGITAL_IO_SetOutputHigh(&IO_LED_RELAY);
100025aa:	4bc5      	ldr	r3, [pc, #788]	; (100028c0 <main+0x36c>)
100025ac:	1c18      	adds	r0, r3, #0
100025ae:	f7ff fee9 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
	// Init next value conversion
	ADC_MEASUREMENT_StartConversion(&ADC_SENSOR);
100025b2:	4bc4      	ldr	r3, [pc, #784]	; (100028c4 <main+0x370>)
100025b4:	1c18      	adds	r0, r3, #0
100025b6:	f7ff fdb9 	bl	1000212c <ADC_MEASUREMENT_StartConversion>

	int main_loop_count = 0;
100025ba:	2300      	movs	r3, #0
100025bc:	60fb      	str	r3, [r7, #12]

	// Main loop
	while(1U)
	{
		// - Status LED handling -
		manage_status_led();
100025be:	f7ff ff37 	bl	10002430 <manage_status_led>
		main_loop_count++;
100025c2:	68fb      	ldr	r3, [r7, #12]
100025c4:	3301      	adds	r3, #1
100025c6:	60fb      	str	r3, [r7, #12]
		systime_debug = SYSTIMER_GetTime();
100025c8:	f7ff fb66 	bl	10001c98 <SYSTIMER_GetTime>
100025cc:	1c03      	adds	r3, r0, #0
100025ce:	1c1a      	adds	r2, r3, #0
100025d0:	4bbd      	ldr	r3, [pc, #756]	; (100028c8 <main+0x374>)
100025d2:	601a      	str	r2, [r3, #0]

		/// - Button handling -
		// Detect press and save current system time
		if(button_usb_pressed_timestamp == 0 && DIGITAL_IO_GetInput(&IO_SW_USB) == SW_ON)
100025d4:	4bbd      	ldr	r3, [pc, #756]	; (100028cc <main+0x378>)
100025d6:	681b      	ldr	r3, [r3, #0]
100025d8:	2b00      	cmp	r3, #0
100025da:	d10a      	bne.n	100025f2 <main+0x9e>
100025dc:	4bbc      	ldr	r3, [pc, #752]	; (100028d0 <main+0x37c>)
100025de:	1c18      	adds	r0, r3, #0
100025e0:	f7ff fef0 	bl	100023c4 <DIGITAL_IO_GetInput>
100025e4:	1e03      	subs	r3, r0, #0
100025e6:	d104      	bne.n	100025f2 <main+0x9e>
			button_usb_pressed_timestamp = SYSTIMER_GetTime();
100025e8:	f7ff fb56 	bl	10001c98 <SYSTIMER_GetTime>
100025ec:	1c02      	adds	r2, r0, #0
100025ee:	4bb7      	ldr	r3, [pc, #732]	; (100028cc <main+0x378>)
100025f0:	601a      	str	r2, [r3, #0]
		if(button_up_pressed_timestamp == 0 && DIGITAL_IO_GetInput(&IO_SW_UP) == SW_ON)
100025f2:	4bb8      	ldr	r3, [pc, #736]	; (100028d4 <main+0x380>)
100025f4:	681b      	ldr	r3, [r3, #0]
100025f6:	2b00      	cmp	r3, #0
100025f8:	d10a      	bne.n	10002610 <main+0xbc>
100025fa:	4bb7      	ldr	r3, [pc, #732]	; (100028d8 <main+0x384>)
100025fc:	1c18      	adds	r0, r3, #0
100025fe:	f7ff fee1 	bl	100023c4 <DIGITAL_IO_GetInput>
10002602:	1e03      	subs	r3, r0, #0
10002604:	d104      	bne.n	10002610 <main+0xbc>
			button_up_pressed_timestamp = SYSTIMER_GetTime();
10002606:	f7ff fb47 	bl	10001c98 <SYSTIMER_GetTime>
1000260a:	1c02      	adds	r2, r0, #0
1000260c:	4bb1      	ldr	r3, [pc, #708]	; (100028d4 <main+0x380>)
1000260e:	601a      	str	r2, [r3, #0]
		if(button_down_pressed_timestamp == 0 && DIGITAL_IO_GetInput(&IO_SW_DOWN) == SW_ON)
10002610:	4bb2      	ldr	r3, [pc, #712]	; (100028dc <main+0x388>)
10002612:	681b      	ldr	r3, [r3, #0]
10002614:	2b00      	cmp	r3, #0
10002616:	d10a      	bne.n	1000262e <main+0xda>
10002618:	4bb1      	ldr	r3, [pc, #708]	; (100028e0 <main+0x38c>)
1000261a:	1c18      	adds	r0, r3, #0
1000261c:	f7ff fed2 	bl	100023c4 <DIGITAL_IO_GetInput>
10002620:	1e03      	subs	r3, r0, #0
10002622:	d104      	bne.n	1000262e <main+0xda>
			button_down_pressed_timestamp = SYSTIMER_GetTime();
10002624:	f7ff fb38 	bl	10001c98 <SYSTIMER_GetTime>
10002628:	1c02      	adds	r2, r0, #0
1000262a:	4bac      	ldr	r3, [pc, #688]	; (100028dc <main+0x388>)
1000262c:	601a      	str	r2, [r3, #0]
		// If a press in ongoing and release is detected, calculate time difference
		if(button_usb_pressed_timestamp != 0 && DIGITAL_IO_GetInput(&IO_SW_USB) == SW_OFF){
1000262e:	4ba7      	ldr	r3, [pc, #668]	; (100028cc <main+0x378>)
10002630:	681b      	ldr	r3, [r3, #0]
10002632:	2b00      	cmp	r3, #0
10002634:	d028      	beq.n	10002688 <main+0x134>
10002636:	4ba6      	ldr	r3, [pc, #664]	; (100028d0 <main+0x37c>)
10002638:	1c18      	adds	r0, r3, #0
1000263a:	f7ff fec3 	bl	100023c4 <DIGITAL_IO_GetInput>
1000263e:	1e03      	subs	r3, r0, #0
10002640:	2b01      	cmp	r3, #1
10002642:	d121      	bne.n	10002688 <main+0x134>
			button_usb_pressed_duration = (SYSTIMER_GetTime() - button_usb_pressed_timestamp) / 1000; // convert us to ms
10002644:	f7ff fb28 	bl	10001c98 <SYSTIMER_GetTime>
10002648:	1c02      	adds	r2, r0, #0
1000264a:	4ba0      	ldr	r3, [pc, #640]	; (100028cc <main+0x378>)
1000264c:	681b      	ldr	r3, [r3, #0]
1000264e:	1ad3      	subs	r3, r2, r3
10002650:	1c18      	adds	r0, r3, #0
10002652:	23fa      	movs	r3, #250	; 0xfa
10002654:	0099      	lsls	r1, r3, #2
10002656:	f000 facf 	bl	10002bf8 <__aeabi_uidiv>
1000265a:	1c03      	adds	r3, r0, #0
1000265c:	b29a      	uxth	r2, r3
1000265e:	4ba1      	ldr	r3, [pc, #644]	; (100028e4 <main+0x390>)
10002660:	801a      	strh	r2, [r3, #0]
			button_usb_pressed_timestamp = 0;
10002662:	4b9a      	ldr	r3, [pc, #616]	; (100028cc <main+0x378>)
10002664:	2200      	movs	r2, #0
10002666:	601a      	str	r2, [r3, #0]
			// Interpret button press and activate "button pressed" marker
			if(button_usb_pressed_duration >= BTN_LONG_PRESS_DURATION)
10002668:	4b9e      	ldr	r3, [pc, #632]	; (100028e4 <main+0x390>)
1000266a:	881b      	ldrh	r3, [r3, #0]
1000266c:	4a9e      	ldr	r2, [pc, #632]	; (100028e8 <main+0x394>)
1000266e:	4293      	cmp	r3, r2
10002670:	d903      	bls.n	1000267a <main+0x126>
				buttonpress_usb = BTNPRESS_LONG;
10002672:	4b9e      	ldr	r3, [pc, #632]	; (100028ec <main+0x398>)
10002674:	2202      	movs	r2, #2
10002676:	701a      	strb	r2, [r3, #0]
10002678:	e006      	b.n	10002688 <main+0x134>
			else if(button_usb_pressed_duration >= BTN_STD_PRESS_DURATION)
1000267a:	4b9a      	ldr	r3, [pc, #616]	; (100028e4 <main+0x390>)
1000267c:	881b      	ldrh	r3, [r3, #0]
1000267e:	2b31      	cmp	r3, #49	; 0x31
10002680:	d902      	bls.n	10002688 <main+0x134>
				buttonpress_usb = BTNPRESS_STD;
10002682:	4b9a      	ldr	r3, [pc, #616]	; (100028ec <main+0x398>)
10002684:	2201      	movs	r2, #1
10002686:	701a      	strb	r2, [r3, #0]


		}
		if(button_up_pressed_timestamp != 0 && DIGITAL_IO_GetInput(&IO_SW_UP) == SW_OFF){
10002688:	4b92      	ldr	r3, [pc, #584]	; (100028d4 <main+0x380>)
1000268a:	681b      	ldr	r3, [r3, #0]
1000268c:	2b00      	cmp	r3, #0
1000268e:	d032      	beq.n	100026f6 <main+0x1a2>
10002690:	4b91      	ldr	r3, [pc, #580]	; (100028d8 <main+0x384>)
10002692:	1c18      	adds	r0, r3, #0
10002694:	f7ff fe96 	bl	100023c4 <DIGITAL_IO_GetInput>
10002698:	1e03      	subs	r3, r0, #0
1000269a:	2b01      	cmp	r3, #1
1000269c:	d12b      	bne.n	100026f6 <main+0x1a2>
			button_up_pressed_duration = (SYSTIMER_GetTime() - button_up_pressed_timestamp) / 1000; // convert us to ms
1000269e:	f7ff fafb 	bl	10001c98 <SYSTIMER_GetTime>
100026a2:	1c02      	adds	r2, r0, #0
100026a4:	4b8b      	ldr	r3, [pc, #556]	; (100028d4 <main+0x380>)
100026a6:	681b      	ldr	r3, [r3, #0]
100026a8:	1ad3      	subs	r3, r2, r3
100026aa:	1c18      	adds	r0, r3, #0
100026ac:	23fa      	movs	r3, #250	; 0xfa
100026ae:	0099      	lsls	r1, r3, #2
100026b0:	f000 faa2 	bl	10002bf8 <__aeabi_uidiv>
100026b4:	1c03      	adds	r3, r0, #0
100026b6:	b29a      	uxth	r2, r3
100026b8:	4b8d      	ldr	r3, [pc, #564]	; (100028f0 <main+0x39c>)
100026ba:	801a      	strh	r2, [r3, #0]
			button_up_pressed_timestamp = 0;
100026bc:	4b85      	ldr	r3, [pc, #532]	; (100028d4 <main+0x380>)
100026be:	2200      	movs	r2, #0
100026c0:	601a      	str	r2, [r3, #0]
			// Interpret button press and activate "button pressed" marker
			if(button_up_pressed_duration >= BTN_LONG_PRESS_DURATION){
100026c2:	4b8b      	ldr	r3, [pc, #556]	; (100028f0 <main+0x39c>)
100026c4:	881b      	ldrh	r3, [r3, #0]
100026c6:	4a88      	ldr	r2, [pc, #544]	; (100028e8 <main+0x394>)
100026c8:	4293      	cmp	r3, r2
100026ca:	d908      	bls.n	100026de <main+0x18a>
				buttonpress_up = BTNPRESS_LONG;
100026cc:	4b89      	ldr	r3, [pc, #548]	; (100028f4 <main+0x3a0>)
100026ce:	2202      	movs	r2, #2
100026d0:	701a      	strb	r2, [r3, #0]
				button_usb_pressed_long_debug++;
100026d2:	4b89      	ldr	r3, [pc, #548]	; (100028f8 <main+0x3a4>)
100026d4:	681b      	ldr	r3, [r3, #0]
100026d6:	1c5a      	adds	r2, r3, #1
100026d8:	4b87      	ldr	r3, [pc, #540]	; (100028f8 <main+0x3a4>)
100026da:	601a      	str	r2, [r3, #0]
100026dc:	e00b      	b.n	100026f6 <main+0x1a2>
			}
			else if(button_up_pressed_duration >= BTN_STD_PRESS_DURATION){
100026de:	4b84      	ldr	r3, [pc, #528]	; (100028f0 <main+0x39c>)
100026e0:	881b      	ldrh	r3, [r3, #0]
100026e2:	2b31      	cmp	r3, #49	; 0x31
100026e4:	d907      	bls.n	100026f6 <main+0x1a2>
				buttonpress_up = BTNPRESS_STD;
100026e6:	4b83      	ldr	r3, [pc, #524]	; (100028f4 <main+0x3a0>)
100026e8:	2201      	movs	r2, #1
100026ea:	701a      	strb	r2, [r3, #0]
				button_usb_pressed_debug++;
100026ec:	4b83      	ldr	r3, [pc, #524]	; (100028fc <main+0x3a8>)
100026ee:	681b      	ldr	r3, [r3, #0]
100026f0:	1c5a      	adds	r2, r3, #1
100026f2:	4b82      	ldr	r3, [pc, #520]	; (100028fc <main+0x3a8>)
100026f4:	601a      	str	r2, [r3, #0]
			}

		}
		if(button_down_pressed_timestamp != 0 && DIGITAL_IO_GetInput(&IO_SW_DOWN) == SW_OFF){
100026f6:	4b79      	ldr	r3, [pc, #484]	; (100028dc <main+0x388>)
100026f8:	681b      	ldr	r3, [r3, #0]
100026fa:	2b00      	cmp	r3, #0
100026fc:	d028      	beq.n	10002750 <main+0x1fc>
100026fe:	4b78      	ldr	r3, [pc, #480]	; (100028e0 <main+0x38c>)
10002700:	1c18      	adds	r0, r3, #0
10002702:	f7ff fe5f 	bl	100023c4 <DIGITAL_IO_GetInput>
10002706:	1e03      	subs	r3, r0, #0
10002708:	2b01      	cmp	r3, #1
1000270a:	d121      	bne.n	10002750 <main+0x1fc>
			button_down_pressed_duration = (SYSTIMER_GetTime() - button_down_pressed_timestamp) / 1000; // convert us to ms
1000270c:	f7ff fac4 	bl	10001c98 <SYSTIMER_GetTime>
10002710:	1c02      	adds	r2, r0, #0
10002712:	4b72      	ldr	r3, [pc, #456]	; (100028dc <main+0x388>)
10002714:	681b      	ldr	r3, [r3, #0]
10002716:	1ad3      	subs	r3, r2, r3
10002718:	1c18      	adds	r0, r3, #0
1000271a:	23fa      	movs	r3, #250	; 0xfa
1000271c:	0099      	lsls	r1, r3, #2
1000271e:	f000 fa6b 	bl	10002bf8 <__aeabi_uidiv>
10002722:	1c03      	adds	r3, r0, #0
10002724:	b29a      	uxth	r2, r3
10002726:	4b76      	ldr	r3, [pc, #472]	; (10002900 <main+0x3ac>)
10002728:	801a      	strh	r2, [r3, #0]
			button_down_pressed_timestamp = 0;
1000272a:	4b6c      	ldr	r3, [pc, #432]	; (100028dc <main+0x388>)
1000272c:	2200      	movs	r2, #0
1000272e:	601a      	str	r2, [r3, #0]
			// Interpret button press and activate "button pressed" marker. The code that is reacting to it must reset it afterwards!
			if(button_down_pressed_duration >= BTN_LONG_PRESS_DURATION)
10002730:	4b73      	ldr	r3, [pc, #460]	; (10002900 <main+0x3ac>)
10002732:	881b      	ldrh	r3, [r3, #0]
10002734:	4a6c      	ldr	r2, [pc, #432]	; (100028e8 <main+0x394>)
10002736:	4293      	cmp	r3, r2
10002738:	d903      	bls.n	10002742 <main+0x1ee>
				buttonpress_down = BTNPRESS_LONG;
1000273a:	4b72      	ldr	r3, [pc, #456]	; (10002904 <main+0x3b0>)
1000273c:	2202      	movs	r2, #2
1000273e:	701a      	strb	r2, [r3, #0]
10002740:	e006      	b.n	10002750 <main+0x1fc>
			else if(button_down_pressed_duration >= BTN_STD_PRESS_DURATION)
10002742:	4b6f      	ldr	r3, [pc, #444]	; (10002900 <main+0x3ac>)
10002744:	881b      	ldrh	r3, [r3, #0]
10002746:	2b31      	cmp	r3, #49	; 0x31
10002748:	d902      	bls.n	10002750 <main+0x1fc>
				buttonpress_down = BTNPRESS_STD;
1000274a:	4b6e      	ldr	r3, [pc, #440]	; (10002904 <main+0x3b0>)
1000274c:	2201      	movs	r2, #1
1000274e:	701a      	strb	r2, [r3, #0]
		}

		/// - USB Channel handling -
		switch (USB_state){
10002750:	4b6d      	ldr	r3, [pc, #436]	; (10002908 <main+0x3b4>)
10002752:	781b      	ldrb	r3, [r3, #0]
10002754:	2b01      	cmp	r3, #1
10002756:	d023      	beq.n	100027a0 <main+0x24c>
10002758:	2b02      	cmp	r3, #2
1000275a:	d041      	beq.n	100027e0 <main+0x28c>
1000275c:	2b00      	cmp	r3, #0
1000275e:	d140      	bne.n	100027e2 <main+0x28e>
			case USB_1_active:
				// State code - none atm

				// Transition statement
				if(buttonpress_usb == BTNPRESS_STD){
10002760:	4b62      	ldr	r3, [pc, #392]	; (100028ec <main+0x398>)
10002762:	781b      	ldrb	r3, [r3, #0]
10002764:	2b01      	cmp	r3, #1
10002766:	d11a      	bne.n	1000279e <main+0x24a>
					DIGITAL_IO_SetOutputLow(&IO_USBPWR_1);
10002768:	4b50      	ldr	r3, [pc, #320]	; (100028ac <main+0x358>)
1000276a:	1c18      	adds	r0, r3, #0
1000276c:	f7ff fe1a 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
					DIGITAL_IO_SetOutputHigh(&IO_USB_SI);
10002770:	4b4c      	ldr	r3, [pc, #304]	; (100028a4 <main+0x350>)
10002772:	1c18      	adds	r0, r3, #0
10002774:	f7ff fe06 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
					DIGITAL_IO_SetOutputLow(&IO_LED_USB2);
10002778:	4b4f      	ldr	r3, [pc, #316]	; (100028b8 <main+0x364>)
1000277a:	1c18      	adds	r0, r3, #0
1000277c:	f7ff fe12 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
					DIGITAL_IO_SetOutputHigh(&IO_LED_USB1);
10002780:	4b4b      	ldr	r3, [pc, #300]	; (100028b0 <main+0x35c>)
10002782:	1c18      	adds	r0, r3, #0
10002784:	f7ff fdfe 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
					DIGITAL_IO_SetOutputHigh(&IO_USBPWR_2);
10002788:	4b4a      	ldr	r3, [pc, #296]	; (100028b4 <main+0x360>)
1000278a:	1c18      	adds	r0, r3, #0
1000278c:	f7ff fdfa 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
					buttonpress_usb = BTNPRESS_NOT;
10002790:	4b56      	ldr	r3, [pc, #344]	; (100028ec <main+0x398>)
10002792:	2200      	movs	r2, #0
10002794:	701a      	strb	r2, [r3, #0]

					USB_state = USB_2_active;
10002796:	4b5c      	ldr	r3, [pc, #368]	; (10002908 <main+0x3b4>)
10002798:	2201      	movs	r2, #1
1000279a:	701a      	strb	r2, [r3, #0]
				}
				break;
1000279c:	e021      	b.n	100027e2 <main+0x28e>
1000279e:	e020      	b.n	100027e2 <main+0x28e>
			case USB_2_active:
				// State code - none atm

				// Transition statement
				if(buttonpress_usb == BTNPRESS_STD){
100027a0:	4b52      	ldr	r3, [pc, #328]	; (100028ec <main+0x398>)
100027a2:	781b      	ldrb	r3, [r3, #0]
100027a4:	2b01      	cmp	r3, #1
100027a6:	d11a      	bne.n	100027de <main+0x28a>
					DIGITAL_IO_SetOutputLow(&IO_USBPWR_2);
100027a8:	4b42      	ldr	r3, [pc, #264]	; (100028b4 <main+0x360>)
100027aa:	1c18      	adds	r0, r3, #0
100027ac:	f7ff fdfa 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
					DIGITAL_IO_SetOutputLow(&IO_USB_SI);
100027b0:	4b3c      	ldr	r3, [pc, #240]	; (100028a4 <main+0x350>)
100027b2:	1c18      	adds	r0, r3, #0
100027b4:	f7ff fdf6 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
					DIGITAL_IO_SetOutputLow(&IO_LED_USB1);
100027b8:	4b3d      	ldr	r3, [pc, #244]	; (100028b0 <main+0x35c>)
100027ba:	1c18      	adds	r0, r3, #0
100027bc:	f7ff fdf2 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
					DIGITAL_IO_SetOutputHigh(&IO_LED_USB2);
100027c0:	4b3d      	ldr	r3, [pc, #244]	; (100028b8 <main+0x364>)
100027c2:	1c18      	adds	r0, r3, #0
100027c4:	f7ff fdde 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
					DIGITAL_IO_SetOutputHigh(&IO_USBPWR_1);
100027c8:	4b38      	ldr	r3, [pc, #224]	; (100028ac <main+0x358>)
100027ca:	1c18      	adds	r0, r3, #0
100027cc:	f7ff fdda 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
					buttonpress_usb = BTNPRESS_NOT;
100027d0:	4b46      	ldr	r3, [pc, #280]	; (100028ec <main+0x398>)
100027d2:	2200      	movs	r2, #0
100027d4:	701a      	strb	r2, [r3, #0]

					USB_state = USB_1_active;
100027d6:	4b4c      	ldr	r3, [pc, #304]	; (10002908 <main+0x3b4>)
100027d8:	2200      	movs	r2, #0
100027da:	701a      	strb	r2, [r3, #0]
				}
				break;
100027dc:	e001      	b.n	100027e2 <main+0x28e>
100027de:	e000      	b.n	100027e2 <main+0x28e>
			case USB_inactive:
				// Currently not implemented!
				break;
100027e0:	46c0      	nop			; (mov r8, r8)
		/// - Relay handling -
		// Get ADC value
		//ADC_val_current = ADC_MEASUREMENT_GetDetailedResult(&ADC_SENSOR);

		// Check for state change triggers based on current state
		switch (relay_state){
100027e2:	4b4a      	ldr	r3, [pc, #296]	; (1000290c <main+0x3b8>)
100027e4:	781b      	ldrb	r3, [r3, #0]
100027e6:	2b00      	cmp	r3, #0
100027e8:	d04a      	beq.n	10002880 <main+0x32c>
100027ea:	2b01      	cmp	r3, #1
100027ec:	d000      	beq.n	100027f0 <main+0x29c>
100027ee:	e0d0      	b.n	10002992 <main+0x43e>
			case RELAY_LOW:
				// State code
				// Check if upper threshold is exceeded. If it is and timestamp is not already set - save timestamp. If timestamp is already saved and threshold is not exceeded anymore reset timestamp
				if     (ADC_val_upper_thres_exceed_timestamp == 0 && ADC_val_current > ADC_upper_threshold){
100027f0:	4b47      	ldr	r3, [pc, #284]	; (10002910 <main+0x3bc>)
100027f2:	681b      	ldr	r3, [r3, #0]
100027f4:	2b00      	cmp	r3, #0
100027f6:	d10c      	bne.n	10002812 <main+0x2be>
100027f8:	4b46      	ldr	r3, [pc, #280]	; (10002914 <main+0x3c0>)
100027fa:	681b      	ldr	r3, [r3, #0]
100027fc:	1e1a      	subs	r2, r3, #0
100027fe:	4b46      	ldr	r3, [pc, #280]	; (10002918 <main+0x3c4>)
10002800:	681b      	ldr	r3, [r3, #0]
10002802:	429a      	cmp	r2, r3
10002804:	d205      	bcs.n	10002812 <main+0x2be>
					ADC_val_upper_thres_exceed_timestamp = SYSTIMER_GetTime();
10002806:	f7ff fa47 	bl	10001c98 <SYSTIMER_GetTime>
1000280a:	1c02      	adds	r2, r0, #0
1000280c:	4b40      	ldr	r3, [pc, #256]	; (10002910 <main+0x3bc>)
1000280e:	601a      	str	r2, [r3, #0]
10002810:	e00d      	b.n	1000282e <main+0x2da>
				}
				else if(ADC_val_upper_thres_exceed_timestamp != 0 && ADC_val_current < ADC_upper_threshold){
10002812:	4b3f      	ldr	r3, [pc, #252]	; (10002910 <main+0x3bc>)
10002814:	681b      	ldr	r3, [r3, #0]
10002816:	2b00      	cmp	r3, #0
10002818:	d009      	beq.n	1000282e <main+0x2da>
1000281a:	4b3e      	ldr	r3, [pc, #248]	; (10002914 <main+0x3c0>)
1000281c:	681b      	ldr	r3, [r3, #0]
1000281e:	1e1a      	subs	r2, r3, #0
10002820:	4b3d      	ldr	r3, [pc, #244]	; (10002918 <main+0x3c4>)
10002822:	681b      	ldr	r3, [r3, #0]
10002824:	429a      	cmp	r2, r3
10002826:	d902      	bls.n	1000282e <main+0x2da>
					ADC_val_upper_thres_exceed_timestamp = 0;
10002828:	4b39      	ldr	r3, [pc, #228]	; (10002910 <main+0x3bc>)
1000282a:	2200      	movs	r2, #0
1000282c:	601a      	str	r2, [r3, #0]
				}

				// Transition statement
				// Check if threshold are exceeded long enough to trigger a switch
				if(ADC_val_upper_thres_exceed_timestamp != 0){
1000282e:	4b38      	ldr	r3, [pc, #224]	; (10002910 <main+0x3bc>)
10002830:	681b      	ldr	r3, [r3, #0]
10002832:	2b00      	cmp	r3, #0
10002834:	d023      	beq.n	1000287e <main+0x32a>
					uint16_t upperThresholdExceedDuration = (SYSTIMER_GetTime() - ADC_val_upper_thres_exceed_timestamp)/1000;
10002836:	f7ff fa2f 	bl	10001c98 <SYSTIMER_GetTime>
1000283a:	1c02      	adds	r2, r0, #0
1000283c:	4b34      	ldr	r3, [pc, #208]	; (10002910 <main+0x3bc>)
1000283e:	681b      	ldr	r3, [r3, #0]
10002840:	1ad3      	subs	r3, r2, r3
10002842:	1c18      	adds	r0, r3, #0
10002844:	23fa      	movs	r3, #250	; 0xfa
10002846:	0099      	lsls	r1, r3, #2
10002848:	f000 f9d6 	bl	10002bf8 <__aeabi_uidiv>
1000284c:	1c03      	adds	r3, r0, #0
1000284e:	1c1a      	adds	r2, r3, #0
10002850:	2308      	movs	r3, #8
10002852:	18fb      	adds	r3, r7, r3
10002854:	801a      	strh	r2, [r3, #0]
					if(upperThresholdExceedDuration > relay_threshold_latchtime){
10002856:	4b31      	ldr	r3, [pc, #196]	; (1000291c <main+0x3c8>)
10002858:	881b      	ldrh	r3, [r3, #0]
1000285a:	2208      	movs	r2, #8
1000285c:	18ba      	adds	r2, r7, r2
1000285e:	8812      	ldrh	r2, [r2, #0]
10002860:	429a      	cmp	r2, r3
10002862:	d90c      	bls.n	1000287e <main+0x32a>
						relay_state = RELAY_HIGH;
10002864:	4b29      	ldr	r3, [pc, #164]	; (1000290c <main+0x3b8>)
10002866:	2200      	movs	r2, #0
10002868:	701a      	strb	r2, [r3, #0]
						DIGITAL_IO_SetOutputHigh(&IO_RELAY);
1000286a:	4b14      	ldr	r3, [pc, #80]	; (100028bc <main+0x368>)
1000286c:	1c18      	adds	r0, r3, #0
1000286e:	f7ff fd89 	bl	10002384 <DIGITAL_IO_SetOutputHigh>
						reset_relay_led();
10002872:	f7ff fdb9 	bl	100023e8 <reset_relay_led>
						ADC_val_upper_thres_exceed_timestamp = 0;
10002876:	4b26      	ldr	r3, [pc, #152]	; (10002910 <main+0x3bc>)
10002878:	2200      	movs	r2, #0
1000287a:	601a      	str	r2, [r3, #0]
					}
				}
				break;
1000287c:	e089      	b.n	10002992 <main+0x43e>
1000287e:	e088      	b.n	10002992 <main+0x43e>
			case RELAY_HIGH:
				// State code
				// Check if lower threshold is exceeded. If it is and timestamp is not already set - save timestamp. If timestamp is already saved and threshold is not exceeded anymore reset timestamp
				if(ADC_val_lower_thres_exceed_timestamp == 0 && ADC_val_current < ADC_lower_threshold){
10002880:	4b27      	ldr	r3, [pc, #156]	; (10002920 <main+0x3cc>)
10002882:	681b      	ldr	r3, [r3, #0]
10002884:	2b00      	cmp	r3, #0
10002886:	d14f      	bne.n	10002928 <main+0x3d4>
10002888:	4b26      	ldr	r3, [pc, #152]	; (10002924 <main+0x3d0>)
1000288a:	681b      	ldr	r3, [r3, #0]
1000288c:	1e1a      	subs	r2, r3, #0
1000288e:	4b22      	ldr	r3, [pc, #136]	; (10002918 <main+0x3c4>)
10002890:	681b      	ldr	r3, [r3, #0]
10002892:	429a      	cmp	r2, r3
10002894:	d948      	bls.n	10002928 <main+0x3d4>
					ADC_val_lower_thres_exceed_timestamp = SYSTIMER_GetTime();
10002896:	f7ff f9ff 	bl	10001c98 <SYSTIMER_GetTime>
1000289a:	1c02      	adds	r2, r0, #0
1000289c:	4b20      	ldr	r3, [pc, #128]	; (10002920 <main+0x3cc>)
1000289e:	601a      	str	r2, [r3, #0]
100028a0:	e050      	b.n	10002944 <main+0x3f0>
100028a2:	46c0      	nop			; (mov r8, r8)
100028a4:	10006758 	.word	0x10006758
100028a8:	10006768 	.word	0x10006768
100028ac:	100067c8 	.word	0x100067c8
100028b0:	100067f8 	.word	0x100067f8
100028b4:	100067b8 	.word	0x100067b8
100028b8:	100067e8 	.word	0x100067e8
100028bc:	100067d8 	.word	0x100067d8
100028c0:	10006778 	.word	0x10006778
100028c4:	20000550 	.word	0x20000550
100028c8:	20000668 	.word	0x20000668
100028cc:	20000640 	.word	0x20000640
100028d0:	10006788 	.word	0x10006788
100028d4:	20000644 	.word	0x20000644
100028d8:	10006798 	.word	0x10006798
100028dc:	20000648 	.word	0x20000648
100028e0:	100067a8 	.word	0x100067a8
100028e4:	2000064c 	.word	0x2000064c
100028e8:	000003e7 	.word	0x000003e7
100028ec:	2000063c 	.word	0x2000063c
100028f0:	2000064e 	.word	0x2000064e
100028f4:	2000063d 	.word	0x2000063d
100028f8:	20000664 	.word	0x20000664
100028fc:	20000660 	.word	0x20000660
10002900:	20000650 	.word	0x20000650
10002904:	2000063e 	.word	0x2000063e
10002908:	200007a1 	.word	0x200007a1
1000290c:	200007a0 	.word	0x200007a0
10002910:	20000658 	.word	0x20000658
10002914:	20000570 	.word	0x20000570
10002918:	20000654 	.word	0x20000654
1000291c:	2000056c 	.word	0x2000056c
10002920:	2000065c 	.word	0x2000065c
10002924:	20000574 	.word	0x20000574
				}
				else if(ADC_val_lower_thres_exceed_timestamp != 0 && ADC_val_current > ADC_lower_threshold){
10002928:	4b8f      	ldr	r3, [pc, #572]	; (10002b68 <main+0x614>)
1000292a:	681b      	ldr	r3, [r3, #0]
1000292c:	2b00      	cmp	r3, #0
1000292e:	d009      	beq.n	10002944 <main+0x3f0>
10002930:	4b8e      	ldr	r3, [pc, #568]	; (10002b6c <main+0x618>)
10002932:	681b      	ldr	r3, [r3, #0]
10002934:	1e1a      	subs	r2, r3, #0
10002936:	4b8e      	ldr	r3, [pc, #568]	; (10002b70 <main+0x61c>)
10002938:	681b      	ldr	r3, [r3, #0]
1000293a:	429a      	cmp	r2, r3
1000293c:	d202      	bcs.n	10002944 <main+0x3f0>
					ADC_val_lower_thres_exceed_timestamp = 0;
1000293e:	4b8a      	ldr	r3, [pc, #552]	; (10002b68 <main+0x614>)
10002940:	2200      	movs	r2, #0
10002942:	601a      	str	r2, [r3, #0]
				}

				// Transition statement
				// Check if threshold are exceeded long enough to trigger a switch
				if(ADC_val_lower_thres_exceed_timestamp != 0){
10002944:	4b88      	ldr	r3, [pc, #544]	; (10002b68 <main+0x614>)
10002946:	681b      	ldr	r3, [r3, #0]
10002948:	2b00      	cmp	r3, #0
1000294a:	d021      	beq.n	10002990 <main+0x43c>
					uint16_t lowerThresholdExceedDuration = (SYSTIMER_GetTime() - ADC_val_lower_thres_exceed_timestamp)/1000;
1000294c:	f7ff f9a4 	bl	10001c98 <SYSTIMER_GetTime>
10002950:	1c02      	adds	r2, r0, #0
10002952:	4b85      	ldr	r3, [pc, #532]	; (10002b68 <main+0x614>)
10002954:	681b      	ldr	r3, [r3, #0]
10002956:	1ad3      	subs	r3, r2, r3
10002958:	1c18      	adds	r0, r3, #0
1000295a:	23fa      	movs	r3, #250	; 0xfa
1000295c:	0099      	lsls	r1, r3, #2
1000295e:	f000 f94b 	bl	10002bf8 <__aeabi_uidiv>
10002962:	1c03      	adds	r3, r0, #0
10002964:	1c1a      	adds	r2, r3, #0
10002966:	1dbb      	adds	r3, r7, #6
10002968:	801a      	strh	r2, [r3, #0]
					if(lowerThresholdExceedDuration > relay_threshold_latchtime){
1000296a:	4b82      	ldr	r3, [pc, #520]	; (10002b74 <main+0x620>)
1000296c:	881b      	ldrh	r3, [r3, #0]
1000296e:	1dba      	adds	r2, r7, #6
10002970:	8812      	ldrh	r2, [r2, #0]
10002972:	429a      	cmp	r2, r3
10002974:	d90c      	bls.n	10002990 <main+0x43c>
						relay_state = RELAY_LOW;
10002976:	4b80      	ldr	r3, [pc, #512]	; (10002b78 <main+0x624>)
10002978:	2201      	movs	r2, #1
1000297a:	701a      	strb	r2, [r3, #0]
						DIGITAL_IO_SetOutputLow(&IO_RELAY);
1000297c:	4b7f      	ldr	r3, [pc, #508]	; (10002b7c <main+0x628>)
1000297e:	1c18      	adds	r0, r3, #0
10002980:	f7ff fd10 	bl	100023a4 <DIGITAL_IO_SetOutputLow>
						reset_relay_led();
10002984:	f7ff fd30 	bl	100023e8 <reset_relay_led>
						ADC_val_lower_thres_exceed_timestamp = 0;
10002988:	4b77      	ldr	r3, [pc, #476]	; (10002b68 <main+0x614>)
1000298a:	2200      	movs	r2, #0
1000298c:	601a      	str	r2, [r3, #0]
					}
				}
				break;
1000298e:	e7ff      	b.n	10002990 <main+0x43c>
10002990:	46c0      	nop			; (mov r8, r8)
		}
		// Init next value conversion
		ADC_MEASUREMENT_StartConversion(&ADC_SENSOR);
10002992:	4b7b      	ldr	r3, [pc, #492]	; (10002b80 <main+0x62c>)
10002994:	1c18      	adds	r0, r3, #0
10002996:	f7ff fbc9 	bl	1000212c <ADC_MEASUREMENT_StartConversion>

		/// - Relay settings handling - Todo auto exit menus after time?, led signal when reaching max?, upper threshold cant be lower than lower threshold?
		switch(setup_state){
1000299a:	4b7a      	ldr	r3, [pc, #488]	; (10002b84 <main+0x630>)
1000299c:	781b      	ldrb	r3, [r3, #0]
1000299e:	2b01      	cmp	r3, #1
100029a0:	d039      	beq.n	10002a16 <main+0x4c2>
100029a2:	dc02      	bgt.n	100029aa <main+0x456>
100029a4:	2b00      	cmp	r3, #0
100029a6:	d007      	beq.n	100029b8 <main+0x464>
100029a8:	e0d3      	b.n	10002b52 <main+0x5fe>
100029aa:	2b02      	cmp	r3, #2
100029ac:	d100      	bne.n	100029b0 <main+0x45c>
100029ae:	e066      	b.n	10002a7e <main+0x52a>
100029b0:	2b03      	cmp	r3, #3
100029b2:	d100      	bne.n	100029b6 <main+0x462>
100029b4:	e097      	b.n	10002ae6 <main+0x592>
100029b6:	e0cc      	b.n	10002b52 <main+0x5fe>
			case SETUP_IDLE:
				/// Interpret button press and change to according setup sub-menu (state)
				// A long  press of up or down brings system in time setup menu
				// A short press of up         brings system in upper threshold setup menu
				// A short press of down       brings system in lower threshold setup menu
				if(buttonpress_up == BTNPRESS_LONG || buttonpress_down == BTNPRESS_LONG){
100029b8:	4b73      	ldr	r3, [pc, #460]	; (10002b88 <main+0x634>)
100029ba:	781b      	ldrb	r3, [r3, #0]
100029bc:	2b02      	cmp	r3, #2
100029be:	d003      	beq.n	100029c8 <main+0x474>
100029c0:	4b72      	ldr	r3, [pc, #456]	; (10002b8c <main+0x638>)
100029c2:	781b      	ldrb	r3, [r3, #0]
100029c4:	2b02      	cmp	r3, #2
100029c6:	d109      	bne.n	100029dc <main+0x488>
					setup_state = SETUP_TIME_TH;
100029c8:	4b6e      	ldr	r3, [pc, #440]	; (10002b84 <main+0x630>)
100029ca:	2203      	movs	r2, #3
100029cc:	701a      	strb	r2, [r3, #0]
					led_relay_pattern = LED_NUMBER;
100029ce:	4b70      	ldr	r3, [pc, #448]	; (10002b90 <main+0x63c>)
100029d0:	2202      	movs	r2, #2
100029d2:	701a      	strb	r2, [r3, #0]
					led_number = 1;
100029d4:	4b6f      	ldr	r3, [pc, #444]	; (10002b94 <main+0x640>)
100029d6:	2201      	movs	r2, #1
100029d8:	801a      	strh	r2, [r3, #0]
100029da:	e01b      	b.n	10002a14 <main+0x4c0>
				}
				else if(buttonpress_up == BTNPRESS_STD){
100029dc:	4b6a      	ldr	r3, [pc, #424]	; (10002b88 <main+0x634>)
100029de:	781b      	ldrb	r3, [r3, #0]
100029e0:	2b01      	cmp	r3, #1
100029e2:	d109      	bne.n	100029f8 <main+0x4a4>
					setup_state = SETUP_UPPER_TH;
100029e4:	4b67      	ldr	r3, [pc, #412]	; (10002b84 <main+0x630>)
100029e6:	2201      	movs	r2, #1
100029e8:	701a      	strb	r2, [r3, #0]
					led_relay_pattern = LED_NUMBER;
100029ea:	4b69      	ldr	r3, [pc, #420]	; (10002b90 <main+0x63c>)
100029ec:	2202      	movs	r2, #2
100029ee:	701a      	strb	r2, [r3, #0]
					led_number = 2;
100029f0:	4b68      	ldr	r3, [pc, #416]	; (10002b94 <main+0x640>)
100029f2:	2202      	movs	r2, #2
100029f4:	801a      	strh	r2, [r3, #0]
100029f6:	e00d      	b.n	10002a14 <main+0x4c0>
				}
				else if(buttonpress_down == BTNPRESS_STD){
100029f8:	4b64      	ldr	r3, [pc, #400]	; (10002b8c <main+0x638>)
100029fa:	781b      	ldrb	r3, [r3, #0]
100029fc:	2b01      	cmp	r3, #1
100029fe:	d109      	bne.n	10002a14 <main+0x4c0>
					setup_state = SETUP_LOWER_TH;
10002a00:	4b60      	ldr	r3, [pc, #384]	; (10002b84 <main+0x630>)
10002a02:	2202      	movs	r2, #2
10002a04:	701a      	strb	r2, [r3, #0]
					led_relay_pattern = LED_NUMBER;
10002a06:	4b62      	ldr	r3, [pc, #392]	; (10002b90 <main+0x63c>)
10002a08:	2202      	movs	r2, #2
10002a0a:	701a      	strb	r2, [r3, #0]
					led_number = 3;
10002a0c:	4b61      	ldr	r3, [pc, #388]	; (10002b94 <main+0x640>)
10002a0e:	2203      	movs	r2, #3
10002a10:	801a      	strh	r2, [r3, #0]
				}
				break;
10002a12:	e09e      	b.n	10002b52 <main+0x5fe>
10002a14:	e09d      	b.n	10002b52 <main+0x5fe>

				/// Interpret button press:
				// A long  press of up or down brings system back to setup idle
				// A short press of up         increases the upper threshold value
				// A short press of down       decreases the upper threshold value
				if(buttonpress_up == BTNPRESS_LONG || buttonpress_down == BTNPRESS_LONG){
10002a16:	4b5c      	ldr	r3, [pc, #368]	; (10002b88 <main+0x634>)
10002a18:	781b      	ldrb	r3, [r3, #0]
10002a1a:	2b02      	cmp	r3, #2
10002a1c:	d003      	beq.n	10002a26 <main+0x4d2>
10002a1e:	4b5b      	ldr	r3, [pc, #364]	; (10002b8c <main+0x638>)
10002a20:	781b      	ldrb	r3, [r3, #0]
10002a22:	2b02      	cmp	r3, #2
10002a24:	d105      	bne.n	10002a32 <main+0x4de>
					setup_state = SETUP_IDLE;
10002a26:	4b57      	ldr	r3, [pc, #348]	; (10002b84 <main+0x630>)
10002a28:	2200      	movs	r2, #0
10002a2a:	701a      	strb	r2, [r3, #0]
					reset_relay_led();
10002a2c:	f7ff fcdc 	bl	100023e8 <reset_relay_led>
10002a30:	e024      	b.n	10002a7c <main+0x528>
				}
				else if(buttonpress_up == BTNPRESS_STD){
10002a32:	4b55      	ldr	r3, [pc, #340]	; (10002b88 <main+0x634>)
10002a34:	781b      	ldrb	r3, [r3, #0]
10002a36:	2b01      	cmp	r3, #1
10002a38:	d10e      	bne.n	10002a58 <main+0x504>
					ADC_upper_threshold += ADC_THRESHOLD_INCREMENT;
10002a3a:	4b57      	ldr	r3, [pc, #348]	; (10002b98 <main+0x644>)
10002a3c:	681b      	ldr	r3, [r3, #0]
10002a3e:	337c      	adds	r3, #124	; 0x7c
10002a40:	1c1a      	adds	r2, r3, #0
10002a42:	4b55      	ldr	r3, [pc, #340]	; (10002b98 <main+0x644>)
10002a44:	601a      	str	r2, [r3, #0]
					if(ADC_upper_threshold > ADC_THRESHOLD_MAX)
10002a46:	4b54      	ldr	r3, [pc, #336]	; (10002b98 <main+0x644>)
10002a48:	681b      	ldr	r3, [r3, #0]
10002a4a:	4a54      	ldr	r2, [pc, #336]	; (10002b9c <main+0x648>)
10002a4c:	4293      	cmp	r3, r2
10002a4e:	dd15      	ble.n	10002a7c <main+0x528>
						ADC_upper_threshold = ADC_THRESHOLD_MAX;
10002a50:	4b51      	ldr	r3, [pc, #324]	; (10002b98 <main+0x644>)
10002a52:	4a52      	ldr	r2, [pc, #328]	; (10002b9c <main+0x648>)
10002a54:	601a      	str	r2, [r3, #0]
					if(ADC_upper_threshold <= 0)
						ADC_upper_threshold = 0;
					//if(ADC_upper_threshold <= ADC_lower_threshold)
						//ADC_upper_threshold = ADC_lower_threshold;
				}
				break;
10002a56:	e07c      	b.n	10002b52 <main+0x5fe>
				else if(buttonpress_up == BTNPRESS_STD){
					ADC_upper_threshold += ADC_THRESHOLD_INCREMENT;
					if(ADC_upper_threshold > ADC_THRESHOLD_MAX)
						ADC_upper_threshold = ADC_THRESHOLD_MAX;
				}
				else if(buttonpress_down == BTNPRESS_STD){
10002a58:	4b4c      	ldr	r3, [pc, #304]	; (10002b8c <main+0x638>)
10002a5a:	781b      	ldrb	r3, [r3, #0]
10002a5c:	2b01      	cmp	r3, #1
10002a5e:	d10d      	bne.n	10002a7c <main+0x528>
					ADC_upper_threshold -= ADC_THRESHOLD_INCREMENT;
10002a60:	4b4d      	ldr	r3, [pc, #308]	; (10002b98 <main+0x644>)
10002a62:	681b      	ldr	r3, [r3, #0]
10002a64:	3b7c      	subs	r3, #124	; 0x7c
10002a66:	1c1a      	adds	r2, r3, #0
10002a68:	4b4b      	ldr	r3, [pc, #300]	; (10002b98 <main+0x644>)
10002a6a:	601a      	str	r2, [r3, #0]
					if(ADC_upper_threshold <= 0)
10002a6c:	4b4a      	ldr	r3, [pc, #296]	; (10002b98 <main+0x644>)
10002a6e:	681b      	ldr	r3, [r3, #0]
10002a70:	2b00      	cmp	r3, #0
10002a72:	dc03      	bgt.n	10002a7c <main+0x528>
						ADC_upper_threshold = 0;
10002a74:	4b48      	ldr	r3, [pc, #288]	; (10002b98 <main+0x644>)
10002a76:	2200      	movs	r2, #0
10002a78:	601a      	str	r2, [r3, #0]
					//if(ADC_upper_threshold <= ADC_lower_threshold)
						//ADC_upper_threshold = ADC_lower_threshold;
				}
				break;
10002a7a:	e06a      	b.n	10002b52 <main+0x5fe>
10002a7c:	e069      	b.n	10002b52 <main+0x5fe>

				/// Interpret button press:
				// A long  press of up or down brings system back to setup idle
				// A short press of up         increases the lower threshold value
				// A short press of down       decreases the lower threshold value
				if(buttonpress_up == BTNPRESS_LONG || buttonpress_down == BTNPRESS_LONG){
10002a7e:	4b42      	ldr	r3, [pc, #264]	; (10002b88 <main+0x634>)
10002a80:	781b      	ldrb	r3, [r3, #0]
10002a82:	2b02      	cmp	r3, #2
10002a84:	d003      	beq.n	10002a8e <main+0x53a>
10002a86:	4b41      	ldr	r3, [pc, #260]	; (10002b8c <main+0x638>)
10002a88:	781b      	ldrb	r3, [r3, #0]
10002a8a:	2b02      	cmp	r3, #2
10002a8c:	d105      	bne.n	10002a9a <main+0x546>
					setup_state = SETUP_IDLE;
10002a8e:	4b3d      	ldr	r3, [pc, #244]	; (10002b84 <main+0x630>)
10002a90:	2200      	movs	r2, #0
10002a92:	701a      	strb	r2, [r3, #0]
					reset_relay_led();
10002a94:	f7ff fca8 	bl	100023e8 <reset_relay_led>
10002a98:	e024      	b.n	10002ae4 <main+0x590>
				}
				else if(buttonpress_up == BTNPRESS_STD){
10002a9a:	4b3b      	ldr	r3, [pc, #236]	; (10002b88 <main+0x634>)
10002a9c:	781b      	ldrb	r3, [r3, #0]
10002a9e:	2b01      	cmp	r3, #1
10002aa0:	d10e      	bne.n	10002ac0 <main+0x56c>
					ADC_lower_threshold += ADC_THRESHOLD_INCREMENT;
10002aa2:	4b32      	ldr	r3, [pc, #200]	; (10002b6c <main+0x618>)
10002aa4:	681b      	ldr	r3, [r3, #0]
10002aa6:	337c      	adds	r3, #124	; 0x7c
10002aa8:	1c1a      	adds	r2, r3, #0
10002aaa:	4b30      	ldr	r3, [pc, #192]	; (10002b6c <main+0x618>)
10002aac:	601a      	str	r2, [r3, #0]
					if(ADC_lower_threshold > ADC_THRESHOLD_MAX)
10002aae:	4b2f      	ldr	r3, [pc, #188]	; (10002b6c <main+0x618>)
10002ab0:	681b      	ldr	r3, [r3, #0]
10002ab2:	4a3a      	ldr	r2, [pc, #232]	; (10002b9c <main+0x648>)
10002ab4:	4293      	cmp	r3, r2
10002ab6:	dd15      	ble.n	10002ae4 <main+0x590>
						ADC_lower_threshold = ADC_THRESHOLD_MAX;
10002ab8:	4b2c      	ldr	r3, [pc, #176]	; (10002b6c <main+0x618>)
10002aba:	4a38      	ldr	r2, [pc, #224]	; (10002b9c <main+0x648>)
10002abc:	601a      	str	r2, [r3, #0]
				else if(buttonpress_down == BTNPRESS_STD){
					ADC_lower_threshold -= ADC_THRESHOLD_INCREMENT;
					if(ADC_lower_threshold <= 0)
						ADC_lower_threshold = 0;
				}
				break;
10002abe:	e048      	b.n	10002b52 <main+0x5fe>
				else if(buttonpress_up == BTNPRESS_STD){
					ADC_lower_threshold += ADC_THRESHOLD_INCREMENT;
					if(ADC_lower_threshold > ADC_THRESHOLD_MAX)
						ADC_lower_threshold = ADC_THRESHOLD_MAX;
				}
				else if(buttonpress_down == BTNPRESS_STD){
10002ac0:	4b32      	ldr	r3, [pc, #200]	; (10002b8c <main+0x638>)
10002ac2:	781b      	ldrb	r3, [r3, #0]
10002ac4:	2b01      	cmp	r3, #1
10002ac6:	d10d      	bne.n	10002ae4 <main+0x590>
					ADC_lower_threshold -= ADC_THRESHOLD_INCREMENT;
10002ac8:	4b28      	ldr	r3, [pc, #160]	; (10002b6c <main+0x618>)
10002aca:	681b      	ldr	r3, [r3, #0]
10002acc:	3b7c      	subs	r3, #124	; 0x7c
10002ace:	1c1a      	adds	r2, r3, #0
10002ad0:	4b26      	ldr	r3, [pc, #152]	; (10002b6c <main+0x618>)
10002ad2:	601a      	str	r2, [r3, #0]
					if(ADC_lower_threshold <= 0)
10002ad4:	4b25      	ldr	r3, [pc, #148]	; (10002b6c <main+0x618>)
10002ad6:	681b      	ldr	r3, [r3, #0]
10002ad8:	2b00      	cmp	r3, #0
10002ada:	dc03      	bgt.n	10002ae4 <main+0x590>
						ADC_lower_threshold = 0;
10002adc:	4b23      	ldr	r3, [pc, #140]	; (10002b6c <main+0x618>)
10002ade:	2200      	movs	r2, #0
10002ae0:	601a      	str	r2, [r3, #0]
				}
				break;
10002ae2:	e036      	b.n	10002b52 <main+0x5fe>
10002ae4:	e035      	b.n	10002b52 <main+0x5fe>
			case SETUP_TIME_TH:
				/// Interpret button press:
				// A long  press of up or down brings system back to setup idle
				// A short press of up         increases the threshold exceed time
				// A short press of down       decreases the threshold exceed time
				if(buttonpress_up == BTNPRESS_LONG || buttonpress_down == BTNPRESS_LONG){
10002ae6:	4b28      	ldr	r3, [pc, #160]	; (10002b88 <main+0x634>)
10002ae8:	781b      	ldrb	r3, [r3, #0]
10002aea:	2b02      	cmp	r3, #2
10002aec:	d003      	beq.n	10002af6 <main+0x5a2>
10002aee:	4b27      	ldr	r3, [pc, #156]	; (10002b8c <main+0x638>)
10002af0:	781b      	ldrb	r3, [r3, #0]
10002af2:	2b02      	cmp	r3, #2
10002af4:	d105      	bne.n	10002b02 <main+0x5ae>
					setup_state = SETUP_IDLE;
10002af6:	4b23      	ldr	r3, [pc, #140]	; (10002b84 <main+0x630>)
10002af8:	2200      	movs	r2, #0
10002afa:	701a      	strb	r2, [r3, #0]
					reset_relay_led();
10002afc:	f7ff fc74 	bl	100023e8 <reset_relay_led>
10002b00:	e026      	b.n	10002b50 <main+0x5fc>
				}
				else if(buttonpress_up == BTNPRESS_STD){
10002b02:	4b21      	ldr	r3, [pc, #132]	; (10002b88 <main+0x634>)
10002b04:	781b      	ldrb	r3, [r3, #0]
10002b06:	2b01      	cmp	r3, #1
10002b08:	d10f      	bne.n	10002b2a <main+0x5d6>
					relay_threshold_latchtime += RELAY_LATCHTIME_INCREMENT;
10002b0a:	4b1a      	ldr	r3, [pc, #104]	; (10002b74 <main+0x620>)
10002b0c:	881b      	ldrh	r3, [r3, #0]
10002b0e:	33f5      	adds	r3, #245	; 0xf5
10002b10:	33ff      	adds	r3, #255	; 0xff
10002b12:	b29a      	uxth	r2, r3
10002b14:	4b17      	ldr	r3, [pc, #92]	; (10002b74 <main+0x620>)
10002b16:	801a      	strh	r2, [r3, #0]
					if(relay_threshold_latchtime > RELAY_LATCHTIME_MAX)
10002b18:	4b16      	ldr	r3, [pc, #88]	; (10002b74 <main+0x620>)
10002b1a:	881b      	ldrh	r3, [r3, #0]
10002b1c:	4a20      	ldr	r2, [pc, #128]	; (10002ba0 <main+0x64c>)
10002b1e:	4293      	cmp	r3, r2
10002b20:	d916      	bls.n	10002b50 <main+0x5fc>
						relay_threshold_latchtime = RELAY_LATCHTIME_MAX;
10002b22:	4b14      	ldr	r3, [pc, #80]	; (10002b74 <main+0x620>)
10002b24:	4a1f      	ldr	r2, [pc, #124]	; (10002ba4 <main+0x650>)
10002b26:	801a      	strh	r2, [r3, #0]
				else if(buttonpress_down == BTNPRESS_STD){
					relay_threshold_latchtime -= RELAY_LATCHTIME_INCREMENT;
					if(relay_threshold_latchtime <= 0)
						relay_threshold_latchtime = 0;
				}
				break;
10002b28:	e012      	b.n	10002b50 <main+0x5fc>
				else if(buttonpress_up == BTNPRESS_STD){
					relay_threshold_latchtime += RELAY_LATCHTIME_INCREMENT;
					if(relay_threshold_latchtime > RELAY_LATCHTIME_MAX)
						relay_threshold_latchtime = RELAY_LATCHTIME_MAX;
				}
				else if(buttonpress_down == BTNPRESS_STD){
10002b2a:	4b18      	ldr	r3, [pc, #96]	; (10002b8c <main+0x638>)
10002b2c:	781b      	ldrb	r3, [r3, #0]
10002b2e:	2b01      	cmp	r3, #1
10002b30:	d10e      	bne.n	10002b50 <main+0x5fc>
					relay_threshold_latchtime -= RELAY_LATCHTIME_INCREMENT;
10002b32:	4b10      	ldr	r3, [pc, #64]	; (10002b74 <main+0x620>)
10002b34:	881b      	ldrh	r3, [r3, #0]
10002b36:	3bf5      	subs	r3, #245	; 0xf5
10002b38:	3bff      	subs	r3, #255	; 0xff
10002b3a:	b29a      	uxth	r2, r3
10002b3c:	4b0d      	ldr	r3, [pc, #52]	; (10002b74 <main+0x620>)
10002b3e:	801a      	strh	r2, [r3, #0]
					if(relay_threshold_latchtime <= 0)
10002b40:	4b0c      	ldr	r3, [pc, #48]	; (10002b74 <main+0x620>)
10002b42:	881b      	ldrh	r3, [r3, #0]
10002b44:	2b00      	cmp	r3, #0
10002b46:	d103      	bne.n	10002b50 <main+0x5fc>
						relay_threshold_latchtime = 0;
10002b48:	4b0a      	ldr	r3, [pc, #40]	; (10002b74 <main+0x620>)
10002b4a:	2200      	movs	r2, #0
10002b4c:	801a      	strh	r2, [r3, #0]
				}
				break;
10002b4e:	e7ff      	b.n	10002b50 <main+0x5fc>
10002b50:	46c0      	nop			; (mov r8, r8)
		}

		// Reset all button presses
		buttonpress_usb = BTNPRESS_NOT;
10002b52:	4b15      	ldr	r3, [pc, #84]	; (10002ba8 <main+0x654>)
10002b54:	2200      	movs	r2, #0
10002b56:	701a      	strb	r2, [r3, #0]
		buttonpress_up = BTNPRESS_NOT;
10002b58:	4b0b      	ldr	r3, [pc, #44]	; (10002b88 <main+0x634>)
10002b5a:	2200      	movs	r2, #0
10002b5c:	701a      	strb	r2, [r3, #0]
		buttonpress_down = BTNPRESS_NOT;
10002b5e:	4b0b      	ldr	r3, [pc, #44]	; (10002b8c <main+0x638>)
10002b60:	2200      	movs	r2, #0
10002b62:	701a      	strb	r2, [r3, #0]
	}
10002b64:	e52b      	b.n	100025be <main+0x6a>
10002b66:	46c0      	nop			; (mov r8, r8)
10002b68:	2000065c 	.word	0x2000065c
10002b6c:	20000574 	.word	0x20000574
10002b70:	20000654 	.word	0x20000654
10002b74:	2000056c 	.word	0x2000056c
10002b78:	200007a0 	.word	0x200007a0
10002b7c:	100067d8 	.word	0x100067d8
10002b80:	20000550 	.word	0x20000550
10002b84:	200007a2 	.word	0x200007a2
10002b88:	2000063d 	.word	0x2000063d
10002b8c:	2000063e 	.word	0x2000063e
10002b90:	20000638 	.word	0x20000638
10002b94:	2000063a 	.word	0x2000063a
10002b98:	20000570 	.word	0x20000570
10002b9c:	00000fff 	.word	0x00000fff
10002ba0:	0000ea60 	.word	0x0000ea60
10002ba4:	ffffea60 	.word	0xffffea60
10002ba8:	2000063c 	.word	0x2000063c

10002bac <VADC0_C0_0_IRQHandler>:
//}

int meas_invalid_count = 0;

void Adc_Measurement_Handler()
{
10002bac:	b580      	push	{r7, lr}
10002bae:	b082      	sub	sp, #8
10002bb0:	af00      	add	r7, sp, #0
	//uint8_t channel_num;
	//uint8_t group_num;
	uint32_t adc_register;

	#if(UC_SERIES == XMC11)
	adc_register = ADC_MEASUREMENT_GetGlobalDetailedResult();
10002bb2:	f7ff fba1 	bl	100022f8 <ADC_MEASUREMENT_GetGlobalDetailedResult>
10002bb6:	1c03      	adds	r3, r0, #0
10002bb8:	607b      	str	r3, [r7, #4]
	#endif

	if((bool)(adc_register >> VADC_GLOBRES_VF_Pos))
10002bba:	687b      	ldr	r3, [r7, #4]
10002bbc:	2b00      	cmp	r3, #0
10002bbe:	da0d      	bge.n	10002bdc <VADC0_C0_0_IRQHandler+0x30>
	{
		//channel_num = (adc_register & VADC_GLOBRES_CHNR_Msk) >> VADC_GLOBRES_CHNR_Pos;
		//group_num = ADC_MEASUREMENT_Channel_A.group_index;
		ADC_val_current = (adc_register & VADC_GLOBRES_RESULT_Msk) >> ((uint32_t)(ADC_SENSOR.iclass_config_handle->conversion_mode_standard) * (uint32_t)2);
10002bc0:	687b      	ldr	r3, [r7, #4]
10002bc2:	041b      	lsls	r3, r3, #16
10002bc4:	0c1a      	lsrs	r2, r3, #16
10002bc6:	4b09      	ldr	r3, [pc, #36]	; (10002bec <VADC0_C0_0_IRQHandler+0x40>)
10002bc8:	689b      	ldr	r3, [r3, #8]
10002bca:	785b      	ldrb	r3, [r3, #1]
10002bcc:	075b      	lsls	r3, r3, #29
10002bce:	0f5b      	lsrs	r3, r3, #29
10002bd0:	b2db      	uxtb	r3, r3
10002bd2:	005b      	lsls	r3, r3, #1
10002bd4:	40da      	lsrs	r2, r3
10002bd6:	4b06      	ldr	r3, [pc, #24]	; (10002bf0 <VADC0_C0_0_IRQHandler+0x44>)
10002bd8:	601a      	str	r2, [r3, #0]
10002bda:	e004      	b.n	10002be6 <VADC0_C0_0_IRQHandler+0x3a>
	}
	else{
		meas_invalid_count++;
10002bdc:	4b05      	ldr	r3, [pc, #20]	; (10002bf4 <VADC0_C0_0_IRQHandler+0x48>)
10002bde:	681b      	ldr	r3, [r3, #0]
10002be0:	1c5a      	adds	r2, r3, #1
10002be2:	4b04      	ldr	r3, [pc, #16]	; (10002bf4 <VADC0_C0_0_IRQHandler+0x48>)
10002be4:	601a      	str	r2, [r3, #0]
	}

}
10002be6:	46bd      	mov	sp, r7
10002be8:	b002      	add	sp, #8
10002bea:	bd80      	pop	{r7, pc}
10002bec:	20000550 	.word	0x20000550
10002bf0:	20000654 	.word	0x20000654
10002bf4:	2000066c 	.word	0x2000066c

10002bf8 <__aeabi_uidiv>:
10002bf8:	2200      	movs	r2, #0
10002bfa:	0843      	lsrs	r3, r0, #1
10002bfc:	428b      	cmp	r3, r1
10002bfe:	d374      	bcc.n	10002cea <__aeabi_uidiv+0xf2>
10002c00:	0903      	lsrs	r3, r0, #4
10002c02:	428b      	cmp	r3, r1
10002c04:	d35f      	bcc.n	10002cc6 <__aeabi_uidiv+0xce>
10002c06:	0a03      	lsrs	r3, r0, #8
10002c08:	428b      	cmp	r3, r1
10002c0a:	d344      	bcc.n	10002c96 <__aeabi_uidiv+0x9e>
10002c0c:	0b03      	lsrs	r3, r0, #12
10002c0e:	428b      	cmp	r3, r1
10002c10:	d328      	bcc.n	10002c64 <__aeabi_uidiv+0x6c>
10002c12:	0c03      	lsrs	r3, r0, #16
10002c14:	428b      	cmp	r3, r1
10002c16:	d30d      	bcc.n	10002c34 <__aeabi_uidiv+0x3c>
10002c18:	22ff      	movs	r2, #255	; 0xff
10002c1a:	0209      	lsls	r1, r1, #8
10002c1c:	ba12      	rev	r2, r2
10002c1e:	0c03      	lsrs	r3, r0, #16
10002c20:	428b      	cmp	r3, r1
10002c22:	d302      	bcc.n	10002c2a <__aeabi_uidiv+0x32>
10002c24:	1212      	asrs	r2, r2, #8
10002c26:	0209      	lsls	r1, r1, #8
10002c28:	d065      	beq.n	10002cf6 <__aeabi_uidiv+0xfe>
10002c2a:	0b03      	lsrs	r3, r0, #12
10002c2c:	428b      	cmp	r3, r1
10002c2e:	d319      	bcc.n	10002c64 <__aeabi_uidiv+0x6c>
10002c30:	e000      	b.n	10002c34 <__aeabi_uidiv+0x3c>
10002c32:	0a09      	lsrs	r1, r1, #8
10002c34:	0bc3      	lsrs	r3, r0, #15
10002c36:	428b      	cmp	r3, r1
10002c38:	d301      	bcc.n	10002c3e <__aeabi_uidiv+0x46>
10002c3a:	03cb      	lsls	r3, r1, #15
10002c3c:	1ac0      	subs	r0, r0, r3
10002c3e:	4152      	adcs	r2, r2
10002c40:	0b83      	lsrs	r3, r0, #14
10002c42:	428b      	cmp	r3, r1
10002c44:	d301      	bcc.n	10002c4a <__aeabi_uidiv+0x52>
10002c46:	038b      	lsls	r3, r1, #14
10002c48:	1ac0      	subs	r0, r0, r3
10002c4a:	4152      	adcs	r2, r2
10002c4c:	0b43      	lsrs	r3, r0, #13
10002c4e:	428b      	cmp	r3, r1
10002c50:	d301      	bcc.n	10002c56 <__aeabi_uidiv+0x5e>
10002c52:	034b      	lsls	r3, r1, #13
10002c54:	1ac0      	subs	r0, r0, r3
10002c56:	4152      	adcs	r2, r2
10002c58:	0b03      	lsrs	r3, r0, #12
10002c5a:	428b      	cmp	r3, r1
10002c5c:	d301      	bcc.n	10002c62 <__aeabi_uidiv+0x6a>
10002c5e:	030b      	lsls	r3, r1, #12
10002c60:	1ac0      	subs	r0, r0, r3
10002c62:	4152      	adcs	r2, r2
10002c64:	0ac3      	lsrs	r3, r0, #11
10002c66:	428b      	cmp	r3, r1
10002c68:	d301      	bcc.n	10002c6e <__aeabi_uidiv+0x76>
10002c6a:	02cb      	lsls	r3, r1, #11
10002c6c:	1ac0      	subs	r0, r0, r3
10002c6e:	4152      	adcs	r2, r2
10002c70:	0a83      	lsrs	r3, r0, #10
10002c72:	428b      	cmp	r3, r1
10002c74:	d301      	bcc.n	10002c7a <__aeabi_uidiv+0x82>
10002c76:	028b      	lsls	r3, r1, #10
10002c78:	1ac0      	subs	r0, r0, r3
10002c7a:	4152      	adcs	r2, r2
10002c7c:	0a43      	lsrs	r3, r0, #9
10002c7e:	428b      	cmp	r3, r1
10002c80:	d301      	bcc.n	10002c86 <__aeabi_uidiv+0x8e>
10002c82:	024b      	lsls	r3, r1, #9
10002c84:	1ac0      	subs	r0, r0, r3
10002c86:	4152      	adcs	r2, r2
10002c88:	0a03      	lsrs	r3, r0, #8
10002c8a:	428b      	cmp	r3, r1
10002c8c:	d301      	bcc.n	10002c92 <__aeabi_uidiv+0x9a>
10002c8e:	020b      	lsls	r3, r1, #8
10002c90:	1ac0      	subs	r0, r0, r3
10002c92:	4152      	adcs	r2, r2
10002c94:	d2cd      	bcs.n	10002c32 <__aeabi_uidiv+0x3a>
10002c96:	09c3      	lsrs	r3, r0, #7
10002c98:	428b      	cmp	r3, r1
10002c9a:	d301      	bcc.n	10002ca0 <__aeabi_uidiv+0xa8>
10002c9c:	01cb      	lsls	r3, r1, #7
10002c9e:	1ac0      	subs	r0, r0, r3
10002ca0:	4152      	adcs	r2, r2
10002ca2:	0983      	lsrs	r3, r0, #6
10002ca4:	428b      	cmp	r3, r1
10002ca6:	d301      	bcc.n	10002cac <__aeabi_uidiv+0xb4>
10002ca8:	018b      	lsls	r3, r1, #6
10002caa:	1ac0      	subs	r0, r0, r3
10002cac:	4152      	adcs	r2, r2
10002cae:	0943      	lsrs	r3, r0, #5
10002cb0:	428b      	cmp	r3, r1
10002cb2:	d301      	bcc.n	10002cb8 <__aeabi_uidiv+0xc0>
10002cb4:	014b      	lsls	r3, r1, #5
10002cb6:	1ac0      	subs	r0, r0, r3
10002cb8:	4152      	adcs	r2, r2
10002cba:	0903      	lsrs	r3, r0, #4
10002cbc:	428b      	cmp	r3, r1
10002cbe:	d301      	bcc.n	10002cc4 <__aeabi_uidiv+0xcc>
10002cc0:	010b      	lsls	r3, r1, #4
10002cc2:	1ac0      	subs	r0, r0, r3
10002cc4:	4152      	adcs	r2, r2
10002cc6:	08c3      	lsrs	r3, r0, #3
10002cc8:	428b      	cmp	r3, r1
10002cca:	d301      	bcc.n	10002cd0 <__aeabi_uidiv+0xd8>
10002ccc:	00cb      	lsls	r3, r1, #3
10002cce:	1ac0      	subs	r0, r0, r3
10002cd0:	4152      	adcs	r2, r2
10002cd2:	0883      	lsrs	r3, r0, #2
10002cd4:	428b      	cmp	r3, r1
10002cd6:	d301      	bcc.n	10002cdc <__aeabi_uidiv+0xe4>
10002cd8:	008b      	lsls	r3, r1, #2
10002cda:	1ac0      	subs	r0, r0, r3
10002cdc:	4152      	adcs	r2, r2
10002cde:	0843      	lsrs	r3, r0, #1
10002ce0:	428b      	cmp	r3, r1
10002ce2:	d301      	bcc.n	10002ce8 <__aeabi_uidiv+0xf0>
10002ce4:	004b      	lsls	r3, r1, #1
10002ce6:	1ac0      	subs	r0, r0, r3
10002ce8:	4152      	adcs	r2, r2
10002cea:	1a41      	subs	r1, r0, r1
10002cec:	d200      	bcs.n	10002cf0 <__aeabi_uidiv+0xf8>
10002cee:	4601      	mov	r1, r0
10002cf0:	4152      	adcs	r2, r2
10002cf2:	4610      	mov	r0, r2
10002cf4:	4770      	bx	lr
10002cf6:	e7ff      	b.n	10002cf8 <__aeabi_uidiv+0x100>
10002cf8:	b501      	push	{r0, lr}
10002cfa:	2000      	movs	r0, #0
10002cfc:	f000 f8fc 	bl	10002ef8 <__aeabi_idiv0>
10002d00:	bd02      	pop	{r1, pc}
10002d02:	46c0      	nop			; (mov r8, r8)

10002d04 <__aeabi_uidivmod>:
10002d04:	2900      	cmp	r1, #0
10002d06:	d0f7      	beq.n	10002cf8 <__aeabi_uidiv+0x100>
10002d08:	b503      	push	{r0, r1, lr}
10002d0a:	f7ff ff75 	bl	10002bf8 <__aeabi_uidiv>
10002d0e:	bc0e      	pop	{r1, r2, r3}
10002d10:	4342      	muls	r2, r0
10002d12:	1a89      	subs	r1, r1, r2
10002d14:	4718      	bx	r3
10002d16:	46c0      	nop			; (mov r8, r8)

10002d18 <__aeabi_idiv>:
10002d18:	4603      	mov	r3, r0
10002d1a:	430b      	orrs	r3, r1
10002d1c:	d47f      	bmi.n	10002e1e <__aeabi_idiv+0x106>
10002d1e:	2200      	movs	r2, #0
10002d20:	0843      	lsrs	r3, r0, #1
10002d22:	428b      	cmp	r3, r1
10002d24:	d374      	bcc.n	10002e10 <__aeabi_idiv+0xf8>
10002d26:	0903      	lsrs	r3, r0, #4
10002d28:	428b      	cmp	r3, r1
10002d2a:	d35f      	bcc.n	10002dec <__aeabi_idiv+0xd4>
10002d2c:	0a03      	lsrs	r3, r0, #8
10002d2e:	428b      	cmp	r3, r1
10002d30:	d344      	bcc.n	10002dbc <__aeabi_idiv+0xa4>
10002d32:	0b03      	lsrs	r3, r0, #12
10002d34:	428b      	cmp	r3, r1
10002d36:	d328      	bcc.n	10002d8a <__aeabi_idiv+0x72>
10002d38:	0c03      	lsrs	r3, r0, #16
10002d3a:	428b      	cmp	r3, r1
10002d3c:	d30d      	bcc.n	10002d5a <__aeabi_idiv+0x42>
10002d3e:	22ff      	movs	r2, #255	; 0xff
10002d40:	0209      	lsls	r1, r1, #8
10002d42:	ba12      	rev	r2, r2
10002d44:	0c03      	lsrs	r3, r0, #16
10002d46:	428b      	cmp	r3, r1
10002d48:	d302      	bcc.n	10002d50 <__aeabi_idiv+0x38>
10002d4a:	1212      	asrs	r2, r2, #8
10002d4c:	0209      	lsls	r1, r1, #8
10002d4e:	d065      	beq.n	10002e1c <__aeabi_idiv+0x104>
10002d50:	0b03      	lsrs	r3, r0, #12
10002d52:	428b      	cmp	r3, r1
10002d54:	d319      	bcc.n	10002d8a <__aeabi_idiv+0x72>
10002d56:	e000      	b.n	10002d5a <__aeabi_idiv+0x42>
10002d58:	0a09      	lsrs	r1, r1, #8
10002d5a:	0bc3      	lsrs	r3, r0, #15
10002d5c:	428b      	cmp	r3, r1
10002d5e:	d301      	bcc.n	10002d64 <__aeabi_idiv+0x4c>
10002d60:	03cb      	lsls	r3, r1, #15
10002d62:	1ac0      	subs	r0, r0, r3
10002d64:	4152      	adcs	r2, r2
10002d66:	0b83      	lsrs	r3, r0, #14
10002d68:	428b      	cmp	r3, r1
10002d6a:	d301      	bcc.n	10002d70 <__aeabi_idiv+0x58>
10002d6c:	038b      	lsls	r3, r1, #14
10002d6e:	1ac0      	subs	r0, r0, r3
10002d70:	4152      	adcs	r2, r2
10002d72:	0b43      	lsrs	r3, r0, #13
10002d74:	428b      	cmp	r3, r1
10002d76:	d301      	bcc.n	10002d7c <__aeabi_idiv+0x64>
10002d78:	034b      	lsls	r3, r1, #13
10002d7a:	1ac0      	subs	r0, r0, r3
10002d7c:	4152      	adcs	r2, r2
10002d7e:	0b03      	lsrs	r3, r0, #12
10002d80:	428b      	cmp	r3, r1
10002d82:	d301      	bcc.n	10002d88 <__aeabi_idiv+0x70>
10002d84:	030b      	lsls	r3, r1, #12
10002d86:	1ac0      	subs	r0, r0, r3
10002d88:	4152      	adcs	r2, r2
10002d8a:	0ac3      	lsrs	r3, r0, #11
10002d8c:	428b      	cmp	r3, r1
10002d8e:	d301      	bcc.n	10002d94 <__aeabi_idiv+0x7c>
10002d90:	02cb      	lsls	r3, r1, #11
10002d92:	1ac0      	subs	r0, r0, r3
10002d94:	4152      	adcs	r2, r2
10002d96:	0a83      	lsrs	r3, r0, #10
10002d98:	428b      	cmp	r3, r1
10002d9a:	d301      	bcc.n	10002da0 <__aeabi_idiv+0x88>
10002d9c:	028b      	lsls	r3, r1, #10
10002d9e:	1ac0      	subs	r0, r0, r3
10002da0:	4152      	adcs	r2, r2
10002da2:	0a43      	lsrs	r3, r0, #9
10002da4:	428b      	cmp	r3, r1
10002da6:	d301      	bcc.n	10002dac <__aeabi_idiv+0x94>
10002da8:	024b      	lsls	r3, r1, #9
10002daa:	1ac0      	subs	r0, r0, r3
10002dac:	4152      	adcs	r2, r2
10002dae:	0a03      	lsrs	r3, r0, #8
10002db0:	428b      	cmp	r3, r1
10002db2:	d301      	bcc.n	10002db8 <__aeabi_idiv+0xa0>
10002db4:	020b      	lsls	r3, r1, #8
10002db6:	1ac0      	subs	r0, r0, r3
10002db8:	4152      	adcs	r2, r2
10002dba:	d2cd      	bcs.n	10002d58 <__aeabi_idiv+0x40>
10002dbc:	09c3      	lsrs	r3, r0, #7
10002dbe:	428b      	cmp	r3, r1
10002dc0:	d301      	bcc.n	10002dc6 <__aeabi_idiv+0xae>
10002dc2:	01cb      	lsls	r3, r1, #7
10002dc4:	1ac0      	subs	r0, r0, r3
10002dc6:	4152      	adcs	r2, r2
10002dc8:	0983      	lsrs	r3, r0, #6
10002dca:	428b      	cmp	r3, r1
10002dcc:	d301      	bcc.n	10002dd2 <__aeabi_idiv+0xba>
10002dce:	018b      	lsls	r3, r1, #6
10002dd0:	1ac0      	subs	r0, r0, r3
10002dd2:	4152      	adcs	r2, r2
10002dd4:	0943      	lsrs	r3, r0, #5
10002dd6:	428b      	cmp	r3, r1
10002dd8:	d301      	bcc.n	10002dde <__aeabi_idiv+0xc6>
10002dda:	014b      	lsls	r3, r1, #5
10002ddc:	1ac0      	subs	r0, r0, r3
10002dde:	4152      	adcs	r2, r2
10002de0:	0903      	lsrs	r3, r0, #4
10002de2:	428b      	cmp	r3, r1
10002de4:	d301      	bcc.n	10002dea <__aeabi_idiv+0xd2>
10002de6:	010b      	lsls	r3, r1, #4
10002de8:	1ac0      	subs	r0, r0, r3
10002dea:	4152      	adcs	r2, r2
10002dec:	08c3      	lsrs	r3, r0, #3
10002dee:	428b      	cmp	r3, r1
10002df0:	d301      	bcc.n	10002df6 <__aeabi_idiv+0xde>
10002df2:	00cb      	lsls	r3, r1, #3
10002df4:	1ac0      	subs	r0, r0, r3
10002df6:	4152      	adcs	r2, r2
10002df8:	0883      	lsrs	r3, r0, #2
10002dfa:	428b      	cmp	r3, r1
10002dfc:	d301      	bcc.n	10002e02 <__aeabi_idiv+0xea>
10002dfe:	008b      	lsls	r3, r1, #2
10002e00:	1ac0      	subs	r0, r0, r3
10002e02:	4152      	adcs	r2, r2
10002e04:	0843      	lsrs	r3, r0, #1
10002e06:	428b      	cmp	r3, r1
10002e08:	d301      	bcc.n	10002e0e <__aeabi_idiv+0xf6>
10002e0a:	004b      	lsls	r3, r1, #1
10002e0c:	1ac0      	subs	r0, r0, r3
10002e0e:	4152      	adcs	r2, r2
10002e10:	1a41      	subs	r1, r0, r1
10002e12:	d200      	bcs.n	10002e16 <__aeabi_idiv+0xfe>
10002e14:	4601      	mov	r1, r0
10002e16:	4152      	adcs	r2, r2
10002e18:	4610      	mov	r0, r2
10002e1a:	4770      	bx	lr
10002e1c:	e05d      	b.n	10002eda <__aeabi_idiv+0x1c2>
10002e1e:	0fca      	lsrs	r2, r1, #31
10002e20:	d000      	beq.n	10002e24 <__aeabi_idiv+0x10c>
10002e22:	4249      	negs	r1, r1
10002e24:	1003      	asrs	r3, r0, #32
10002e26:	d300      	bcc.n	10002e2a <__aeabi_idiv+0x112>
10002e28:	4240      	negs	r0, r0
10002e2a:	4053      	eors	r3, r2
10002e2c:	2200      	movs	r2, #0
10002e2e:	469c      	mov	ip, r3
10002e30:	0903      	lsrs	r3, r0, #4
10002e32:	428b      	cmp	r3, r1
10002e34:	d32d      	bcc.n	10002e92 <__aeabi_idiv+0x17a>
10002e36:	0a03      	lsrs	r3, r0, #8
10002e38:	428b      	cmp	r3, r1
10002e3a:	d312      	bcc.n	10002e62 <__aeabi_idiv+0x14a>
10002e3c:	22fc      	movs	r2, #252	; 0xfc
10002e3e:	0189      	lsls	r1, r1, #6
10002e40:	ba12      	rev	r2, r2
10002e42:	0a03      	lsrs	r3, r0, #8
10002e44:	428b      	cmp	r3, r1
10002e46:	d30c      	bcc.n	10002e62 <__aeabi_idiv+0x14a>
10002e48:	0189      	lsls	r1, r1, #6
10002e4a:	1192      	asrs	r2, r2, #6
10002e4c:	428b      	cmp	r3, r1
10002e4e:	d308      	bcc.n	10002e62 <__aeabi_idiv+0x14a>
10002e50:	0189      	lsls	r1, r1, #6
10002e52:	1192      	asrs	r2, r2, #6
10002e54:	428b      	cmp	r3, r1
10002e56:	d304      	bcc.n	10002e62 <__aeabi_idiv+0x14a>
10002e58:	0189      	lsls	r1, r1, #6
10002e5a:	d03a      	beq.n	10002ed2 <__aeabi_idiv+0x1ba>
10002e5c:	1192      	asrs	r2, r2, #6
10002e5e:	e000      	b.n	10002e62 <__aeabi_idiv+0x14a>
10002e60:	0989      	lsrs	r1, r1, #6
10002e62:	09c3      	lsrs	r3, r0, #7
10002e64:	428b      	cmp	r3, r1
10002e66:	d301      	bcc.n	10002e6c <__aeabi_idiv+0x154>
10002e68:	01cb      	lsls	r3, r1, #7
10002e6a:	1ac0      	subs	r0, r0, r3
10002e6c:	4152      	adcs	r2, r2
10002e6e:	0983      	lsrs	r3, r0, #6
10002e70:	428b      	cmp	r3, r1
10002e72:	d301      	bcc.n	10002e78 <__aeabi_idiv+0x160>
10002e74:	018b      	lsls	r3, r1, #6
10002e76:	1ac0      	subs	r0, r0, r3
10002e78:	4152      	adcs	r2, r2
10002e7a:	0943      	lsrs	r3, r0, #5
10002e7c:	428b      	cmp	r3, r1
10002e7e:	d301      	bcc.n	10002e84 <__aeabi_idiv+0x16c>
10002e80:	014b      	lsls	r3, r1, #5
10002e82:	1ac0      	subs	r0, r0, r3
10002e84:	4152      	adcs	r2, r2
10002e86:	0903      	lsrs	r3, r0, #4
10002e88:	428b      	cmp	r3, r1
10002e8a:	d301      	bcc.n	10002e90 <__aeabi_idiv+0x178>
10002e8c:	010b      	lsls	r3, r1, #4
10002e8e:	1ac0      	subs	r0, r0, r3
10002e90:	4152      	adcs	r2, r2
10002e92:	08c3      	lsrs	r3, r0, #3
10002e94:	428b      	cmp	r3, r1
10002e96:	d301      	bcc.n	10002e9c <__aeabi_idiv+0x184>
10002e98:	00cb      	lsls	r3, r1, #3
10002e9a:	1ac0      	subs	r0, r0, r3
10002e9c:	4152      	adcs	r2, r2
10002e9e:	0883      	lsrs	r3, r0, #2
10002ea0:	428b      	cmp	r3, r1
10002ea2:	d301      	bcc.n	10002ea8 <__aeabi_idiv+0x190>
10002ea4:	008b      	lsls	r3, r1, #2
10002ea6:	1ac0      	subs	r0, r0, r3
10002ea8:	4152      	adcs	r2, r2
10002eaa:	d2d9      	bcs.n	10002e60 <__aeabi_idiv+0x148>
10002eac:	0843      	lsrs	r3, r0, #1
10002eae:	428b      	cmp	r3, r1
10002eb0:	d301      	bcc.n	10002eb6 <__aeabi_idiv+0x19e>
10002eb2:	004b      	lsls	r3, r1, #1
10002eb4:	1ac0      	subs	r0, r0, r3
10002eb6:	4152      	adcs	r2, r2
10002eb8:	1a41      	subs	r1, r0, r1
10002eba:	d200      	bcs.n	10002ebe <__aeabi_idiv+0x1a6>
10002ebc:	4601      	mov	r1, r0
10002ebe:	4663      	mov	r3, ip
10002ec0:	4152      	adcs	r2, r2
10002ec2:	105b      	asrs	r3, r3, #1
10002ec4:	4610      	mov	r0, r2
10002ec6:	d301      	bcc.n	10002ecc <__aeabi_idiv+0x1b4>
10002ec8:	4240      	negs	r0, r0
10002eca:	2b00      	cmp	r3, #0
10002ecc:	d500      	bpl.n	10002ed0 <__aeabi_idiv+0x1b8>
10002ece:	4249      	negs	r1, r1
10002ed0:	4770      	bx	lr
10002ed2:	4663      	mov	r3, ip
10002ed4:	105b      	asrs	r3, r3, #1
10002ed6:	d300      	bcc.n	10002eda <__aeabi_idiv+0x1c2>
10002ed8:	4240      	negs	r0, r0
10002eda:	b501      	push	{r0, lr}
10002edc:	2000      	movs	r0, #0
10002ede:	f000 f80b 	bl	10002ef8 <__aeabi_idiv0>
10002ee2:	bd02      	pop	{r1, pc}

10002ee4 <__aeabi_idivmod>:
10002ee4:	2900      	cmp	r1, #0
10002ee6:	d0f8      	beq.n	10002eda <__aeabi_idiv+0x1c2>
10002ee8:	b503      	push	{r0, r1, lr}
10002eea:	f7ff ff15 	bl	10002d18 <__aeabi_idiv>
10002eee:	bc0e      	pop	{r1, r2, r3}
10002ef0:	4342      	muls	r2, r0
10002ef2:	1a89      	subs	r1, r1, r2
10002ef4:	4718      	bx	r3
10002ef6:	46c0      	nop			; (mov r8, r8)

10002ef8 <__aeabi_idiv0>:
10002ef8:	4770      	bx	lr
10002efa:	46c0      	nop			; (mov r8, r8)

10002efc <__clzsi2>:
10002efc:	211c      	movs	r1, #28
10002efe:	2301      	movs	r3, #1
10002f00:	041b      	lsls	r3, r3, #16
10002f02:	4298      	cmp	r0, r3
10002f04:	d301      	bcc.n	10002f0a <__clzsi2+0xe>
10002f06:	0c00      	lsrs	r0, r0, #16
10002f08:	3910      	subs	r1, #16
10002f0a:	0a1b      	lsrs	r3, r3, #8
10002f0c:	4298      	cmp	r0, r3
10002f0e:	d301      	bcc.n	10002f14 <__clzsi2+0x18>
10002f10:	0a00      	lsrs	r0, r0, #8
10002f12:	3908      	subs	r1, #8
10002f14:	091b      	lsrs	r3, r3, #4
10002f16:	4298      	cmp	r0, r3
10002f18:	d301      	bcc.n	10002f1e <__clzsi2+0x22>
10002f1a:	0900      	lsrs	r0, r0, #4
10002f1c:	3904      	subs	r1, #4
10002f1e:	a202      	add	r2, pc, #8	; (adr r2, 10002f28 <__clzsi2+0x2c>)
10002f20:	5c10      	ldrb	r0, [r2, r0]
10002f22:	1840      	adds	r0, r0, r1
10002f24:	4770      	bx	lr
10002f26:	46c0      	nop			; (mov r8, r8)
10002f28:	02020304 	.word	0x02020304
10002f2c:	01010101 	.word	0x01010101
	...

10002f38 <__errno>:
10002f38:	4b01      	ldr	r3, [pc, #4]	; (10002f40 <__errno+0x8>)
10002f3a:	6818      	ldr	r0, [r3, #0]
10002f3c:	4770      	bx	lr
10002f3e:	46c0      	nop			; (mov r8, r8)
10002f40:	200005d8 	.word	0x200005d8

10002f44 <__libc_init_array>:
10002f44:	4b0e      	ldr	r3, [pc, #56]	; (10002f80 <__libc_init_array+0x3c>)
10002f46:	b570      	push	{r4, r5, r6, lr}
10002f48:	2500      	movs	r5, #0
10002f4a:	1c1e      	adds	r6, r3, #0
10002f4c:	4c0d      	ldr	r4, [pc, #52]	; (10002f84 <__libc_init_array+0x40>)
10002f4e:	1ae4      	subs	r4, r4, r3
10002f50:	10a4      	asrs	r4, r4, #2
10002f52:	42a5      	cmp	r5, r4
10002f54:	d004      	beq.n	10002f60 <__libc_init_array+0x1c>
10002f56:	00ab      	lsls	r3, r5, #2
10002f58:	58f3      	ldr	r3, [r6, r3]
10002f5a:	4798      	blx	r3
10002f5c:	3501      	adds	r5, #1
10002f5e:	e7f8      	b.n	10002f52 <__libc_init_array+0xe>
10002f60:	f7fe fc00 	bl	10001764 <_init>
10002f64:	4b08      	ldr	r3, [pc, #32]	; (10002f88 <__libc_init_array+0x44>)
10002f66:	2500      	movs	r5, #0
10002f68:	1c1e      	adds	r6, r3, #0
10002f6a:	4c08      	ldr	r4, [pc, #32]	; (10002f8c <__libc_init_array+0x48>)
10002f6c:	1ae4      	subs	r4, r4, r3
10002f6e:	10a4      	asrs	r4, r4, #2
10002f70:	42a5      	cmp	r5, r4
10002f72:	d004      	beq.n	10002f7e <__libc_init_array+0x3a>
10002f74:	00ab      	lsls	r3, r5, #2
10002f76:	58f3      	ldr	r3, [r6, r3]
10002f78:	4798      	blx	r3
10002f7a:	3501      	adds	r5, #1
10002f7c:	e7f8      	b.n	10002f70 <__libc_init_array+0x2c>
10002f7e:	bd70      	pop	{r4, r5, r6, pc}
10002f80:	20000614 	.word	0x20000614
10002f84:	20000614 	.word	0x20000614
10002f88:	20000614 	.word	0x20000614
10002f8c:	20000614 	.word	0x20000614

10002f90 <__cvt>:
10002f90:	b5f0      	push	{r4, r5, r6, r7, lr}
10002f92:	b08b      	sub	sp, #44	; 0x2c
10002f94:	1c14      	adds	r4, r2, #0
10002f96:	1e1d      	subs	r5, r3, #0
10002f98:	9912      	ldr	r1, [sp, #72]	; 0x48
10002f9a:	da06      	bge.n	10002faa <__cvt+0x1a>
10002f9c:	2480      	movs	r4, #128	; 0x80
10002f9e:	0624      	lsls	r4, r4, #24
10002fa0:	192b      	adds	r3, r5, r4
10002fa2:	1c1d      	adds	r5, r3, #0
10002fa4:	1c14      	adds	r4, r2, #0
10002fa6:	232d      	movs	r3, #45	; 0x2d
10002fa8:	e000      	b.n	10002fac <__cvt+0x1c>
10002faa:	2300      	movs	r3, #0
10002fac:	700b      	strb	r3, [r1, #0]
10002fae:	2320      	movs	r3, #32
10002fb0:	9e14      	ldr	r6, [sp, #80]	; 0x50
10002fb2:	2203      	movs	r2, #3
10002fb4:	439e      	bics	r6, r3
10002fb6:	2e46      	cmp	r6, #70	; 0x46
10002fb8:	d007      	beq.n	10002fca <__cvt+0x3a>
10002fba:	1c33      	adds	r3, r6, #0
10002fbc:	3b45      	subs	r3, #69	; 0x45
10002fbe:	4259      	negs	r1, r3
10002fc0:	414b      	adcs	r3, r1
10002fc2:	9910      	ldr	r1, [sp, #64]	; 0x40
10002fc4:	3a01      	subs	r2, #1
10002fc6:	18cb      	adds	r3, r1, r3
10002fc8:	9310      	str	r3, [sp, #64]	; 0x40
10002fca:	9b10      	ldr	r3, [sp, #64]	; 0x40
10002fcc:	9200      	str	r2, [sp, #0]
10002fce:	9301      	str	r3, [sp, #4]
10002fd0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
10002fd2:	1c22      	adds	r2, r4, #0
10002fd4:	9302      	str	r3, [sp, #8]
10002fd6:	ab08      	add	r3, sp, #32
10002fd8:	9303      	str	r3, [sp, #12]
10002fda:	ab09      	add	r3, sp, #36	; 0x24
10002fdc:	9304      	str	r3, [sp, #16]
10002fde:	1c2b      	adds	r3, r5, #0
10002fe0:	f000 fbc8 	bl	10003774 <_dtoa_r>
10002fe4:	1c07      	adds	r7, r0, #0
10002fe6:	2e47      	cmp	r6, #71	; 0x47
10002fe8:	d102      	bne.n	10002ff0 <__cvt+0x60>
10002fea:	9b11      	ldr	r3, [sp, #68]	; 0x44
10002fec:	07db      	lsls	r3, r3, #31
10002fee:	d52c      	bpl.n	1000304a <__cvt+0xba>
10002ff0:	9b10      	ldr	r3, [sp, #64]	; 0x40
10002ff2:	18fb      	adds	r3, r7, r3
10002ff4:	9307      	str	r3, [sp, #28]
10002ff6:	2e46      	cmp	r6, #70	; 0x46
10002ff8:	d114      	bne.n	10003024 <__cvt+0x94>
10002ffa:	783b      	ldrb	r3, [r7, #0]
10002ffc:	2b30      	cmp	r3, #48	; 0x30
10002ffe:	d10c      	bne.n	1000301a <__cvt+0x8a>
10003000:	1c20      	adds	r0, r4, #0
10003002:	1c29      	adds	r1, r5, #0
10003004:	2200      	movs	r2, #0
10003006:	2300      	movs	r3, #0
10003008:	f001 fd50 	bl	10004aac <__aeabi_dcmpeq>
1000300c:	2800      	cmp	r0, #0
1000300e:	d104      	bne.n	1000301a <__cvt+0x8a>
10003010:	2301      	movs	r3, #1
10003012:	9a10      	ldr	r2, [sp, #64]	; 0x40
10003014:	1a9b      	subs	r3, r3, r2
10003016:	9a13      	ldr	r2, [sp, #76]	; 0x4c
10003018:	6013      	str	r3, [r2, #0]
1000301a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1000301c:	9a07      	ldr	r2, [sp, #28]
1000301e:	681b      	ldr	r3, [r3, #0]
10003020:	18d3      	adds	r3, r2, r3
10003022:	9307      	str	r3, [sp, #28]
10003024:	1c20      	adds	r0, r4, #0
10003026:	1c29      	adds	r1, r5, #0
10003028:	2200      	movs	r2, #0
1000302a:	2300      	movs	r3, #0
1000302c:	f001 fd3e 	bl	10004aac <__aeabi_dcmpeq>
10003030:	2800      	cmp	r0, #0
10003032:	d001      	beq.n	10003038 <__cvt+0xa8>
10003034:	9b07      	ldr	r3, [sp, #28]
10003036:	9309      	str	r3, [sp, #36]	; 0x24
10003038:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000303a:	9a07      	ldr	r2, [sp, #28]
1000303c:	4293      	cmp	r3, r2
1000303e:	d204      	bcs.n	1000304a <__cvt+0xba>
10003040:	1c5a      	adds	r2, r3, #1
10003042:	9209      	str	r2, [sp, #36]	; 0x24
10003044:	2230      	movs	r2, #48	; 0x30
10003046:	701a      	strb	r2, [r3, #0]
10003048:	e7f6      	b.n	10003038 <__cvt+0xa8>
1000304a:	1c38      	adds	r0, r7, #0
1000304c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000304e:	9a15      	ldr	r2, [sp, #84]	; 0x54
10003050:	1bdb      	subs	r3, r3, r7
10003052:	6013      	str	r3, [r2, #0]
10003054:	b00b      	add	sp, #44	; 0x2c
10003056:	bdf0      	pop	{r4, r5, r6, r7, pc}

10003058 <__exponent>:
10003058:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000305a:	232b      	movs	r3, #43	; 0x2b
1000305c:	1c07      	adds	r7, r0, #0
1000305e:	1c0c      	adds	r4, r1, #0
10003060:	7002      	strb	r2, [r0, #0]
10003062:	1c86      	adds	r6, r0, #2
10003064:	2900      	cmp	r1, #0
10003066:	da01      	bge.n	1000306c <__exponent+0x14>
10003068:	232d      	movs	r3, #45	; 0x2d
1000306a:	424c      	negs	r4, r1
1000306c:	707b      	strb	r3, [r7, #1]
1000306e:	2c09      	cmp	r4, #9
10003070:	dd1c      	ble.n	100030ac <__exponent+0x54>
10003072:	466b      	mov	r3, sp
10003074:	1ddd      	adds	r5, r3, #7
10003076:	1c20      	adds	r0, r4, #0
10003078:	210a      	movs	r1, #10
1000307a:	f7ff ff33 	bl	10002ee4 <__aeabi_idivmod>
1000307e:	3d01      	subs	r5, #1
10003080:	3130      	adds	r1, #48	; 0x30
10003082:	7029      	strb	r1, [r5, #0]
10003084:	1c20      	adds	r0, r4, #0
10003086:	210a      	movs	r1, #10
10003088:	f7ff fe46 	bl	10002d18 <__aeabi_idiv>
1000308c:	1e04      	subs	r4, r0, #0
1000308e:	2c09      	cmp	r4, #9
10003090:	dcf1      	bgt.n	10003076 <__exponent+0x1e>
10003092:	3d01      	subs	r5, #1
10003094:	3430      	adds	r4, #48	; 0x30
10003096:	702c      	strb	r4, [r5, #0]
10003098:	466b      	mov	r3, sp
1000309a:	3307      	adds	r3, #7
1000309c:	1c30      	adds	r0, r6, #0
1000309e:	42ab      	cmp	r3, r5
100030a0:	d909      	bls.n	100030b6 <__exponent+0x5e>
100030a2:	782b      	ldrb	r3, [r5, #0]
100030a4:	3501      	adds	r5, #1
100030a6:	7033      	strb	r3, [r6, #0]
100030a8:	3601      	adds	r6, #1
100030aa:	e7f5      	b.n	10003098 <__exponent+0x40>
100030ac:	2330      	movs	r3, #48	; 0x30
100030ae:	18e4      	adds	r4, r4, r3
100030b0:	7033      	strb	r3, [r6, #0]
100030b2:	1cb0      	adds	r0, r6, #2
100030b4:	7074      	strb	r4, [r6, #1]
100030b6:	1bc0      	subs	r0, r0, r7
100030b8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

100030bc <_printf_float>:
100030bc:	b5f0      	push	{r4, r5, r6, r7, lr}
100030be:	b093      	sub	sp, #76	; 0x4c
100030c0:	1c0c      	adds	r4, r1, #0
100030c2:	9208      	str	r2, [sp, #32]
100030c4:	9e18      	ldr	r6, [sp, #96]	; 0x60
100030c6:	9309      	str	r3, [sp, #36]	; 0x24
100030c8:	1c05      	adds	r5, r0, #0
100030ca:	f001 f953 	bl	10004374 <_localeconv_r>
100030ce:	6803      	ldr	r3, [r0, #0]
100030d0:	1c18      	adds	r0, r3, #0
100030d2:	930b      	str	r3, [sp, #44]	; 0x2c
100030d4:	f000 fac0 	bl	10003658 <strlen>
100030d8:	2300      	movs	r3, #0
100030da:	2207      	movs	r2, #7
100030dc:	9310      	str	r3, [sp, #64]	; 0x40
100030de:	6833      	ldr	r3, [r6, #0]
100030e0:	900c      	str	r0, [sp, #48]	; 0x30
100030e2:	3307      	adds	r3, #7
100030e4:	4393      	bics	r3, r2
100030e6:	1c1a      	adds	r2, r3, #0
100030e8:	6818      	ldr	r0, [r3, #0]
100030ea:	6859      	ldr	r1, [r3, #4]
100030ec:	3208      	adds	r2, #8
100030ee:	7e27      	ldrb	r7, [r4, #24]
100030f0:	6032      	str	r2, [r6, #0]
100030f2:	64a0      	str	r0, [r4, #72]	; 0x48
100030f4:	64e1      	str	r1, [r4, #76]	; 0x4c
100030f6:	f000 fa87 	bl	10003608 <__fpclassifyd>
100030fa:	2801      	cmp	r0, #1
100030fc:	d118      	bne.n	10003130 <_printf_float+0x74>
100030fe:	6ca0      	ldr	r0, [r4, #72]	; 0x48
10003100:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
10003102:	2200      	movs	r2, #0
10003104:	2300      	movs	r3, #0
10003106:	f001 fcd7 	bl	10004ab8 <__aeabi_dcmplt>
1000310a:	2800      	cmp	r0, #0
1000310c:	d003      	beq.n	10003116 <_printf_float+0x5a>
1000310e:	1c23      	adds	r3, r4, #0
10003110:	222d      	movs	r2, #45	; 0x2d
10003112:	3343      	adds	r3, #67	; 0x43
10003114:	701a      	strb	r2, [r3, #0]
10003116:	4bb7      	ldr	r3, [pc, #732]	; (100033f4 <_printf_float+0x338>)
10003118:	930a      	str	r3, [sp, #40]	; 0x28
1000311a:	2f47      	cmp	r7, #71	; 0x47
1000311c:	d901      	bls.n	10003122 <_printf_float+0x66>
1000311e:	4bb6      	ldr	r3, [pc, #728]	; (100033f8 <_printf_float+0x33c>)
10003120:	930a      	str	r3, [sp, #40]	; 0x28
10003122:	2303      	movs	r3, #3
10003124:	6822      	ldr	r2, [r4, #0]
10003126:	6123      	str	r3, [r4, #16]
10003128:	3301      	adds	r3, #1
1000312a:	439a      	bics	r2, r3
1000312c:	6022      	str	r2, [r4, #0]
1000312e:	e012      	b.n	10003156 <_printf_float+0x9a>
10003130:	6ca0      	ldr	r0, [r4, #72]	; 0x48
10003132:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
10003134:	f000 fa68 	bl	10003608 <__fpclassifyd>
10003138:	6826      	ldr	r6, [r4, #0]
1000313a:	2800      	cmp	r0, #0
1000313c:	d10d      	bne.n	1000315a <_printf_float+0x9e>
1000313e:	4baf      	ldr	r3, [pc, #700]	; (100033fc <_printf_float+0x340>)
10003140:	930a      	str	r3, [sp, #40]	; 0x28
10003142:	2f47      	cmp	r7, #71	; 0x47
10003144:	d901      	bls.n	1000314a <_printf_float+0x8e>
10003146:	4bae      	ldr	r3, [pc, #696]	; (10003400 <_printf_float+0x344>)
10003148:	930a      	str	r3, [sp, #40]	; 0x28
1000314a:	2303      	movs	r3, #3
1000314c:	1c31      	adds	r1, r6, #0
1000314e:	6123      	str	r3, [r4, #16]
10003150:	3301      	adds	r3, #1
10003152:	4399      	bics	r1, r3
10003154:	6021      	str	r1, [r4, #0]
10003156:	2600      	movs	r6, #0
10003158:	e080      	b.n	1000325c <_printf_float+0x1a0>
1000315a:	2180      	movs	r1, #128	; 0x80
1000315c:	6860      	ldr	r0, [r4, #4]
1000315e:	00c9      	lsls	r1, r1, #3
10003160:	1c43      	adds	r3, r0, #1
10003162:	d101      	bne.n	10003168 <_printf_float+0xac>
10003164:	2306      	movs	r3, #6
10003166:	e009      	b.n	1000317c <_printf_float+0xc0>
10003168:	6ca2      	ldr	r2, [r4, #72]	; 0x48
1000316a:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
1000316c:	2f67      	cmp	r7, #103	; 0x67
1000316e:	d001      	beq.n	10003174 <_printf_float+0xb8>
10003170:	2f47      	cmp	r7, #71	; 0x47
10003172:	d104      	bne.n	1000317e <_printf_float+0xc2>
10003174:	2800      	cmp	r0, #0
10003176:	d000      	beq.n	1000317a <_printf_float+0xbe>
10003178:	e1c1      	b.n	100034fe <_printf_float+0x442>
1000317a:	2301      	movs	r3, #1
1000317c:	6063      	str	r3, [r4, #4]
1000317e:	6863      	ldr	r3, [r4, #4]
10003180:	4331      	orrs	r1, r6
10003182:	9300      	str	r3, [sp, #0]
10003184:	2323      	movs	r3, #35	; 0x23
10003186:	6021      	str	r1, [r4, #0]
10003188:	9101      	str	r1, [sp, #4]
1000318a:	2100      	movs	r1, #0
1000318c:	aa06      	add	r2, sp, #24
1000318e:	189b      	adds	r3, r3, r2
10003190:	9302      	str	r3, [sp, #8]
10003192:	ab0f      	add	r3, sp, #60	; 0x3c
10003194:	9303      	str	r3, [sp, #12]
10003196:	ab10      	add	r3, sp, #64	; 0x40
10003198:	9305      	str	r3, [sp, #20]
1000319a:	9704      	str	r7, [sp, #16]
1000319c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
1000319e:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
100031a0:	9106      	str	r1, [sp, #24]
100031a2:	1c28      	adds	r0, r5, #0
100031a4:	f7ff fef4 	bl	10002f90 <__cvt>
100031a8:	2320      	movs	r3, #32
100031aa:	1c3a      	adds	r2, r7, #0
100031ac:	900a      	str	r0, [sp, #40]	; 0x28
100031ae:	439a      	bics	r2, r3
100031b0:	2a47      	cmp	r2, #71	; 0x47
100031b2:	d107      	bne.n	100031c4 <_printf_float+0x108>
100031b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100031b6:	1cda      	adds	r2, r3, #3
100031b8:	db02      	blt.n	100031c0 <_printf_float+0x104>
100031ba:	6862      	ldr	r2, [r4, #4]
100031bc:	4293      	cmp	r3, r2
100031be:	dd2d      	ble.n	1000321c <_printf_float+0x160>
100031c0:	3f02      	subs	r7, #2
100031c2:	b2ff      	uxtb	r7, r7
100031c4:	990f      	ldr	r1, [sp, #60]	; 0x3c
100031c6:	2f65      	cmp	r7, #101	; 0x65
100031c8:	d812      	bhi.n	100031f0 <_printf_float+0x134>
100031ca:	1c20      	adds	r0, r4, #0
100031cc:	3901      	subs	r1, #1
100031ce:	1c3a      	adds	r2, r7, #0
100031d0:	3050      	adds	r0, #80	; 0x50
100031d2:	910f      	str	r1, [sp, #60]	; 0x3c
100031d4:	f7ff ff40 	bl	10003058 <__exponent>
100031d8:	9a10      	ldr	r2, [sp, #64]	; 0x40
100031da:	1c06      	adds	r6, r0, #0
100031dc:	1883      	adds	r3, r0, r2
100031de:	6123      	str	r3, [r4, #16]
100031e0:	2a01      	cmp	r2, #1
100031e2:	dc02      	bgt.n	100031ea <_printf_float+0x12e>
100031e4:	6822      	ldr	r2, [r4, #0]
100031e6:	07d2      	lsls	r2, r2, #31
100031e8:	d52e      	bpl.n	10003248 <_printf_float+0x18c>
100031ea:	3301      	adds	r3, #1
100031ec:	6123      	str	r3, [r4, #16]
100031ee:	e02b      	b.n	10003248 <_printf_float+0x18c>
100031f0:	2f66      	cmp	r7, #102	; 0x66
100031f2:	d114      	bne.n	1000321e <_printf_float+0x162>
100031f4:	6863      	ldr	r3, [r4, #4]
100031f6:	2900      	cmp	r1, #0
100031f8:	dd08      	ble.n	1000320c <_printf_float+0x150>
100031fa:	6121      	str	r1, [r4, #16]
100031fc:	2b00      	cmp	r3, #0
100031fe:	d102      	bne.n	10003206 <_printf_float+0x14a>
10003200:	6822      	ldr	r2, [r4, #0]
10003202:	07d2      	lsls	r2, r2, #31
10003204:	d51d      	bpl.n	10003242 <_printf_float+0x186>
10003206:	3301      	adds	r3, #1
10003208:	18cb      	adds	r3, r1, r3
1000320a:	e011      	b.n	10003230 <_printf_float+0x174>
1000320c:	2b00      	cmp	r3, #0
1000320e:	d103      	bne.n	10003218 <_printf_float+0x15c>
10003210:	2201      	movs	r2, #1
10003212:	6821      	ldr	r1, [r4, #0]
10003214:	4211      	tst	r1, r2
10003216:	d013      	beq.n	10003240 <_printf_float+0x184>
10003218:	1c9a      	adds	r2, r3, #2
1000321a:	e011      	b.n	10003240 <_printf_float+0x184>
1000321c:	2767      	movs	r7, #103	; 0x67
1000321e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10003220:	9810      	ldr	r0, [sp, #64]	; 0x40
10003222:	4283      	cmp	r3, r0
10003224:	db06      	blt.n	10003234 <_printf_float+0x178>
10003226:	6822      	ldr	r2, [r4, #0]
10003228:	6123      	str	r3, [r4, #16]
1000322a:	07d2      	lsls	r2, r2, #31
1000322c:	d509      	bpl.n	10003242 <_printf_float+0x186>
1000322e:	3301      	adds	r3, #1
10003230:	6123      	str	r3, [r4, #16]
10003232:	e006      	b.n	10003242 <_printf_float+0x186>
10003234:	2201      	movs	r2, #1
10003236:	2b00      	cmp	r3, #0
10003238:	dc01      	bgt.n	1000323e <_printf_float+0x182>
1000323a:	2102      	movs	r1, #2
1000323c:	1aca      	subs	r2, r1, r3
1000323e:	1882      	adds	r2, r0, r2
10003240:	6122      	str	r2, [r4, #16]
10003242:	2600      	movs	r6, #0
10003244:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10003246:	65a3      	str	r3, [r4, #88]	; 0x58
10003248:	2323      	movs	r3, #35	; 0x23
1000324a:	aa06      	add	r2, sp, #24
1000324c:	189b      	adds	r3, r3, r2
1000324e:	781b      	ldrb	r3, [r3, #0]
10003250:	2b00      	cmp	r3, #0
10003252:	d003      	beq.n	1000325c <_printf_float+0x1a0>
10003254:	1c23      	adds	r3, r4, #0
10003256:	222d      	movs	r2, #45	; 0x2d
10003258:	3343      	adds	r3, #67	; 0x43
1000325a:	701a      	strb	r2, [r3, #0]
1000325c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000325e:	1c28      	adds	r0, r5, #0
10003260:	9300      	str	r3, [sp, #0]
10003262:	1c21      	adds	r1, r4, #0
10003264:	9b08      	ldr	r3, [sp, #32]
10003266:	aa11      	add	r2, sp, #68	; 0x44
10003268:	f000 f960 	bl	1000352c <_printf_common>
1000326c:	1c43      	adds	r3, r0, #1
1000326e:	d102      	bne.n	10003276 <_printf_float+0x1ba>
10003270:	2001      	movs	r0, #1
10003272:	4240      	negs	r0, r0
10003274:	e157      	b.n	10003526 <_printf_float+0x46a>
10003276:	6822      	ldr	r2, [r4, #0]
10003278:	0553      	lsls	r3, r2, #21
1000327a:	d404      	bmi.n	10003286 <_printf_float+0x1ca>
1000327c:	1c28      	adds	r0, r5, #0
1000327e:	9908      	ldr	r1, [sp, #32]
10003280:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10003282:	6923      	ldr	r3, [r4, #16]
10003284:	e117      	b.n	100034b6 <_printf_float+0x3fa>
10003286:	2f65      	cmp	r7, #101	; 0x65
10003288:	d800      	bhi.n	1000328c <_printf_float+0x1d0>
1000328a:	e0d5      	b.n	10003438 <_printf_float+0x37c>
1000328c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
1000328e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
10003290:	2200      	movs	r2, #0
10003292:	2300      	movs	r3, #0
10003294:	f001 fc0a 	bl	10004aac <__aeabi_dcmpeq>
10003298:	2800      	cmp	r0, #0
1000329a:	d02b      	beq.n	100032f4 <_printf_float+0x238>
1000329c:	2301      	movs	r3, #1
1000329e:	1c28      	adds	r0, r5, #0
100032a0:	9908      	ldr	r1, [sp, #32]
100032a2:	4a58      	ldr	r2, [pc, #352]	; (10003404 <_printf_float+0x348>)
100032a4:	9e09      	ldr	r6, [sp, #36]	; 0x24
100032a6:	47b0      	blx	r6
100032a8:	1c43      	adds	r3, r0, #1
100032aa:	d0e1      	beq.n	10003270 <_printf_float+0x1b4>
100032ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100032ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
100032b0:	4293      	cmp	r3, r2
100032b2:	db07      	blt.n	100032c4 <_printf_float+0x208>
100032b4:	6823      	ldr	r3, [r4, #0]
100032b6:	07db      	lsls	r3, r3, #31
100032b8:	d404      	bmi.n	100032c4 <_printf_float+0x208>
100032ba:	6823      	ldr	r3, [r4, #0]
100032bc:	079b      	lsls	r3, r3, #30
100032be:	d500      	bpl.n	100032c2 <_printf_float+0x206>
100032c0:	e11b      	b.n	100034fa <_printf_float+0x43e>
100032c2:	e114      	b.n	100034ee <_printf_float+0x432>
100032c4:	9e09      	ldr	r6, [sp, #36]	; 0x24
100032c6:	1c28      	adds	r0, r5, #0
100032c8:	9908      	ldr	r1, [sp, #32]
100032ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
100032cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100032ce:	47b0      	blx	r6
100032d0:	2600      	movs	r6, #0
100032d2:	1c43      	adds	r3, r0, #1
100032d4:	d0cc      	beq.n	10003270 <_printf_float+0x1b4>
100032d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
100032d8:	3b01      	subs	r3, #1
100032da:	429e      	cmp	r6, r3
100032dc:	daed      	bge.n	100032ba <_printf_float+0x1fe>
100032de:	1c22      	adds	r2, r4, #0
100032e0:	2301      	movs	r3, #1
100032e2:	1c28      	adds	r0, r5, #0
100032e4:	9908      	ldr	r1, [sp, #32]
100032e6:	321a      	adds	r2, #26
100032e8:	9f09      	ldr	r7, [sp, #36]	; 0x24
100032ea:	47b8      	blx	r7
100032ec:	1c43      	adds	r3, r0, #1
100032ee:	d0bf      	beq.n	10003270 <_printf_float+0x1b4>
100032f0:	3601      	adds	r6, #1
100032f2:	e7f0      	b.n	100032d6 <_printf_float+0x21a>
100032f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100032f6:	2b00      	cmp	r3, #0
100032f8:	dc2b      	bgt.n	10003352 <_printf_float+0x296>
100032fa:	2301      	movs	r3, #1
100032fc:	1c28      	adds	r0, r5, #0
100032fe:	9908      	ldr	r1, [sp, #32]
10003300:	4a40      	ldr	r2, [pc, #256]	; (10003404 <_printf_float+0x348>)
10003302:	9e09      	ldr	r6, [sp, #36]	; 0x24
10003304:	47b0      	blx	r6
10003306:	1c43      	adds	r3, r0, #1
10003308:	d0b2      	beq.n	10003270 <_printf_float+0x1b4>
1000330a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1000330c:	2b00      	cmp	r3, #0
1000330e:	d105      	bne.n	1000331c <_printf_float+0x260>
10003310:	9b10      	ldr	r3, [sp, #64]	; 0x40
10003312:	2b00      	cmp	r3, #0
10003314:	d102      	bne.n	1000331c <_printf_float+0x260>
10003316:	6823      	ldr	r3, [r4, #0]
10003318:	07db      	lsls	r3, r3, #31
1000331a:	d5ce      	bpl.n	100032ba <_printf_float+0x1fe>
1000331c:	9e09      	ldr	r6, [sp, #36]	; 0x24
1000331e:	1c28      	adds	r0, r5, #0
10003320:	9908      	ldr	r1, [sp, #32]
10003322:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10003324:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10003326:	47b0      	blx	r6
10003328:	2600      	movs	r6, #0
1000332a:	1c43      	adds	r3, r0, #1
1000332c:	d0a0      	beq.n	10003270 <_printf_float+0x1b4>
1000332e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10003330:	1c28      	adds	r0, r5, #0
10003332:	425b      	negs	r3, r3
10003334:	9908      	ldr	r1, [sp, #32]
10003336:	429e      	cmp	r6, r3
10003338:	da08      	bge.n	1000334c <_printf_float+0x290>
1000333a:	1c22      	adds	r2, r4, #0
1000333c:	2301      	movs	r3, #1
1000333e:	321a      	adds	r2, #26
10003340:	9f09      	ldr	r7, [sp, #36]	; 0x24
10003342:	47b8      	blx	r7
10003344:	1c43      	adds	r3, r0, #1
10003346:	d093      	beq.n	10003270 <_printf_float+0x1b4>
10003348:	3601      	adds	r6, #1
1000334a:	e7f0      	b.n	1000332e <_printf_float+0x272>
1000334c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1000334e:	9b10      	ldr	r3, [sp, #64]	; 0x40
10003350:	e0b1      	b.n	100034b6 <_printf_float+0x3fa>
10003352:	9b10      	ldr	r3, [sp, #64]	; 0x40
10003354:	6da6      	ldr	r6, [r4, #88]	; 0x58
10003356:	429e      	cmp	r6, r3
10003358:	dd00      	ble.n	1000335c <_printf_float+0x2a0>
1000335a:	1c1e      	adds	r6, r3, #0
1000335c:	2e00      	cmp	r6, #0
1000335e:	dc01      	bgt.n	10003364 <_printf_float+0x2a8>
10003360:	2300      	movs	r3, #0
10003362:	e014      	b.n	1000338e <_printf_float+0x2d2>
10003364:	1c33      	adds	r3, r6, #0
10003366:	1c28      	adds	r0, r5, #0
10003368:	9908      	ldr	r1, [sp, #32]
1000336a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1000336c:	9f09      	ldr	r7, [sp, #36]	; 0x24
1000336e:	47b8      	blx	r7
10003370:	1c43      	adds	r3, r0, #1
10003372:	d1f5      	bne.n	10003360 <_printf_float+0x2a4>
10003374:	e77c      	b.n	10003270 <_printf_float+0x1b4>
10003376:	1c22      	adds	r2, r4, #0
10003378:	2301      	movs	r3, #1
1000337a:	1c28      	adds	r0, r5, #0
1000337c:	9908      	ldr	r1, [sp, #32]
1000337e:	321a      	adds	r2, #26
10003380:	9f09      	ldr	r7, [sp, #36]	; 0x24
10003382:	47b8      	blx	r7
10003384:	1c43      	adds	r3, r0, #1
10003386:	d100      	bne.n	1000338a <_printf_float+0x2ce>
10003388:	e772      	b.n	10003270 <_printf_float+0x1b4>
1000338a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000338c:	3301      	adds	r3, #1
1000338e:	930d      	str	r3, [sp, #52]	; 0x34
10003390:	43f3      	mvns	r3, r6
10003392:	6da2      	ldr	r2, [r4, #88]	; 0x58
10003394:	17db      	asrs	r3, r3, #31
10003396:	990d      	ldr	r1, [sp, #52]	; 0x34
10003398:	4033      	ands	r3, r6
1000339a:	1ad3      	subs	r3, r2, r3
1000339c:	4299      	cmp	r1, r3
1000339e:	dbea      	blt.n	10003376 <_printf_float+0x2ba>
100033a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
100033a2:	189e      	adds	r6, r3, r2
100033a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100033a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
100033a8:	4293      	cmp	r3, r2
100033aa:	db0e      	blt.n	100033ca <_printf_float+0x30e>
100033ac:	6823      	ldr	r3, [r4, #0]
100033ae:	07db      	lsls	r3, r3, #31
100033b0:	d40b      	bmi.n	100033ca <_printf_float+0x30e>
100033b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
100033b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100033b6:	18d7      	adds	r7, r2, r3
100033b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
100033ba:	1bbf      	subs	r7, r7, r6
100033bc:	1a9b      	subs	r3, r3, r2
100033be:	429f      	cmp	r7, r3
100033c0:	dd00      	ble.n	100033c4 <_printf_float+0x308>
100033c2:	1c1f      	adds	r7, r3, #0
100033c4:	2f00      	cmp	r7, #0
100033c6:	dc09      	bgt.n	100033dc <_printf_float+0x320>
100033c8:	e011      	b.n	100033ee <_printf_float+0x332>
100033ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100033cc:	1c28      	adds	r0, r5, #0
100033ce:	9908      	ldr	r1, [sp, #32]
100033d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
100033d2:	9f09      	ldr	r7, [sp, #36]	; 0x24
100033d4:	47b8      	blx	r7
100033d6:	1c43      	adds	r3, r0, #1
100033d8:	d1eb      	bne.n	100033b2 <_printf_float+0x2f6>
100033da:	e749      	b.n	10003270 <_printf_float+0x1b4>
100033dc:	1c32      	adds	r2, r6, #0
100033de:	1c3b      	adds	r3, r7, #0
100033e0:	1c28      	adds	r0, r5, #0
100033e2:	9908      	ldr	r1, [sp, #32]
100033e4:	9e09      	ldr	r6, [sp, #36]	; 0x24
100033e6:	47b0      	blx	r6
100033e8:	1c43      	adds	r3, r0, #1
100033ea:	d100      	bne.n	100033ee <_printf_float+0x332>
100033ec:	e740      	b.n	10003270 <_printf_float+0x1b4>
100033ee:	2300      	movs	r3, #0
100033f0:	e016      	b.n	10003420 <_printf_float+0x364>
100033f2:	46c0      	nop			; (mov r8, r8)
100033f4:	1000682e 	.word	0x1000682e
100033f8:	10006832 	.word	0x10006832
100033fc:	10006836 	.word	0x10006836
10003400:	1000683a 	.word	0x1000683a
10003404:	1000683e 	.word	0x1000683e
10003408:	1c22      	adds	r2, r4, #0
1000340a:	2301      	movs	r3, #1
1000340c:	1c28      	adds	r0, r5, #0
1000340e:	9908      	ldr	r1, [sp, #32]
10003410:	321a      	adds	r2, #26
10003412:	9e09      	ldr	r6, [sp, #36]	; 0x24
10003414:	47b0      	blx	r6
10003416:	1c43      	adds	r3, r0, #1
10003418:	d100      	bne.n	1000341c <_printf_float+0x360>
1000341a:	e729      	b.n	10003270 <_printf_float+0x1b4>
1000341c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1000341e:	3301      	adds	r3, #1
10003420:	930a      	str	r3, [sp, #40]	; 0x28
10003422:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
10003424:	9b10      	ldr	r3, [sp, #64]	; 0x40
10003426:	1a9a      	subs	r2, r3, r2
10003428:	43fb      	mvns	r3, r7
1000342a:	17db      	asrs	r3, r3, #31
1000342c:	403b      	ands	r3, r7
1000342e:	1ad3      	subs	r3, r2, r3
10003430:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10003432:	429a      	cmp	r2, r3
10003434:	dbe8      	blt.n	10003408 <_printf_float+0x34c>
10003436:	e740      	b.n	100032ba <_printf_float+0x1fe>
10003438:	9b10      	ldr	r3, [sp, #64]	; 0x40
1000343a:	1c28      	adds	r0, r5, #0
1000343c:	9908      	ldr	r1, [sp, #32]
1000343e:	2b01      	cmp	r3, #1
10003440:	dc02      	bgt.n	10003448 <_printf_float+0x38c>
10003442:	2301      	movs	r3, #1
10003444:	421a      	tst	r2, r3
10003446:	d03c      	beq.n	100034c2 <_printf_float+0x406>
10003448:	2301      	movs	r3, #1
1000344a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1000344c:	9f09      	ldr	r7, [sp, #36]	; 0x24
1000344e:	47b8      	blx	r7
10003450:	1c43      	adds	r3, r0, #1
10003452:	d100      	bne.n	10003456 <_printf_float+0x39a>
10003454:	e70c      	b.n	10003270 <_printf_float+0x1b4>
10003456:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10003458:	1c28      	adds	r0, r5, #0
1000345a:	9908      	ldr	r1, [sp, #32]
1000345c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1000345e:	9f09      	ldr	r7, [sp, #36]	; 0x24
10003460:	47b8      	blx	r7
10003462:	1c43      	adds	r3, r0, #1
10003464:	d100      	bne.n	10003468 <_printf_float+0x3ac>
10003466:	e703      	b.n	10003270 <_printf_float+0x1b4>
10003468:	6ca0      	ldr	r0, [r4, #72]	; 0x48
1000346a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
1000346c:	2300      	movs	r3, #0
1000346e:	2200      	movs	r2, #0
10003470:	f001 fb1c 	bl	10004aac <__aeabi_dcmpeq>
10003474:	2300      	movs	r3, #0
10003476:	2800      	cmp	r0, #0
10003478:	d112      	bne.n	100034a0 <_printf_float+0x3e4>
1000347a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1000347c:	9b10      	ldr	r3, [sp, #64]	; 0x40
1000347e:	3201      	adds	r2, #1
10003480:	3b01      	subs	r3, #1
10003482:	1c28      	adds	r0, r5, #0
10003484:	9908      	ldr	r1, [sp, #32]
10003486:	e01d      	b.n	100034c4 <_printf_float+0x408>
10003488:	1c22      	adds	r2, r4, #0
1000348a:	2301      	movs	r3, #1
1000348c:	1c28      	adds	r0, r5, #0
1000348e:	9908      	ldr	r1, [sp, #32]
10003490:	321a      	adds	r2, #26
10003492:	9f09      	ldr	r7, [sp, #36]	; 0x24
10003494:	47b8      	blx	r7
10003496:	1c43      	adds	r3, r0, #1
10003498:	d100      	bne.n	1000349c <_printf_float+0x3e0>
1000349a:	e6e9      	b.n	10003270 <_printf_float+0x1b4>
1000349c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1000349e:	3301      	adds	r3, #1
100034a0:	930a      	str	r3, [sp, #40]	; 0x28
100034a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
100034a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100034a6:	3b01      	subs	r3, #1
100034a8:	429a      	cmp	r2, r3
100034aa:	dbed      	blt.n	10003488 <_printf_float+0x3cc>
100034ac:	1c22      	adds	r2, r4, #0
100034ae:	1c28      	adds	r0, r5, #0
100034b0:	1c33      	adds	r3, r6, #0
100034b2:	9908      	ldr	r1, [sp, #32]
100034b4:	3250      	adds	r2, #80	; 0x50
100034b6:	9e09      	ldr	r6, [sp, #36]	; 0x24
100034b8:	47b0      	blx	r6
100034ba:	1c43      	adds	r3, r0, #1
100034bc:	d000      	beq.n	100034c0 <_printf_float+0x404>
100034be:	e6fc      	b.n	100032ba <_printf_float+0x1fe>
100034c0:	e6d6      	b.n	10003270 <_printf_float+0x1b4>
100034c2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100034c4:	9f09      	ldr	r7, [sp, #36]	; 0x24
100034c6:	47b8      	blx	r7
100034c8:	1c43      	adds	r3, r0, #1
100034ca:	d1ef      	bne.n	100034ac <_printf_float+0x3f0>
100034cc:	e6d0      	b.n	10003270 <_printf_float+0x1b4>
100034ce:	1c22      	adds	r2, r4, #0
100034d0:	2301      	movs	r3, #1
100034d2:	1c28      	adds	r0, r5, #0
100034d4:	9908      	ldr	r1, [sp, #32]
100034d6:	3219      	adds	r2, #25
100034d8:	9f09      	ldr	r7, [sp, #36]	; 0x24
100034da:	47b8      	blx	r7
100034dc:	1c43      	adds	r3, r0, #1
100034de:	d100      	bne.n	100034e2 <_printf_float+0x426>
100034e0:	e6c6      	b.n	10003270 <_printf_float+0x1b4>
100034e2:	3601      	adds	r6, #1
100034e4:	68e3      	ldr	r3, [r4, #12]
100034e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
100034e8:	1a9b      	subs	r3, r3, r2
100034ea:	429e      	cmp	r6, r3
100034ec:	dbef      	blt.n	100034ce <_printf_float+0x412>
100034ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
100034f0:	68e0      	ldr	r0, [r4, #12]
100034f2:	4298      	cmp	r0, r3
100034f4:	da17      	bge.n	10003526 <_printf_float+0x46a>
100034f6:	1c18      	adds	r0, r3, #0
100034f8:	e015      	b.n	10003526 <_printf_float+0x46a>
100034fa:	2600      	movs	r6, #0
100034fc:	e7f2      	b.n	100034e4 <_printf_float+0x428>
100034fe:	4331      	orrs	r1, r6
10003500:	6021      	str	r1, [r4, #0]
10003502:	9101      	str	r1, [sp, #4]
10003504:	2123      	movs	r1, #35	; 0x23
10003506:	9000      	str	r0, [sp, #0]
10003508:	a806      	add	r0, sp, #24
1000350a:	1809      	adds	r1, r1, r0
1000350c:	9102      	str	r1, [sp, #8]
1000350e:	a90f      	add	r1, sp, #60	; 0x3c
10003510:	9103      	str	r1, [sp, #12]
10003512:	a910      	add	r1, sp, #64	; 0x40
10003514:	9105      	str	r1, [sp, #20]
10003516:	2100      	movs	r1, #0
10003518:	9704      	str	r7, [sp, #16]
1000351a:	9106      	str	r1, [sp, #24]
1000351c:	1c28      	adds	r0, r5, #0
1000351e:	f7ff fd37 	bl	10002f90 <__cvt>
10003522:	900a      	str	r0, [sp, #40]	; 0x28
10003524:	e646      	b.n	100031b4 <_printf_float+0xf8>
10003526:	b013      	add	sp, #76	; 0x4c
10003528:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000352a:	46c0      	nop			; (mov r8, r8)

1000352c <_printf_common>:
1000352c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000352e:	1c17      	adds	r7, r2, #0
10003530:	9301      	str	r3, [sp, #4]
10003532:	690a      	ldr	r2, [r1, #16]
10003534:	688b      	ldr	r3, [r1, #8]
10003536:	9000      	str	r0, [sp, #0]
10003538:	1c0c      	adds	r4, r1, #0
1000353a:	4293      	cmp	r3, r2
1000353c:	da00      	bge.n	10003540 <_printf_common+0x14>
1000353e:	1c13      	adds	r3, r2, #0
10003540:	1c22      	adds	r2, r4, #0
10003542:	603b      	str	r3, [r7, #0]
10003544:	3243      	adds	r2, #67	; 0x43
10003546:	7812      	ldrb	r2, [r2, #0]
10003548:	2a00      	cmp	r2, #0
1000354a:	d001      	beq.n	10003550 <_printf_common+0x24>
1000354c:	3301      	adds	r3, #1
1000354e:	603b      	str	r3, [r7, #0]
10003550:	6823      	ldr	r3, [r4, #0]
10003552:	069b      	lsls	r3, r3, #26
10003554:	d502      	bpl.n	1000355c <_printf_common+0x30>
10003556:	683b      	ldr	r3, [r7, #0]
10003558:	3302      	adds	r3, #2
1000355a:	603b      	str	r3, [r7, #0]
1000355c:	2506      	movs	r5, #6
1000355e:	6823      	ldr	r3, [r4, #0]
10003560:	401d      	ands	r5, r3
10003562:	d01e      	beq.n	100035a2 <_printf_common+0x76>
10003564:	1c23      	adds	r3, r4, #0
10003566:	3343      	adds	r3, #67	; 0x43
10003568:	781b      	ldrb	r3, [r3, #0]
1000356a:	1e5a      	subs	r2, r3, #1
1000356c:	4193      	sbcs	r3, r2
1000356e:	6822      	ldr	r2, [r4, #0]
10003570:	0692      	lsls	r2, r2, #26
10003572:	d51c      	bpl.n	100035ae <_printf_common+0x82>
10003574:	2030      	movs	r0, #48	; 0x30
10003576:	18e1      	adds	r1, r4, r3
10003578:	3140      	adds	r1, #64	; 0x40
1000357a:	70c8      	strb	r0, [r1, #3]
1000357c:	1c21      	adds	r1, r4, #0
1000357e:	1c5a      	adds	r2, r3, #1
10003580:	3145      	adds	r1, #69	; 0x45
10003582:	7809      	ldrb	r1, [r1, #0]
10003584:	18a2      	adds	r2, r4, r2
10003586:	3240      	adds	r2, #64	; 0x40
10003588:	3302      	adds	r3, #2
1000358a:	70d1      	strb	r1, [r2, #3]
1000358c:	e00f      	b.n	100035ae <_printf_common+0x82>
1000358e:	1c22      	adds	r2, r4, #0
10003590:	2301      	movs	r3, #1
10003592:	9800      	ldr	r0, [sp, #0]
10003594:	9901      	ldr	r1, [sp, #4]
10003596:	3219      	adds	r2, #25
10003598:	9e08      	ldr	r6, [sp, #32]
1000359a:	47b0      	blx	r6
1000359c:	1c43      	adds	r3, r0, #1
1000359e:	d00e      	beq.n	100035be <_printf_common+0x92>
100035a0:	3501      	adds	r5, #1
100035a2:	68e3      	ldr	r3, [r4, #12]
100035a4:	683a      	ldr	r2, [r7, #0]
100035a6:	1a9b      	subs	r3, r3, r2
100035a8:	429d      	cmp	r5, r3
100035aa:	dbf0      	blt.n	1000358e <_printf_common+0x62>
100035ac:	e7da      	b.n	10003564 <_printf_common+0x38>
100035ae:	1c22      	adds	r2, r4, #0
100035b0:	9800      	ldr	r0, [sp, #0]
100035b2:	9901      	ldr	r1, [sp, #4]
100035b4:	3243      	adds	r2, #67	; 0x43
100035b6:	9d08      	ldr	r5, [sp, #32]
100035b8:	47a8      	blx	r5
100035ba:	1c43      	adds	r3, r0, #1
100035bc:	d102      	bne.n	100035c4 <_printf_common+0x98>
100035be:	2001      	movs	r0, #1
100035c0:	4240      	negs	r0, r0
100035c2:	e020      	b.n	10003606 <_printf_common+0xda>
100035c4:	2306      	movs	r3, #6
100035c6:	6820      	ldr	r0, [r4, #0]
100035c8:	68e1      	ldr	r1, [r4, #12]
100035ca:	683a      	ldr	r2, [r7, #0]
100035cc:	4003      	ands	r3, r0
100035ce:	2500      	movs	r5, #0
100035d0:	2b04      	cmp	r3, #4
100035d2:	d103      	bne.n	100035dc <_printf_common+0xb0>
100035d4:	1a8d      	subs	r5, r1, r2
100035d6:	43eb      	mvns	r3, r5
100035d8:	17db      	asrs	r3, r3, #31
100035da:	401d      	ands	r5, r3
100035dc:	68a3      	ldr	r3, [r4, #8]
100035de:	6922      	ldr	r2, [r4, #16]
100035e0:	4293      	cmp	r3, r2
100035e2:	dd01      	ble.n	100035e8 <_printf_common+0xbc>
100035e4:	1a9b      	subs	r3, r3, r2
100035e6:	18ed      	adds	r5, r5, r3
100035e8:	2700      	movs	r7, #0
100035ea:	42af      	cmp	r7, r5
100035ec:	da0a      	bge.n	10003604 <_printf_common+0xd8>
100035ee:	1c22      	adds	r2, r4, #0
100035f0:	2301      	movs	r3, #1
100035f2:	9800      	ldr	r0, [sp, #0]
100035f4:	9901      	ldr	r1, [sp, #4]
100035f6:	321a      	adds	r2, #26
100035f8:	9e08      	ldr	r6, [sp, #32]
100035fa:	47b0      	blx	r6
100035fc:	1c43      	adds	r3, r0, #1
100035fe:	d0de      	beq.n	100035be <_printf_common+0x92>
10003600:	3701      	adds	r7, #1
10003602:	e7f2      	b.n	100035ea <_printf_common+0xbe>
10003604:	2000      	movs	r0, #0
10003606:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10003608 <__fpclassifyd>:
10003608:	b530      	push	{r4, r5, lr}
1000360a:	1c0c      	adds	r4, r1, #0
1000360c:	2302      	movs	r3, #2
1000360e:	4304      	orrs	r4, r0
10003610:	d017      	beq.n	10003642 <__fpclassifyd+0x3a>
10003612:	2480      	movs	r4, #128	; 0x80
10003614:	0624      	lsls	r4, r4, #24
10003616:	42a1      	cmp	r1, r4
10003618:	d101      	bne.n	1000361e <__fpclassifyd+0x16>
1000361a:	2800      	cmp	r0, #0
1000361c:	d011      	beq.n	10003642 <__fpclassifyd+0x3a>
1000361e:	4b0a      	ldr	r3, [pc, #40]	; (10003648 <__fpclassifyd+0x40>)
10003620:	0049      	lsls	r1, r1, #1
10003622:	0849      	lsrs	r1, r1, #1
10003624:	4a09      	ldr	r2, [pc, #36]	; (1000364c <__fpclassifyd+0x44>)
10003626:	18cc      	adds	r4, r1, r3
10003628:	2304      	movs	r3, #4
1000362a:	4294      	cmp	r4, r2
1000362c:	d909      	bls.n	10003642 <__fpclassifyd+0x3a>
1000362e:	4a08      	ldr	r2, [pc, #32]	; (10003650 <__fpclassifyd+0x48>)
10003630:	3b01      	subs	r3, #1
10003632:	4291      	cmp	r1, r2
10003634:	d905      	bls.n	10003642 <__fpclassifyd+0x3a>
10003636:	4a07      	ldr	r2, [pc, #28]	; (10003654 <__fpclassifyd+0x4c>)
10003638:	2300      	movs	r3, #0
1000363a:	4291      	cmp	r1, r2
1000363c:	d101      	bne.n	10003642 <__fpclassifyd+0x3a>
1000363e:	4243      	negs	r3, r0
10003640:	4143      	adcs	r3, r0
10003642:	1c18      	adds	r0, r3, #0
10003644:	bd30      	pop	{r4, r5, pc}
10003646:	46c0      	nop			; (mov r8, r8)
10003648:	fff00000 	.word	0xfff00000
1000364c:	7fdfffff 	.word	0x7fdfffff
10003650:	000fffff 	.word	0x000fffff
10003654:	7ff00000 	.word	0x7ff00000

10003658 <strlen>:
10003658:	2300      	movs	r3, #0
1000365a:	5cc2      	ldrb	r2, [r0, r3]
1000365c:	3301      	adds	r3, #1
1000365e:	2a00      	cmp	r2, #0
10003660:	d1fb      	bne.n	1000365a <strlen+0x2>
10003662:	1e58      	subs	r0, r3, #1
10003664:	4770      	bx	lr

10003666 <quorem>:
10003666:	b5f0      	push	{r4, r5, r6, r7, lr}
10003668:	6903      	ldr	r3, [r0, #16]
1000366a:	690c      	ldr	r4, [r1, #16]
1000366c:	b089      	sub	sp, #36	; 0x24
1000366e:	2600      	movs	r6, #0
10003670:	42a3      	cmp	r3, r4
10003672:	db7c      	blt.n	1000376e <quorem+0x108>
10003674:	1c0b      	adds	r3, r1, #0
10003676:	3c01      	subs	r4, #1
10003678:	3314      	adds	r3, #20
1000367a:	00a5      	lsls	r5, r4, #2
1000367c:	9303      	str	r3, [sp, #12]
1000367e:	195b      	adds	r3, r3, r5
10003680:	9304      	str	r3, [sp, #16]
10003682:	1c03      	adds	r3, r0, #0
10003684:	3314      	adds	r3, #20
10003686:	9301      	str	r3, [sp, #4]
10003688:	195d      	adds	r5, r3, r5
1000368a:	9b04      	ldr	r3, [sp, #16]
1000368c:	9107      	str	r1, [sp, #28]
1000368e:	681b      	ldr	r3, [r3, #0]
10003690:	9002      	str	r0, [sp, #8]
10003692:	1c59      	adds	r1, r3, #1
10003694:	6828      	ldr	r0, [r5, #0]
10003696:	9305      	str	r3, [sp, #20]
10003698:	f7ff faae 	bl	10002bf8 <__aeabi_uidiv>
1000369c:	1e07      	subs	r7, r0, #0
1000369e:	42b7      	cmp	r7, r6
100036a0:	d035      	beq.n	1000370e <quorem+0xa8>
100036a2:	9b03      	ldr	r3, [sp, #12]
100036a4:	9801      	ldr	r0, [sp, #4]
100036a6:	469c      	mov	ip, r3
100036a8:	9605      	str	r6, [sp, #20]
100036aa:	4663      	mov	r3, ip
100036ac:	cb04      	ldmia	r3!, {r2}
100036ae:	b291      	uxth	r1, r2
100036b0:	4379      	muls	r1, r7
100036b2:	0c12      	lsrs	r2, r2, #16
100036b4:	437a      	muls	r2, r7
100036b6:	1871      	adds	r1, r6, r1
100036b8:	0c0e      	lsrs	r6, r1, #16
100036ba:	469c      	mov	ip, r3
100036bc:	18b3      	adds	r3, r6, r2
100036be:	9306      	str	r3, [sp, #24]
100036c0:	8802      	ldrh	r2, [r0, #0]
100036c2:	0c1e      	lsrs	r6, r3, #16
100036c4:	9b05      	ldr	r3, [sp, #20]
100036c6:	b289      	uxth	r1, r1
100036c8:	18d2      	adds	r2, r2, r3
100036ca:	6803      	ldr	r3, [r0, #0]
100036cc:	1a52      	subs	r2, r2, r1
100036ce:	0c19      	lsrs	r1, r3, #16
100036d0:	466b      	mov	r3, sp
100036d2:	8b1b      	ldrh	r3, [r3, #24]
100036d4:	1acb      	subs	r3, r1, r3
100036d6:	1411      	asrs	r1, r2, #16
100036d8:	185b      	adds	r3, r3, r1
100036da:	1419      	asrs	r1, r3, #16
100036dc:	b292      	uxth	r2, r2
100036de:	041b      	lsls	r3, r3, #16
100036e0:	431a      	orrs	r2, r3
100036e2:	9b04      	ldr	r3, [sp, #16]
100036e4:	9105      	str	r1, [sp, #20]
100036e6:	c004      	stmia	r0!, {r2}
100036e8:	4563      	cmp	r3, ip
100036ea:	d2de      	bcs.n	100036aa <quorem+0x44>
100036ec:	682b      	ldr	r3, [r5, #0]
100036ee:	2b00      	cmp	r3, #0
100036f0:	d10d      	bne.n	1000370e <quorem+0xa8>
100036f2:	1c23      	adds	r3, r4, #0
100036f4:	9a01      	ldr	r2, [sp, #4]
100036f6:	3d04      	subs	r5, #4
100036f8:	4295      	cmp	r5, r2
100036fa:	d803      	bhi.n	10003704 <quorem+0x9e>
100036fc:	9a02      	ldr	r2, [sp, #8]
100036fe:	1c1c      	adds	r4, r3, #0
10003700:	6113      	str	r3, [r2, #16]
10003702:	e004      	b.n	1000370e <quorem+0xa8>
10003704:	682a      	ldr	r2, [r5, #0]
10003706:	2a00      	cmp	r2, #0
10003708:	d1f8      	bne.n	100036fc <quorem+0x96>
1000370a:	3b01      	subs	r3, #1
1000370c:	e7f2      	b.n	100036f4 <quorem+0x8e>
1000370e:	9802      	ldr	r0, [sp, #8]
10003710:	9907      	ldr	r1, [sp, #28]
10003712:	f001 f857 	bl	100047c4 <__mcmp>
10003716:	2800      	cmp	r0, #0
10003718:	db28      	blt.n	1000376c <quorem+0x106>
1000371a:	2000      	movs	r0, #0
1000371c:	9901      	ldr	r1, [sp, #4]
1000371e:	9a03      	ldr	r2, [sp, #12]
10003720:	3701      	adds	r7, #1
10003722:	ca20      	ldmia	r2!, {r5}
10003724:	880b      	ldrh	r3, [r1, #0]
10003726:	1818      	adds	r0, r3, r0
10003728:	b2ab      	uxth	r3, r5
1000372a:	1ac3      	subs	r3, r0, r3
1000372c:	6808      	ldr	r0, [r1, #0]
1000372e:	0c2d      	lsrs	r5, r5, #16
10003730:	0c00      	lsrs	r0, r0, #16
10003732:	1b45      	subs	r5, r0, r5
10003734:	141e      	asrs	r6, r3, #16
10003736:	19ad      	adds	r5, r5, r6
10003738:	1428      	asrs	r0, r5, #16
1000373a:	b29b      	uxth	r3, r3
1000373c:	042d      	lsls	r5, r5, #16
1000373e:	432b      	orrs	r3, r5
10003740:	c108      	stmia	r1!, {r3}
10003742:	9b04      	ldr	r3, [sp, #16]
10003744:	4293      	cmp	r3, r2
10003746:	d2ec      	bcs.n	10003722 <quorem+0xbc>
10003748:	9a01      	ldr	r2, [sp, #4]
1000374a:	00a3      	lsls	r3, r4, #2
1000374c:	18d3      	adds	r3, r2, r3
1000374e:	681a      	ldr	r2, [r3, #0]
10003750:	2a00      	cmp	r2, #0
10003752:	d10b      	bne.n	1000376c <quorem+0x106>
10003754:	9a01      	ldr	r2, [sp, #4]
10003756:	3b04      	subs	r3, #4
10003758:	4293      	cmp	r3, r2
1000375a:	d802      	bhi.n	10003762 <quorem+0xfc>
1000375c:	9b02      	ldr	r3, [sp, #8]
1000375e:	611c      	str	r4, [r3, #16]
10003760:	e004      	b.n	1000376c <quorem+0x106>
10003762:	681a      	ldr	r2, [r3, #0]
10003764:	2a00      	cmp	r2, #0
10003766:	d1f9      	bne.n	1000375c <quorem+0xf6>
10003768:	3c01      	subs	r4, #1
1000376a:	e7f3      	b.n	10003754 <quorem+0xee>
1000376c:	1c3e      	adds	r6, r7, #0
1000376e:	1c30      	adds	r0, r6, #0
10003770:	b009      	add	sp, #36	; 0x24
10003772:	bdf0      	pop	{r4, r5, r6, r7, pc}

10003774 <_dtoa_r>:
10003774:	b5f0      	push	{r4, r5, r6, r7, lr}
10003776:	1c16      	adds	r6, r2, #0
10003778:	1c1f      	adds	r7, r3, #0
1000377a:	6a44      	ldr	r4, [r0, #36]	; 0x24
1000377c:	b09b      	sub	sp, #108	; 0x6c
1000377e:	9008      	str	r0, [sp, #32]
10003780:	9d23      	ldr	r5, [sp, #140]	; 0x8c
10003782:	9606      	str	r6, [sp, #24]
10003784:	9707      	str	r7, [sp, #28]
10003786:	2c00      	cmp	r4, #0
10003788:	d108      	bne.n	1000379c <_dtoa_r+0x28>
1000378a:	2010      	movs	r0, #16
1000378c:	f000 fdf6 	bl	1000437c <malloc>
10003790:	9b08      	ldr	r3, [sp, #32]
10003792:	6258      	str	r0, [r3, #36]	; 0x24
10003794:	6044      	str	r4, [r0, #4]
10003796:	6084      	str	r4, [r0, #8]
10003798:	6004      	str	r4, [r0, #0]
1000379a:	60c4      	str	r4, [r0, #12]
1000379c:	9b08      	ldr	r3, [sp, #32]
1000379e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
100037a0:	6819      	ldr	r1, [r3, #0]
100037a2:	2900      	cmp	r1, #0
100037a4:	d00b      	beq.n	100037be <_dtoa_r+0x4a>
100037a6:	685a      	ldr	r2, [r3, #4]
100037a8:	2301      	movs	r3, #1
100037aa:	4093      	lsls	r3, r2
100037ac:	604a      	str	r2, [r1, #4]
100037ae:	608b      	str	r3, [r1, #8]
100037b0:	9808      	ldr	r0, [sp, #32]
100037b2:	f000 fe2e 	bl	10004412 <_Bfree>
100037b6:	2200      	movs	r2, #0
100037b8:	9b08      	ldr	r3, [sp, #32]
100037ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
100037bc:	601a      	str	r2, [r3, #0]
100037be:	9b07      	ldr	r3, [sp, #28]
100037c0:	2b00      	cmp	r3, #0
100037c2:	da05      	bge.n	100037d0 <_dtoa_r+0x5c>
100037c4:	2301      	movs	r3, #1
100037c6:	602b      	str	r3, [r5, #0]
100037c8:	007b      	lsls	r3, r7, #1
100037ca:	085b      	lsrs	r3, r3, #1
100037cc:	9307      	str	r3, [sp, #28]
100037ce:	e001      	b.n	100037d4 <_dtoa_r+0x60>
100037d0:	2300      	movs	r3, #0
100037d2:	602b      	str	r3, [r5, #0]
100037d4:	9c07      	ldr	r4, [sp, #28]
100037d6:	4bc6      	ldr	r3, [pc, #792]	; (10003af0 <_dtoa_r+0x37c>)
100037d8:	1c22      	adds	r2, r4, #0
100037da:	9317      	str	r3, [sp, #92]	; 0x5c
100037dc:	401a      	ands	r2, r3
100037de:	429a      	cmp	r2, r3
100037e0:	d119      	bne.n	10003816 <_dtoa_r+0xa2>
100037e2:	4bc4      	ldr	r3, [pc, #784]	; (10003af4 <_dtoa_r+0x380>)
100037e4:	9a22      	ldr	r2, [sp, #136]	; 0x88
100037e6:	6013      	str	r3, [r2, #0]
100037e8:	9a06      	ldr	r2, [sp, #24]
100037ea:	4bc3      	ldr	r3, [pc, #780]	; (10003af8 <_dtoa_r+0x384>)
100037ec:	2a00      	cmp	r2, #0
100037ee:	d102      	bne.n	100037f6 <_dtoa_r+0x82>
100037f0:	0324      	lsls	r4, r4, #12
100037f2:	d100      	bne.n	100037f6 <_dtoa_r+0x82>
100037f4:	4bc1      	ldr	r3, [pc, #772]	; (10003afc <_dtoa_r+0x388>)
100037f6:	9a24      	ldr	r2, [sp, #144]	; 0x90
100037f8:	1c18      	adds	r0, r3, #0
100037fa:	2a00      	cmp	r2, #0
100037fc:	d101      	bne.n	10003802 <_dtoa_r+0x8e>
100037fe:	f000 fdb6 	bl	1000436e <_dtoa_r+0xbfa>
10003802:	78d9      	ldrb	r1, [r3, #3]
10003804:	1cda      	adds	r2, r3, #3
10003806:	2900      	cmp	r1, #0
10003808:	d000      	beq.n	1000380c <_dtoa_r+0x98>
1000380a:	3205      	adds	r2, #5
1000380c:	9924      	ldr	r1, [sp, #144]	; 0x90
1000380e:	1c18      	adds	r0, r3, #0
10003810:	600a      	str	r2, [r1, #0]
10003812:	f000 fdac 	bl	1000436e <_dtoa_r+0xbfa>
10003816:	9e06      	ldr	r6, [sp, #24]
10003818:	9f07      	ldr	r7, [sp, #28]
1000381a:	2200      	movs	r2, #0
1000381c:	1c30      	adds	r0, r6, #0
1000381e:	1c39      	adds	r1, r7, #0
10003820:	2300      	movs	r3, #0
10003822:	f001 f943 	bl	10004aac <__aeabi_dcmpeq>
10003826:	1e05      	subs	r5, r0, #0
10003828:	d00e      	beq.n	10003848 <_dtoa_r+0xd4>
1000382a:	2301      	movs	r3, #1
1000382c:	9a22      	ldr	r2, [sp, #136]	; 0x88
1000382e:	6013      	str	r3, [r2, #0]
10003830:	4bb3      	ldr	r3, [pc, #716]	; (10003b00 <_dtoa_r+0x38c>)
10003832:	9a24      	ldr	r2, [sp, #144]	; 0x90
10003834:	1c18      	adds	r0, r3, #0
10003836:	2a00      	cmp	r2, #0
10003838:	d101      	bne.n	1000383e <_dtoa_r+0xca>
1000383a:	f000 fd98 	bl	1000436e <_dtoa_r+0xbfa>
1000383e:	4ab1      	ldr	r2, [pc, #708]	; (10003b04 <_dtoa_r+0x390>)
10003840:	9924      	ldr	r1, [sp, #144]	; 0x90
10003842:	600a      	str	r2, [r1, #0]
10003844:	f000 fd93 	bl	1000436e <_dtoa_r+0xbfa>
10003848:	ab19      	add	r3, sp, #100	; 0x64
1000384a:	9300      	str	r3, [sp, #0]
1000384c:	ab18      	add	r3, sp, #96	; 0x60
1000384e:	9301      	str	r3, [sp, #4]
10003850:	9808      	ldr	r0, [sp, #32]
10003852:	1c32      	adds	r2, r6, #0
10003854:	1c3b      	adds	r3, r7, #0
10003856:	f001 f83b 	bl	100048d0 <__d2b>
1000385a:	0061      	lsls	r1, r4, #1
1000385c:	900a      	str	r0, [sp, #40]	; 0x28
1000385e:	0d49      	lsrs	r1, r1, #21
10003860:	d009      	beq.n	10003876 <_dtoa_r+0x102>
10003862:	0338      	lsls	r0, r7, #12
10003864:	4ca8      	ldr	r4, [pc, #672]	; (10003b08 <_dtoa_r+0x394>)
10003866:	0b00      	lsrs	r0, r0, #12
10003868:	4304      	orrs	r4, r0
1000386a:	48a8      	ldr	r0, [pc, #672]	; (10003b0c <_dtoa_r+0x398>)
1000386c:	1c32      	adds	r2, r6, #0
1000386e:	1c23      	adds	r3, r4, #0
10003870:	180e      	adds	r6, r1, r0
10003872:	9516      	str	r5, [sp, #88]	; 0x58
10003874:	e01c      	b.n	100038b0 <_dtoa_r+0x13c>
10003876:	9b18      	ldr	r3, [sp, #96]	; 0x60
10003878:	9a19      	ldr	r2, [sp, #100]	; 0x64
1000387a:	189e      	adds	r6, r3, r2
1000387c:	4ba4      	ldr	r3, [pc, #656]	; (10003b10 <_dtoa_r+0x39c>)
1000387e:	429e      	cmp	r6, r3
10003880:	db09      	blt.n	10003896 <_dtoa_r+0x122>
10003882:	4ba4      	ldr	r3, [pc, #656]	; (10003b14 <_dtoa_r+0x3a0>)
10003884:	18f0      	adds	r0, r6, r3
10003886:	9b06      	ldr	r3, [sp, #24]
10003888:	40c3      	lsrs	r3, r0
1000388a:	1c18      	adds	r0, r3, #0
1000388c:	4ba2      	ldr	r3, [pc, #648]	; (10003b18 <_dtoa_r+0x3a4>)
1000388e:	1b9b      	subs	r3, r3, r6
10003890:	409c      	lsls	r4, r3
10003892:	4320      	orrs	r0, r4
10003894:	e004      	b.n	100038a0 <_dtoa_r+0x12c>
10003896:	48a1      	ldr	r0, [pc, #644]	; (10003b1c <_dtoa_r+0x3a8>)
10003898:	9b06      	ldr	r3, [sp, #24]
1000389a:	1b80      	subs	r0, r0, r6
1000389c:	4083      	lsls	r3, r0
1000389e:	1c18      	adds	r0, r3, #0
100038a0:	f002 ff1e 	bl	100066e0 <__aeabi_ui2d>
100038a4:	4c9e      	ldr	r4, [pc, #632]	; (10003b20 <_dtoa_r+0x3ac>)
100038a6:	1c02      	adds	r2, r0, #0
100038a8:	190b      	adds	r3, r1, r4
100038aa:	2101      	movs	r1, #1
100038ac:	3e01      	subs	r6, #1
100038ae:	9116      	str	r1, [sp, #88]	; 0x58
100038b0:	1c10      	adds	r0, r2, #0
100038b2:	1c19      	adds	r1, r3, #0
100038b4:	2200      	movs	r2, #0
100038b6:	4b9b      	ldr	r3, [pc, #620]	; (10003b24 <_dtoa_r+0x3b0>)
100038b8:	f002 fb26 	bl	10005f08 <__aeabi_dsub>
100038bc:	4a9a      	ldr	r2, [pc, #616]	; (10003b28 <_dtoa_r+0x3b4>)
100038be:	4b9b      	ldr	r3, [pc, #620]	; (10003b2c <_dtoa_r+0x3b8>)
100038c0:	f002 f888 	bl	100059d4 <__aeabi_dmul>
100038c4:	4a9a      	ldr	r2, [pc, #616]	; (10003b30 <_dtoa_r+0x3bc>)
100038c6:	4b9b      	ldr	r3, [pc, #620]	; (10003b34 <_dtoa_r+0x3c0>)
100038c8:	f001 f91e 	bl	10004b08 <__aeabi_dadd>
100038cc:	1c04      	adds	r4, r0, #0
100038ce:	1c30      	adds	r0, r6, #0
100038d0:	1c0d      	adds	r5, r1, #0
100038d2:	f002 fec9 	bl	10006668 <__aeabi_i2d>
100038d6:	4a98      	ldr	r2, [pc, #608]	; (10003b38 <_dtoa_r+0x3c4>)
100038d8:	4b98      	ldr	r3, [pc, #608]	; (10003b3c <_dtoa_r+0x3c8>)
100038da:	f002 f87b 	bl	100059d4 <__aeabi_dmul>
100038de:	1c02      	adds	r2, r0, #0
100038e0:	1c0b      	adds	r3, r1, #0
100038e2:	1c20      	adds	r0, r4, #0
100038e4:	1c29      	adds	r1, r5, #0
100038e6:	f001 f90f 	bl	10004b08 <__aeabi_dadd>
100038ea:	1c04      	adds	r4, r0, #0
100038ec:	1c0d      	adds	r5, r1, #0
100038ee:	f002 fe85 	bl	100065fc <__aeabi_d2iz>
100038f2:	1c29      	adds	r1, r5, #0
100038f4:	9003      	str	r0, [sp, #12]
100038f6:	2200      	movs	r2, #0
100038f8:	1c20      	adds	r0, r4, #0
100038fa:	2300      	movs	r3, #0
100038fc:	f001 f8dc 	bl	10004ab8 <__aeabi_dcmplt>
10003900:	2800      	cmp	r0, #0
10003902:	d00d      	beq.n	10003920 <_dtoa_r+0x1ac>
10003904:	9803      	ldr	r0, [sp, #12]
10003906:	f002 feaf 	bl	10006668 <__aeabi_i2d>
1000390a:	1c02      	adds	r2, r0, #0
1000390c:	1c0b      	adds	r3, r1, #0
1000390e:	1c20      	adds	r0, r4, #0
10003910:	1c29      	adds	r1, r5, #0
10003912:	f001 f8cb 	bl	10004aac <__aeabi_dcmpeq>
10003916:	4243      	negs	r3, r0
10003918:	4143      	adcs	r3, r0
1000391a:	9a03      	ldr	r2, [sp, #12]
1000391c:	1ad3      	subs	r3, r2, r3
1000391e:	9303      	str	r3, [sp, #12]
10003920:	2301      	movs	r3, #1
10003922:	9313      	str	r3, [sp, #76]	; 0x4c
10003924:	9b03      	ldr	r3, [sp, #12]
10003926:	2b16      	cmp	r3, #22
10003928:	d811      	bhi.n	1000394e <_dtoa_r+0x1da>
1000392a:	4a85      	ldr	r2, [pc, #532]	; (10003b40 <_dtoa_r+0x3cc>)
1000392c:	00db      	lsls	r3, r3, #3
1000392e:	18d3      	adds	r3, r2, r3
10003930:	6818      	ldr	r0, [r3, #0]
10003932:	6859      	ldr	r1, [r3, #4]
10003934:	9a06      	ldr	r2, [sp, #24]
10003936:	9b07      	ldr	r3, [sp, #28]
10003938:	f001 f8d2 	bl	10004ae0 <__aeabi_dcmpgt>
1000393c:	2800      	cmp	r0, #0
1000393e:	d005      	beq.n	1000394c <_dtoa_r+0x1d8>
10003940:	9b03      	ldr	r3, [sp, #12]
10003942:	3b01      	subs	r3, #1
10003944:	9303      	str	r3, [sp, #12]
10003946:	2300      	movs	r3, #0
10003948:	9313      	str	r3, [sp, #76]	; 0x4c
1000394a:	e000      	b.n	1000394e <_dtoa_r+0x1da>
1000394c:	9013      	str	r0, [sp, #76]	; 0x4c
1000394e:	9b18      	ldr	r3, [sp, #96]	; 0x60
10003950:	1b9e      	subs	r6, r3, r6
10003952:	2300      	movs	r3, #0
10003954:	930d      	str	r3, [sp, #52]	; 0x34
10003956:	3e01      	subs	r6, #1
10003958:	960e      	str	r6, [sp, #56]	; 0x38
1000395a:	d504      	bpl.n	10003966 <_dtoa_r+0x1f2>
1000395c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000395e:	425b      	negs	r3, r3
10003960:	930d      	str	r3, [sp, #52]	; 0x34
10003962:	2300      	movs	r3, #0
10003964:	930e      	str	r3, [sp, #56]	; 0x38
10003966:	9b03      	ldr	r3, [sp, #12]
10003968:	2b00      	cmp	r3, #0
1000396a:	db08      	blt.n	1000397e <_dtoa_r+0x20a>
1000396c:	9a03      	ldr	r2, [sp, #12]
1000396e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10003970:	4694      	mov	ip, r2
10003972:	4463      	add	r3, ip
10003974:	930e      	str	r3, [sp, #56]	; 0x38
10003976:	2300      	movs	r3, #0
10003978:	9212      	str	r2, [sp, #72]	; 0x48
1000397a:	930f      	str	r3, [sp, #60]	; 0x3c
1000397c:	e007      	b.n	1000398e <_dtoa_r+0x21a>
1000397e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10003980:	9a03      	ldr	r2, [sp, #12]
10003982:	1a9b      	subs	r3, r3, r2
10003984:	930d      	str	r3, [sp, #52]	; 0x34
10003986:	4253      	negs	r3, r2
10003988:	930f      	str	r3, [sp, #60]	; 0x3c
1000398a:	2300      	movs	r3, #0
1000398c:	9312      	str	r3, [sp, #72]	; 0x48
1000398e:	9b20      	ldr	r3, [sp, #128]	; 0x80
10003990:	2501      	movs	r5, #1
10003992:	2b09      	cmp	r3, #9
10003994:	d827      	bhi.n	100039e6 <_dtoa_r+0x272>
10003996:	2b05      	cmp	r3, #5
10003998:	dd02      	ble.n	100039a0 <_dtoa_r+0x22c>
1000399a:	2500      	movs	r5, #0
1000399c:	3b04      	subs	r3, #4
1000399e:	9320      	str	r3, [sp, #128]	; 0x80
100039a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
100039a2:	1e98      	subs	r0, r3, #2
100039a4:	2803      	cmp	r0, #3
100039a6:	d823      	bhi.n	100039f0 <_dtoa_r+0x27c>
100039a8:	f001 f866 	bl	10004a78 <__gnu_thumb1_case_uqi>
100039ac:	10040e02 	.word	0x10040e02
100039b0:	2300      	movs	r3, #0
100039b2:	e000      	b.n	100039b6 <_dtoa_r+0x242>
100039b4:	2301      	movs	r3, #1
100039b6:	9310      	str	r3, [sp, #64]	; 0x40
100039b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
100039ba:	2b00      	cmp	r3, #0
100039bc:	dc21      	bgt.n	10003a02 <_dtoa_r+0x28e>
100039be:	2301      	movs	r3, #1
100039c0:	930b      	str	r3, [sp, #44]	; 0x2c
100039c2:	9309      	str	r3, [sp, #36]	; 0x24
100039c4:	1c1a      	adds	r2, r3, #0
100039c6:	e01a      	b.n	100039fe <_dtoa_r+0x28a>
100039c8:	2300      	movs	r3, #0
100039ca:	e000      	b.n	100039ce <_dtoa_r+0x25a>
100039cc:	2301      	movs	r3, #1
100039ce:	9a03      	ldr	r2, [sp, #12]
100039d0:	9310      	str	r3, [sp, #64]	; 0x40
100039d2:	4694      	mov	ip, r2
100039d4:	9b21      	ldr	r3, [sp, #132]	; 0x84
100039d6:	4463      	add	r3, ip
100039d8:	930b      	str	r3, [sp, #44]	; 0x2c
100039da:	3301      	adds	r3, #1
100039dc:	9309      	str	r3, [sp, #36]	; 0x24
100039de:	2b00      	cmp	r3, #0
100039e0:	dc12      	bgt.n	10003a08 <_dtoa_r+0x294>
100039e2:	2301      	movs	r3, #1
100039e4:	e010      	b.n	10003a08 <_dtoa_r+0x294>
100039e6:	2300      	movs	r3, #0
100039e8:	9510      	str	r5, [sp, #64]	; 0x40
100039ea:	9320      	str	r3, [sp, #128]	; 0x80
100039ec:	3b01      	subs	r3, #1
100039ee:	e002      	b.n	100039f6 <_dtoa_r+0x282>
100039f0:	2301      	movs	r3, #1
100039f2:	9310      	str	r3, [sp, #64]	; 0x40
100039f4:	3b02      	subs	r3, #2
100039f6:	2200      	movs	r2, #0
100039f8:	930b      	str	r3, [sp, #44]	; 0x2c
100039fa:	9309      	str	r3, [sp, #36]	; 0x24
100039fc:	3313      	adds	r3, #19
100039fe:	9221      	str	r2, [sp, #132]	; 0x84
10003a00:	e002      	b.n	10003a08 <_dtoa_r+0x294>
10003a02:	9b21      	ldr	r3, [sp, #132]	; 0x84
10003a04:	930b      	str	r3, [sp, #44]	; 0x2c
10003a06:	9309      	str	r3, [sp, #36]	; 0x24
10003a08:	9a08      	ldr	r2, [sp, #32]
10003a0a:	6a54      	ldr	r4, [r2, #36]	; 0x24
10003a0c:	2200      	movs	r2, #0
10003a0e:	6062      	str	r2, [r4, #4]
10003a10:	3204      	adds	r2, #4
10003a12:	1c11      	adds	r1, r2, #0
10003a14:	3114      	adds	r1, #20
10003a16:	4299      	cmp	r1, r3
10003a18:	d804      	bhi.n	10003a24 <_dtoa_r+0x2b0>
10003a1a:	6861      	ldr	r1, [r4, #4]
10003a1c:	0052      	lsls	r2, r2, #1
10003a1e:	3101      	adds	r1, #1
10003a20:	6061      	str	r1, [r4, #4]
10003a22:	e7f6      	b.n	10003a12 <_dtoa_r+0x29e>
10003a24:	9808      	ldr	r0, [sp, #32]
10003a26:	6861      	ldr	r1, [r4, #4]
10003a28:	f000 fcbb 	bl	100043a2 <_Balloc>
10003a2c:	9b08      	ldr	r3, [sp, #32]
10003a2e:	6020      	str	r0, [r4, #0]
10003a30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
10003a32:	681b      	ldr	r3, [r3, #0]
10003a34:	930c      	str	r3, [sp, #48]	; 0x30
10003a36:	9b09      	ldr	r3, [sp, #36]	; 0x24
10003a38:	2b0e      	cmp	r3, #14
10003a3a:	d900      	bls.n	10003a3e <_dtoa_r+0x2ca>
10003a3c:	e188      	b.n	10003d50 <_dtoa_r+0x5dc>
10003a3e:	2d00      	cmp	r5, #0
10003a40:	d100      	bne.n	10003a44 <_dtoa_r+0x2d0>
10003a42:	e185      	b.n	10003d50 <_dtoa_r+0x5dc>
10003a44:	9b06      	ldr	r3, [sp, #24]
10003a46:	9c07      	ldr	r4, [sp, #28]
10003a48:	9314      	str	r3, [sp, #80]	; 0x50
10003a4a:	9415      	str	r4, [sp, #84]	; 0x54
10003a4c:	9b03      	ldr	r3, [sp, #12]
10003a4e:	2b00      	cmp	r3, #0
10003a50:	dd30      	ble.n	10003ab4 <_dtoa_r+0x340>
10003a52:	220f      	movs	r2, #15
10003a54:	493a      	ldr	r1, [pc, #232]	; (10003b40 <_dtoa_r+0x3cc>)
10003a56:	4013      	ands	r3, r2
10003a58:	00db      	lsls	r3, r3, #3
10003a5a:	18cb      	adds	r3, r1, r3
10003a5c:	685c      	ldr	r4, [r3, #4]
10003a5e:	681b      	ldr	r3, [r3, #0]
10003a60:	9304      	str	r3, [sp, #16]
10003a62:	9405      	str	r4, [sp, #20]
10003a64:	9b03      	ldr	r3, [sp, #12]
10003a66:	2702      	movs	r7, #2
10003a68:	111d      	asrs	r5, r3, #4
10003a6a:	06eb      	lsls	r3, r5, #27
10003a6c:	d50a      	bpl.n	10003a84 <_dtoa_r+0x310>
10003a6e:	9814      	ldr	r0, [sp, #80]	; 0x50
10003a70:	9915      	ldr	r1, [sp, #84]	; 0x54
10003a72:	4b34      	ldr	r3, [pc, #208]	; (10003b44 <_dtoa_r+0x3d0>)
10003a74:	4015      	ands	r5, r2
10003a76:	6a1a      	ldr	r2, [r3, #32]
10003a78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
10003a7a:	f001 fb6d 	bl	10005158 <__aeabi_ddiv>
10003a7e:	9006      	str	r0, [sp, #24]
10003a80:	9107      	str	r1, [sp, #28]
10003a82:	3701      	adds	r7, #1
10003a84:	4c2f      	ldr	r4, [pc, #188]	; (10003b44 <_dtoa_r+0x3d0>)
10003a86:	2d00      	cmp	r5, #0
10003a88:	d00d      	beq.n	10003aa6 <_dtoa_r+0x332>
10003a8a:	07eb      	lsls	r3, r5, #31
10003a8c:	d508      	bpl.n	10003aa0 <_dtoa_r+0x32c>
10003a8e:	9804      	ldr	r0, [sp, #16]
10003a90:	9905      	ldr	r1, [sp, #20]
10003a92:	6822      	ldr	r2, [r4, #0]
10003a94:	6863      	ldr	r3, [r4, #4]
10003a96:	f001 ff9d 	bl	100059d4 <__aeabi_dmul>
10003a9a:	9004      	str	r0, [sp, #16]
10003a9c:	9105      	str	r1, [sp, #20]
10003a9e:	3701      	adds	r7, #1
10003aa0:	106d      	asrs	r5, r5, #1
10003aa2:	3408      	adds	r4, #8
10003aa4:	e7ef      	b.n	10003a86 <_dtoa_r+0x312>
10003aa6:	9806      	ldr	r0, [sp, #24]
10003aa8:	9907      	ldr	r1, [sp, #28]
10003aaa:	9a04      	ldr	r2, [sp, #16]
10003aac:	9b05      	ldr	r3, [sp, #20]
10003aae:	f001 fb53 	bl	10005158 <__aeabi_ddiv>
10003ab2:	e049      	b.n	10003b48 <_dtoa_r+0x3d4>
10003ab4:	9b03      	ldr	r3, [sp, #12]
10003ab6:	2702      	movs	r7, #2
10003ab8:	425d      	negs	r5, r3
10003aba:	2d00      	cmp	r5, #0
10003abc:	d046      	beq.n	10003b4c <_dtoa_r+0x3d8>
10003abe:	9814      	ldr	r0, [sp, #80]	; 0x50
10003ac0:	9915      	ldr	r1, [sp, #84]	; 0x54
10003ac2:	230f      	movs	r3, #15
10003ac4:	4a1e      	ldr	r2, [pc, #120]	; (10003b40 <_dtoa_r+0x3cc>)
10003ac6:	402b      	ands	r3, r5
10003ac8:	00db      	lsls	r3, r3, #3
10003aca:	18d3      	adds	r3, r2, r3
10003acc:	681a      	ldr	r2, [r3, #0]
10003ace:	685b      	ldr	r3, [r3, #4]
10003ad0:	f001 ff80 	bl	100059d4 <__aeabi_dmul>
10003ad4:	4c1b      	ldr	r4, [pc, #108]	; (10003b44 <_dtoa_r+0x3d0>)
10003ad6:	112d      	asrs	r5, r5, #4
10003ad8:	2d00      	cmp	r5, #0
10003ada:	d035      	beq.n	10003b48 <_dtoa_r+0x3d4>
10003adc:	07eb      	lsls	r3, r5, #31
10003ade:	d504      	bpl.n	10003aea <_dtoa_r+0x376>
10003ae0:	6822      	ldr	r2, [r4, #0]
10003ae2:	6863      	ldr	r3, [r4, #4]
10003ae4:	3701      	adds	r7, #1
10003ae6:	f001 ff75 	bl	100059d4 <__aeabi_dmul>
10003aea:	106d      	asrs	r5, r5, #1
10003aec:	3408      	adds	r4, #8
10003aee:	e7f3      	b.n	10003ad8 <_dtoa_r+0x364>
10003af0:	7ff00000 	.word	0x7ff00000
10003af4:	0000270f 	.word	0x0000270f
10003af8:	10006849 	.word	0x10006849
10003afc:	10006840 	.word	0x10006840
10003b00:	1000683e 	.word	0x1000683e
10003b04:	1000683f 	.word	0x1000683f
10003b08:	3ff00000 	.word	0x3ff00000
10003b0c:	fffffc01 	.word	0xfffffc01
10003b10:	fffffbef 	.word	0xfffffbef
10003b14:	00000412 	.word	0x00000412
10003b18:	fffffc0e 	.word	0xfffffc0e
10003b1c:	fffffbee 	.word	0xfffffbee
10003b20:	fe100000 	.word	0xfe100000
10003b24:	3ff80000 	.word	0x3ff80000
10003b28:	636f4361 	.word	0x636f4361
10003b2c:	3fd287a7 	.word	0x3fd287a7
10003b30:	8b60c8b3 	.word	0x8b60c8b3
10003b34:	3fc68a28 	.word	0x3fc68a28
10003b38:	509f79fb 	.word	0x509f79fb
10003b3c:	3fd34413 	.word	0x3fd34413
10003b40:	10006858 	.word	0x10006858
10003b44:	10006920 	.word	0x10006920
10003b48:	9006      	str	r0, [sp, #24]
10003b4a:	9107      	str	r1, [sp, #28]
10003b4c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
10003b4e:	2b00      	cmp	r3, #0
10003b50:	d01e      	beq.n	10003b90 <_dtoa_r+0x41c>
10003b52:	9c06      	ldr	r4, [sp, #24]
10003b54:	9d07      	ldr	r5, [sp, #28]
10003b56:	2200      	movs	r2, #0
10003b58:	1c20      	adds	r0, r4, #0
10003b5a:	1c29      	adds	r1, r5, #0
10003b5c:	4bce      	ldr	r3, [pc, #824]	; (10003e98 <_dtoa_r+0x724>)
10003b5e:	f000 ffab 	bl	10004ab8 <__aeabi_dcmplt>
10003b62:	2800      	cmp	r0, #0
10003b64:	d014      	beq.n	10003b90 <_dtoa_r+0x41c>
10003b66:	9b09      	ldr	r3, [sp, #36]	; 0x24
10003b68:	2b00      	cmp	r3, #0
10003b6a:	d011      	beq.n	10003b90 <_dtoa_r+0x41c>
10003b6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10003b6e:	2b00      	cmp	r3, #0
10003b70:	dc00      	bgt.n	10003b74 <_dtoa_r+0x400>
10003b72:	e0e9      	b.n	10003d48 <_dtoa_r+0x5d4>
10003b74:	9b03      	ldr	r3, [sp, #12]
10003b76:	1c29      	adds	r1, r5, #0
10003b78:	3b01      	subs	r3, #1
10003b7a:	9311      	str	r3, [sp, #68]	; 0x44
10003b7c:	1c20      	adds	r0, r4, #0
10003b7e:	2200      	movs	r2, #0
10003b80:	4bc6      	ldr	r3, [pc, #792]	; (10003e9c <_dtoa_r+0x728>)
10003b82:	f001 ff27 	bl	100059d4 <__aeabi_dmul>
10003b86:	3701      	adds	r7, #1
10003b88:	9006      	str	r0, [sp, #24]
10003b8a:	9107      	str	r1, [sp, #28]
10003b8c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
10003b8e:	e002      	b.n	10003b96 <_dtoa_r+0x422>
10003b90:	9b03      	ldr	r3, [sp, #12]
10003b92:	9d09      	ldr	r5, [sp, #36]	; 0x24
10003b94:	9311      	str	r3, [sp, #68]	; 0x44
10003b96:	1c38      	adds	r0, r7, #0
10003b98:	9b06      	ldr	r3, [sp, #24]
10003b9a:	9c07      	ldr	r4, [sp, #28]
10003b9c:	9304      	str	r3, [sp, #16]
10003b9e:	9405      	str	r4, [sp, #20]
10003ba0:	f002 fd62 	bl	10006668 <__aeabi_i2d>
10003ba4:	9a04      	ldr	r2, [sp, #16]
10003ba6:	9b05      	ldr	r3, [sp, #20]
10003ba8:	f001 ff14 	bl	100059d4 <__aeabi_dmul>
10003bac:	2200      	movs	r2, #0
10003bae:	4bbc      	ldr	r3, [pc, #752]	; (10003ea0 <_dtoa_r+0x72c>)
10003bb0:	f000 ffaa 	bl	10004b08 <__aeabi_dadd>
10003bb4:	9006      	str	r0, [sp, #24]
10003bb6:	9107      	str	r1, [sp, #28]
10003bb8:	9e06      	ldr	r6, [sp, #24]
10003bba:	9f07      	ldr	r7, [sp, #28]
10003bbc:	9b07      	ldr	r3, [sp, #28]
10003bbe:	4ab9      	ldr	r2, [pc, #740]	; (10003ea4 <_dtoa_r+0x730>)
10003bc0:	189c      	adds	r4, r3, r2
10003bc2:	2d00      	cmp	r5, #0
10003bc4:	d11c      	bne.n	10003c00 <_dtoa_r+0x48c>
10003bc6:	9804      	ldr	r0, [sp, #16]
10003bc8:	9905      	ldr	r1, [sp, #20]
10003bca:	2200      	movs	r2, #0
10003bcc:	4bb6      	ldr	r3, [pc, #728]	; (10003ea8 <_dtoa_r+0x734>)
10003bce:	f002 f99b 	bl	10005f08 <__aeabi_dsub>
10003bd2:	1c32      	adds	r2, r6, #0
10003bd4:	1c23      	adds	r3, r4, #0
10003bd6:	9004      	str	r0, [sp, #16]
10003bd8:	9105      	str	r1, [sp, #20]
10003bda:	f000 ff81 	bl	10004ae0 <__aeabi_dcmpgt>
10003bde:	2800      	cmp	r0, #0
10003be0:	d000      	beq.n	10003be4 <_dtoa_r+0x470>
10003be2:	e263      	b.n	100040ac <_dtoa_r+0x938>
10003be4:	9804      	ldr	r0, [sp, #16]
10003be6:	9905      	ldr	r1, [sp, #20]
10003be8:	1c32      	adds	r2, r6, #0
10003bea:	4eb0      	ldr	r6, [pc, #704]	; (10003eac <_dtoa_r+0x738>)
10003bec:	9c07      	ldr	r4, [sp, #28]
10003bee:	46b4      	mov	ip, r6
10003bf0:	4464      	add	r4, ip
10003bf2:	1c23      	adds	r3, r4, #0
10003bf4:	f000 ff60 	bl	10004ab8 <__aeabi_dcmplt>
10003bf8:	2800      	cmp	r0, #0
10003bfa:	d000      	beq.n	10003bfe <_dtoa_r+0x48a>
10003bfc:	e24c      	b.n	10004098 <_dtoa_r+0x924>
10003bfe:	e0a3      	b.n	10003d48 <_dtoa_r+0x5d4>
10003c00:	4aab      	ldr	r2, [pc, #684]	; (10003eb0 <_dtoa_r+0x73c>)
10003c02:	1e6b      	subs	r3, r5, #1
10003c04:	9910      	ldr	r1, [sp, #64]	; 0x40
10003c06:	00db      	lsls	r3, r3, #3
10003c08:	18d3      	adds	r3, r2, r3
10003c0a:	2900      	cmp	r1, #0
10003c0c:	d04e      	beq.n	10003cac <_dtoa_r+0x538>
10003c0e:	681a      	ldr	r2, [r3, #0]
10003c10:	685b      	ldr	r3, [r3, #4]
10003c12:	2000      	movs	r0, #0
10003c14:	49a7      	ldr	r1, [pc, #668]	; (10003eb4 <_dtoa_r+0x740>)
10003c16:	f001 fa9f 	bl	10005158 <__aeabi_ddiv>
10003c1a:	1c32      	adds	r2, r6, #0
10003c1c:	1c23      	adds	r3, r4, #0
10003c1e:	f002 f973 	bl	10005f08 <__aeabi_dsub>
10003c22:	9e04      	ldr	r6, [sp, #16]
10003c24:	9f05      	ldr	r7, [sp, #20]
10003c26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10003c28:	9006      	str	r0, [sp, #24]
10003c2a:	9107      	str	r1, [sp, #28]
10003c2c:	9304      	str	r3, [sp, #16]
10003c2e:	1c39      	adds	r1, r7, #0
10003c30:	1c30      	adds	r0, r6, #0
10003c32:	f002 fce3 	bl	100065fc <__aeabi_d2iz>
10003c36:	1c04      	adds	r4, r0, #0
10003c38:	f002 fd16 	bl	10006668 <__aeabi_i2d>
10003c3c:	1c02      	adds	r2, r0, #0
10003c3e:	1c0b      	adds	r3, r1, #0
10003c40:	1c30      	adds	r0, r6, #0
10003c42:	1c39      	adds	r1, r7, #0
10003c44:	f002 f960 	bl	10005f08 <__aeabi_dsub>
10003c48:	9b04      	ldr	r3, [sp, #16]
10003c4a:	3430      	adds	r4, #48	; 0x30
10003c4c:	3301      	adds	r3, #1
10003c4e:	9304      	str	r3, [sp, #16]
10003c50:	3b01      	subs	r3, #1
10003c52:	701c      	strb	r4, [r3, #0]
10003c54:	9a06      	ldr	r2, [sp, #24]
10003c56:	9b07      	ldr	r3, [sp, #28]
10003c58:	1c06      	adds	r6, r0, #0
10003c5a:	1c0f      	adds	r7, r1, #0
10003c5c:	f000 ff2c 	bl	10004ab8 <__aeabi_dcmplt>
10003c60:	2800      	cmp	r0, #0
10003c62:	d000      	beq.n	10003c66 <_dtoa_r+0x4f2>
10003c64:	e361      	b.n	1000432a <_dtoa_r+0xbb6>
10003c66:	1c32      	adds	r2, r6, #0
10003c68:	1c3b      	adds	r3, r7, #0
10003c6a:	2000      	movs	r0, #0
10003c6c:	498a      	ldr	r1, [pc, #552]	; (10003e98 <_dtoa_r+0x724>)
10003c6e:	f002 f94b 	bl	10005f08 <__aeabi_dsub>
10003c72:	9a06      	ldr	r2, [sp, #24]
10003c74:	9b07      	ldr	r3, [sp, #28]
10003c76:	f000 ff1f 	bl	10004ab8 <__aeabi_dcmplt>
10003c7a:	2800      	cmp	r0, #0
10003c7c:	d000      	beq.n	10003c80 <_dtoa_r+0x50c>
10003c7e:	e0cd      	b.n	10003e1c <_dtoa_r+0x6a8>
10003c80:	9b04      	ldr	r3, [sp, #16]
10003c82:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10003c84:	1a9b      	subs	r3, r3, r2
10003c86:	42ab      	cmp	r3, r5
10003c88:	da5e      	bge.n	10003d48 <_dtoa_r+0x5d4>
10003c8a:	9806      	ldr	r0, [sp, #24]
10003c8c:	9907      	ldr	r1, [sp, #28]
10003c8e:	2200      	movs	r2, #0
10003c90:	4b82      	ldr	r3, [pc, #520]	; (10003e9c <_dtoa_r+0x728>)
10003c92:	f001 fe9f 	bl	100059d4 <__aeabi_dmul>
10003c96:	2200      	movs	r2, #0
10003c98:	9006      	str	r0, [sp, #24]
10003c9a:	9107      	str	r1, [sp, #28]
10003c9c:	4b7f      	ldr	r3, [pc, #508]	; (10003e9c <_dtoa_r+0x728>)
10003c9e:	1c30      	adds	r0, r6, #0
10003ca0:	1c39      	adds	r1, r7, #0
10003ca2:	f001 fe97 	bl	100059d4 <__aeabi_dmul>
10003ca6:	1c06      	adds	r6, r0, #0
10003ca8:	1c0f      	adds	r7, r1, #0
10003caa:	e7c0      	b.n	10003c2e <_dtoa_r+0x4ba>
10003cac:	6818      	ldr	r0, [r3, #0]
10003cae:	6859      	ldr	r1, [r3, #4]
10003cb0:	1c32      	adds	r2, r6, #0
10003cb2:	1c23      	adds	r3, r4, #0
10003cb4:	f001 fe8e 	bl	100059d4 <__aeabi_dmul>
10003cb8:	9e04      	ldr	r6, [sp, #16]
10003cba:	9f05      	ldr	r7, [sp, #20]
10003cbc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
10003cbe:	9006      	str	r0, [sp, #24]
10003cc0:	9107      	str	r1, [sp, #28]
10003cc2:	1963      	adds	r3, r4, r5
10003cc4:	9304      	str	r3, [sp, #16]
10003cc6:	1c39      	adds	r1, r7, #0
10003cc8:	1c30      	adds	r0, r6, #0
10003cca:	f002 fc97 	bl	100065fc <__aeabi_d2iz>
10003cce:	1c05      	adds	r5, r0, #0
10003cd0:	f002 fcca 	bl	10006668 <__aeabi_i2d>
10003cd4:	1c0b      	adds	r3, r1, #0
10003cd6:	1c02      	adds	r2, r0, #0
10003cd8:	1c39      	adds	r1, r7, #0
10003cda:	1c30      	adds	r0, r6, #0
10003cdc:	f002 f914 	bl	10005f08 <__aeabi_dsub>
10003ce0:	3530      	adds	r5, #48	; 0x30
10003ce2:	9b04      	ldr	r3, [sp, #16]
10003ce4:	7025      	strb	r5, [r4, #0]
10003ce6:	3401      	adds	r4, #1
10003ce8:	1c06      	adds	r6, r0, #0
10003cea:	1c0f      	adds	r7, r1, #0
10003cec:	42a3      	cmp	r3, r4
10003cee:	d124      	bne.n	10003d3a <_dtoa_r+0x5c6>
10003cf0:	2200      	movs	r2, #0
10003cf2:	9806      	ldr	r0, [sp, #24]
10003cf4:	9907      	ldr	r1, [sp, #28]
10003cf6:	4b6f      	ldr	r3, [pc, #444]	; (10003eb4 <_dtoa_r+0x740>)
10003cf8:	f000 ff06 	bl	10004b08 <__aeabi_dadd>
10003cfc:	1c02      	adds	r2, r0, #0
10003cfe:	1c0b      	adds	r3, r1, #0
10003d00:	1c30      	adds	r0, r6, #0
10003d02:	1c39      	adds	r1, r7, #0
10003d04:	f000 feec 	bl	10004ae0 <__aeabi_dcmpgt>
10003d08:	2800      	cmp	r0, #0
10003d0a:	d000      	beq.n	10003d0e <_dtoa_r+0x59a>
10003d0c:	e086      	b.n	10003e1c <_dtoa_r+0x6a8>
10003d0e:	9a06      	ldr	r2, [sp, #24]
10003d10:	9b07      	ldr	r3, [sp, #28]
10003d12:	2000      	movs	r0, #0
10003d14:	4967      	ldr	r1, [pc, #412]	; (10003eb4 <_dtoa_r+0x740>)
10003d16:	f002 f8f7 	bl	10005f08 <__aeabi_dsub>
10003d1a:	1c02      	adds	r2, r0, #0
10003d1c:	1c0b      	adds	r3, r1, #0
10003d1e:	1c30      	adds	r0, r6, #0
10003d20:	1c39      	adds	r1, r7, #0
10003d22:	f000 fec9 	bl	10004ab8 <__aeabi_dcmplt>
10003d26:	2800      	cmp	r0, #0
10003d28:	d00e      	beq.n	10003d48 <_dtoa_r+0x5d4>
10003d2a:	9b04      	ldr	r3, [sp, #16]
10003d2c:	3b01      	subs	r3, #1
10003d2e:	781a      	ldrb	r2, [r3, #0]
10003d30:	2a30      	cmp	r2, #48	; 0x30
10003d32:	d000      	beq.n	10003d36 <_dtoa_r+0x5c2>
10003d34:	e2f9      	b.n	1000432a <_dtoa_r+0xbb6>
10003d36:	9304      	str	r3, [sp, #16]
10003d38:	e7f7      	b.n	10003d2a <_dtoa_r+0x5b6>
10003d3a:	2200      	movs	r2, #0
10003d3c:	4b57      	ldr	r3, [pc, #348]	; (10003e9c <_dtoa_r+0x728>)
10003d3e:	f001 fe49 	bl	100059d4 <__aeabi_dmul>
10003d42:	1c06      	adds	r6, r0, #0
10003d44:	1c0f      	adds	r7, r1, #0
10003d46:	e7be      	b.n	10003cc6 <_dtoa_r+0x552>
10003d48:	9b14      	ldr	r3, [sp, #80]	; 0x50
10003d4a:	9c15      	ldr	r4, [sp, #84]	; 0x54
10003d4c:	9306      	str	r3, [sp, #24]
10003d4e:	9407      	str	r4, [sp, #28]
10003d50:	9b19      	ldr	r3, [sp, #100]	; 0x64
10003d52:	2b00      	cmp	r3, #0
10003d54:	da00      	bge.n	10003d58 <_dtoa_r+0x5e4>
10003d56:	e086      	b.n	10003e66 <_dtoa_r+0x6f2>
10003d58:	9a03      	ldr	r2, [sp, #12]
10003d5a:	2a0e      	cmp	r2, #14
10003d5c:	dd00      	ble.n	10003d60 <_dtoa_r+0x5ec>
10003d5e:	e082      	b.n	10003e66 <_dtoa_r+0x6f2>
10003d60:	00d3      	lsls	r3, r2, #3
10003d62:	4a53      	ldr	r2, [pc, #332]	; (10003eb0 <_dtoa_r+0x73c>)
10003d64:	18d3      	adds	r3, r2, r3
10003d66:	681e      	ldr	r6, [r3, #0]
10003d68:	685f      	ldr	r7, [r3, #4]
10003d6a:	9b21      	ldr	r3, [sp, #132]	; 0x84
10003d6c:	2b00      	cmp	r3, #0
10003d6e:	da14      	bge.n	10003d9a <_dtoa_r+0x626>
10003d70:	9b09      	ldr	r3, [sp, #36]	; 0x24
10003d72:	2b00      	cmp	r3, #0
10003d74:	dc11      	bgt.n	10003d9a <_dtoa_r+0x626>
10003d76:	d000      	beq.n	10003d7a <_dtoa_r+0x606>
10003d78:	e190      	b.n	1000409c <_dtoa_r+0x928>
10003d7a:	1c30      	adds	r0, r6, #0
10003d7c:	1c39      	adds	r1, r7, #0
10003d7e:	2200      	movs	r2, #0
10003d80:	4b49      	ldr	r3, [pc, #292]	; (10003ea8 <_dtoa_r+0x734>)
10003d82:	f001 fe27 	bl	100059d4 <__aeabi_dmul>
10003d86:	9a06      	ldr	r2, [sp, #24]
10003d88:	9b07      	ldr	r3, [sp, #28]
10003d8a:	f000 feb3 	bl	10004af4 <__aeabi_dcmpge>
10003d8e:	9f09      	ldr	r7, [sp, #36]	; 0x24
10003d90:	1c3e      	adds	r6, r7, #0
10003d92:	2800      	cmp	r0, #0
10003d94:	d000      	beq.n	10003d98 <_dtoa_r+0x624>
10003d96:	e183      	b.n	100040a0 <_dtoa_r+0x92c>
10003d98:	e18c      	b.n	100040b4 <_dtoa_r+0x940>
10003d9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10003d9c:	9c06      	ldr	r4, [sp, #24]
10003d9e:	9d07      	ldr	r5, [sp, #28]
10003da0:	9304      	str	r3, [sp, #16]
10003da2:	1c32      	adds	r2, r6, #0
10003da4:	1c3b      	adds	r3, r7, #0
10003da6:	1c20      	adds	r0, r4, #0
10003da8:	1c29      	adds	r1, r5, #0
10003daa:	f001 f9d5 	bl	10005158 <__aeabi_ddiv>
10003dae:	f002 fc25 	bl	100065fc <__aeabi_d2iz>
10003db2:	9006      	str	r0, [sp, #24]
10003db4:	f002 fc58 	bl	10006668 <__aeabi_i2d>
10003db8:	1c32      	adds	r2, r6, #0
10003dba:	1c3b      	adds	r3, r7, #0
10003dbc:	f001 fe0a 	bl	100059d4 <__aeabi_dmul>
10003dc0:	1c02      	adds	r2, r0, #0
10003dc2:	1c0b      	adds	r3, r1, #0
10003dc4:	1c20      	adds	r0, r4, #0
10003dc6:	1c29      	adds	r1, r5, #0
10003dc8:	f002 f89e 	bl	10005f08 <__aeabi_dsub>
10003dcc:	1c0b      	adds	r3, r1, #0
10003dce:	9904      	ldr	r1, [sp, #16]
10003dd0:	1c02      	adds	r2, r0, #0
10003dd2:	9806      	ldr	r0, [sp, #24]
10003dd4:	3101      	adds	r1, #1
10003dd6:	9104      	str	r1, [sp, #16]
10003dd8:	3030      	adds	r0, #48	; 0x30
10003dda:	3901      	subs	r1, #1
10003ddc:	7008      	strb	r0, [r1, #0]
10003dde:	980c      	ldr	r0, [sp, #48]	; 0x30
10003de0:	9904      	ldr	r1, [sp, #16]
10003de2:	1a09      	subs	r1, r1, r0
10003de4:	9809      	ldr	r0, [sp, #36]	; 0x24
10003de6:	4281      	cmp	r1, r0
10003de8:	d12e      	bne.n	10003e48 <_dtoa_r+0x6d4>
10003dea:	1c10      	adds	r0, r2, #0
10003dec:	1c19      	adds	r1, r3, #0
10003dee:	f000 fe8b 	bl	10004b08 <__aeabi_dadd>
10003df2:	1c32      	adds	r2, r6, #0
10003df4:	1c3b      	adds	r3, r7, #0
10003df6:	1c04      	adds	r4, r0, #0
10003df8:	1c0d      	adds	r5, r1, #0
10003dfa:	f000 fe71 	bl	10004ae0 <__aeabi_dcmpgt>
10003dfe:	2800      	cmp	r0, #0
10003e00:	d110      	bne.n	10003e24 <_dtoa_r+0x6b0>
10003e02:	1c20      	adds	r0, r4, #0
10003e04:	1c29      	adds	r1, r5, #0
10003e06:	1c32      	adds	r2, r6, #0
10003e08:	1c3b      	adds	r3, r7, #0
10003e0a:	f000 fe4f 	bl	10004aac <__aeabi_dcmpeq>
10003e0e:	2800      	cmp	r0, #0
10003e10:	d100      	bne.n	10003e14 <_dtoa_r+0x6a0>
10003e12:	e28c      	b.n	1000432e <_dtoa_r+0xbba>
10003e14:	9b06      	ldr	r3, [sp, #24]
10003e16:	07db      	lsls	r3, r3, #31
10003e18:	d404      	bmi.n	10003e24 <_dtoa_r+0x6b0>
10003e1a:	e288      	b.n	1000432e <_dtoa_r+0xbba>
10003e1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
10003e1e:	9303      	str	r3, [sp, #12]
10003e20:	e000      	b.n	10003e24 <_dtoa_r+0x6b0>
10003e22:	9304      	str	r3, [sp, #16]
10003e24:	9b04      	ldr	r3, [sp, #16]
10003e26:	3b01      	subs	r3, #1
10003e28:	781a      	ldrb	r2, [r3, #0]
10003e2a:	2a39      	cmp	r2, #57	; 0x39
10003e2c:	d108      	bne.n	10003e40 <_dtoa_r+0x6cc>
10003e2e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10003e30:	4293      	cmp	r3, r2
10003e32:	d1f6      	bne.n	10003e22 <_dtoa_r+0x6ae>
10003e34:	9b03      	ldr	r3, [sp, #12]
10003e36:	3301      	adds	r3, #1
10003e38:	9303      	str	r3, [sp, #12]
10003e3a:	2330      	movs	r3, #48	; 0x30
10003e3c:	7013      	strb	r3, [r2, #0]
10003e3e:	1c13      	adds	r3, r2, #0
10003e40:	781a      	ldrb	r2, [r3, #0]
10003e42:	3201      	adds	r2, #1
10003e44:	701a      	strb	r2, [r3, #0]
10003e46:	e272      	b.n	1000432e <_dtoa_r+0xbba>
10003e48:	1c10      	adds	r0, r2, #0
10003e4a:	1c19      	adds	r1, r3, #0
10003e4c:	2200      	movs	r2, #0
10003e4e:	4b13      	ldr	r3, [pc, #76]	; (10003e9c <_dtoa_r+0x728>)
10003e50:	f001 fdc0 	bl	100059d4 <__aeabi_dmul>
10003e54:	2200      	movs	r2, #0
10003e56:	2300      	movs	r3, #0
10003e58:	1c04      	adds	r4, r0, #0
10003e5a:	1c0d      	adds	r5, r1, #0
10003e5c:	f000 fe26 	bl	10004aac <__aeabi_dcmpeq>
10003e60:	2800      	cmp	r0, #0
10003e62:	d09e      	beq.n	10003da2 <_dtoa_r+0x62e>
10003e64:	e263      	b.n	1000432e <_dtoa_r+0xbba>
10003e66:	9a10      	ldr	r2, [sp, #64]	; 0x40
10003e68:	2a00      	cmp	r2, #0
10003e6a:	d044      	beq.n	10003ef6 <_dtoa_r+0x782>
10003e6c:	9a20      	ldr	r2, [sp, #128]	; 0x80
10003e6e:	2a01      	cmp	r2, #1
10003e70:	dc0b      	bgt.n	10003e8a <_dtoa_r+0x716>
10003e72:	9a16      	ldr	r2, [sp, #88]	; 0x58
10003e74:	2a00      	cmp	r2, #0
10003e76:	d002      	beq.n	10003e7e <_dtoa_r+0x70a>
10003e78:	4a0f      	ldr	r2, [pc, #60]	; (10003eb8 <_dtoa_r+0x744>)
10003e7a:	189b      	adds	r3, r3, r2
10003e7c:	e002      	b.n	10003e84 <_dtoa_r+0x710>
10003e7e:	2336      	movs	r3, #54	; 0x36
10003e80:	9a18      	ldr	r2, [sp, #96]	; 0x60
10003e82:	1a9b      	subs	r3, r3, r2
10003e84:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
10003e86:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10003e88:	e029      	b.n	10003ede <_dtoa_r+0x76a>
10003e8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
10003e8c:	1e5d      	subs	r5, r3, #1
10003e8e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10003e90:	42ab      	cmp	r3, r5
10003e92:	db13      	blt.n	10003ebc <_dtoa_r+0x748>
10003e94:	1b5d      	subs	r5, r3, r5
10003e96:	e018      	b.n	10003eca <_dtoa_r+0x756>
10003e98:	3ff00000 	.word	0x3ff00000
10003e9c:	40240000 	.word	0x40240000
10003ea0:	401c0000 	.word	0x401c0000
10003ea4:	fcc00000 	.word	0xfcc00000
10003ea8:	40140000 	.word	0x40140000
10003eac:	7cc00000 	.word	0x7cc00000
10003eb0:	10006858 	.word	0x10006858
10003eb4:	3fe00000 	.word	0x3fe00000
10003eb8:	00000433 	.word	0x00000433
10003ebc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10003ebe:	950f      	str	r5, [sp, #60]	; 0x3c
10003ec0:	1aea      	subs	r2, r5, r3
10003ec2:	2500      	movs	r5, #0
10003ec4:	9b12      	ldr	r3, [sp, #72]	; 0x48
10003ec6:	189b      	adds	r3, r3, r2
10003ec8:	9312      	str	r3, [sp, #72]	; 0x48
10003eca:	9b09      	ldr	r3, [sp, #36]	; 0x24
10003ecc:	2b00      	cmp	r3, #0
10003ece:	da04      	bge.n	10003eda <_dtoa_r+0x766>
10003ed0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10003ed2:	9a09      	ldr	r2, [sp, #36]	; 0x24
10003ed4:	1a9c      	subs	r4, r3, r2
10003ed6:	2300      	movs	r3, #0
10003ed8:	e001      	b.n	10003ede <_dtoa_r+0x76a>
10003eda:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10003edc:	9b09      	ldr	r3, [sp, #36]	; 0x24
10003ede:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10003ee0:	9808      	ldr	r0, [sp, #32]
10003ee2:	18d2      	adds	r2, r2, r3
10003ee4:	920d      	str	r2, [sp, #52]	; 0x34
10003ee6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
10003ee8:	2101      	movs	r1, #1
10003eea:	18d3      	adds	r3, r2, r3
10003eec:	930e      	str	r3, [sp, #56]	; 0x38
10003eee:	f000 fb2f 	bl	10004550 <__i2b>
10003ef2:	1c06      	adds	r6, r0, #0
10003ef4:	e002      	b.n	10003efc <_dtoa_r+0x788>
10003ef6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
10003ef8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10003efa:	9e10      	ldr	r6, [sp, #64]	; 0x40
10003efc:	2c00      	cmp	r4, #0
10003efe:	d00c      	beq.n	10003f1a <_dtoa_r+0x7a6>
10003f00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10003f02:	2b00      	cmp	r3, #0
10003f04:	dd09      	ble.n	10003f1a <_dtoa_r+0x7a6>
10003f06:	42a3      	cmp	r3, r4
10003f08:	dd00      	ble.n	10003f0c <_dtoa_r+0x798>
10003f0a:	1c23      	adds	r3, r4, #0
10003f0c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10003f0e:	1ae4      	subs	r4, r4, r3
10003f10:	1ad2      	subs	r2, r2, r3
10003f12:	920d      	str	r2, [sp, #52]	; 0x34
10003f14:	9a0e      	ldr	r2, [sp, #56]	; 0x38
10003f16:	1ad3      	subs	r3, r2, r3
10003f18:	930e      	str	r3, [sp, #56]	; 0x38
10003f1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10003f1c:	2b00      	cmp	r3, #0
10003f1e:	dd21      	ble.n	10003f64 <_dtoa_r+0x7f0>
10003f20:	9b10      	ldr	r3, [sp, #64]	; 0x40
10003f22:	2b00      	cmp	r3, #0
10003f24:	d018      	beq.n	10003f58 <_dtoa_r+0x7e4>
10003f26:	2d00      	cmp	r5, #0
10003f28:	dd10      	ble.n	10003f4c <_dtoa_r+0x7d8>
10003f2a:	1c31      	adds	r1, r6, #0
10003f2c:	1c2a      	adds	r2, r5, #0
10003f2e:	9808      	ldr	r0, [sp, #32]
10003f30:	f000 fba4 	bl	1000467c <__pow5mult>
10003f34:	1c06      	adds	r6, r0, #0
10003f36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10003f38:	1c31      	adds	r1, r6, #0
10003f3a:	9808      	ldr	r0, [sp, #32]
10003f3c:	f000 fb11 	bl	10004562 <__multiply>
10003f40:	1c07      	adds	r7, r0, #0
10003f42:	990a      	ldr	r1, [sp, #40]	; 0x28
10003f44:	9808      	ldr	r0, [sp, #32]
10003f46:	f000 fa64 	bl	10004412 <_Bfree>
10003f4a:	970a      	str	r7, [sp, #40]	; 0x28
10003f4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10003f4e:	1b5a      	subs	r2, r3, r5
10003f50:	d008      	beq.n	10003f64 <_dtoa_r+0x7f0>
10003f52:	9808      	ldr	r0, [sp, #32]
10003f54:	990a      	ldr	r1, [sp, #40]	; 0x28
10003f56:	e002      	b.n	10003f5e <_dtoa_r+0x7ea>
10003f58:	9808      	ldr	r0, [sp, #32]
10003f5a:	990a      	ldr	r1, [sp, #40]	; 0x28
10003f5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
10003f5e:	f000 fb8d 	bl	1000467c <__pow5mult>
10003f62:	900a      	str	r0, [sp, #40]	; 0x28
10003f64:	9808      	ldr	r0, [sp, #32]
10003f66:	2101      	movs	r1, #1
10003f68:	f000 faf2 	bl	10004550 <__i2b>
10003f6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
10003f6e:	1c07      	adds	r7, r0, #0
10003f70:	2b00      	cmp	r3, #0
10003f72:	dd0a      	ble.n	10003f8a <_dtoa_r+0x816>
10003f74:	1c39      	adds	r1, r7, #0
10003f76:	1c1a      	adds	r2, r3, #0
10003f78:	9808      	ldr	r0, [sp, #32]
10003f7a:	f000 fb7f 	bl	1000467c <__pow5mult>
10003f7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
10003f80:	1c07      	adds	r7, r0, #0
10003f82:	2500      	movs	r5, #0
10003f84:	2b01      	cmp	r3, #1
10003f86:	dc1b      	bgt.n	10003fc0 <_dtoa_r+0x84c>
10003f88:	e003      	b.n	10003f92 <_dtoa_r+0x81e>
10003f8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10003f8c:	2500      	movs	r5, #0
10003f8e:	2b01      	cmp	r3, #1
10003f90:	dc12      	bgt.n	10003fb8 <_dtoa_r+0x844>
10003f92:	2500      	movs	r5, #0
10003f94:	9b06      	ldr	r3, [sp, #24]
10003f96:	42ab      	cmp	r3, r5
10003f98:	d10e      	bne.n	10003fb8 <_dtoa_r+0x844>
10003f9a:	9b07      	ldr	r3, [sp, #28]
10003f9c:	031b      	lsls	r3, r3, #12
10003f9e:	42ab      	cmp	r3, r5
10003fa0:	d10a      	bne.n	10003fb8 <_dtoa_r+0x844>
10003fa2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
10003fa4:	9a07      	ldr	r2, [sp, #28]
10003fa6:	4213      	tst	r3, r2
10003fa8:	d006      	beq.n	10003fb8 <_dtoa_r+0x844>
10003faa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10003fac:	3501      	adds	r5, #1
10003fae:	3301      	adds	r3, #1
10003fb0:	930d      	str	r3, [sp, #52]	; 0x34
10003fb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10003fb4:	3301      	adds	r3, #1
10003fb6:	930e      	str	r3, [sp, #56]	; 0x38
10003fb8:	9b12      	ldr	r3, [sp, #72]	; 0x48
10003fba:	2001      	movs	r0, #1
10003fbc:	2b00      	cmp	r3, #0
10003fbe:	d008      	beq.n	10003fd2 <_dtoa_r+0x85e>
10003fc0:	693b      	ldr	r3, [r7, #16]
10003fc2:	3303      	adds	r3, #3
10003fc4:	009b      	lsls	r3, r3, #2
10003fc6:	18fb      	adds	r3, r7, r3
10003fc8:	6858      	ldr	r0, [r3, #4]
10003fca:	f000 fa77 	bl	100044bc <__hi0bits>
10003fce:	2320      	movs	r3, #32
10003fd0:	1a18      	subs	r0, r3, r0
10003fd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10003fd4:	18c0      	adds	r0, r0, r3
10003fd6:	231f      	movs	r3, #31
10003fd8:	4018      	ands	r0, r3
10003fda:	d009      	beq.n	10003ff0 <_dtoa_r+0x87c>
10003fdc:	3301      	adds	r3, #1
10003fde:	1a1b      	subs	r3, r3, r0
10003fe0:	2b04      	cmp	r3, #4
10003fe2:	dd02      	ble.n	10003fea <_dtoa_r+0x876>
10003fe4:	231c      	movs	r3, #28
10003fe6:	1a18      	subs	r0, r3, r0
10003fe8:	e003      	b.n	10003ff2 <_dtoa_r+0x87e>
10003fea:	2b04      	cmp	r3, #4
10003fec:	d008      	beq.n	10004000 <_dtoa_r+0x88c>
10003fee:	1c18      	adds	r0, r3, #0
10003ff0:	301c      	adds	r0, #28
10003ff2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10003ff4:	1824      	adds	r4, r4, r0
10003ff6:	181b      	adds	r3, r3, r0
10003ff8:	930d      	str	r3, [sp, #52]	; 0x34
10003ffa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10003ffc:	181b      	adds	r3, r3, r0
10003ffe:	930e      	str	r3, [sp, #56]	; 0x38
10004000:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10004002:	2b00      	cmp	r3, #0
10004004:	dd05      	ble.n	10004012 <_dtoa_r+0x89e>
10004006:	9808      	ldr	r0, [sp, #32]
10004008:	990a      	ldr	r1, [sp, #40]	; 0x28
1000400a:	1c1a      	adds	r2, r3, #0
1000400c:	f000 fb88 	bl	10004720 <__lshift>
10004010:	900a      	str	r0, [sp, #40]	; 0x28
10004012:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10004014:	2b00      	cmp	r3, #0
10004016:	dd05      	ble.n	10004024 <_dtoa_r+0x8b0>
10004018:	1c39      	adds	r1, r7, #0
1000401a:	9808      	ldr	r0, [sp, #32]
1000401c:	1c1a      	adds	r2, r3, #0
1000401e:	f000 fb7f 	bl	10004720 <__lshift>
10004022:	1c07      	adds	r7, r0, #0
10004024:	9b13      	ldr	r3, [sp, #76]	; 0x4c
10004026:	2b00      	cmp	r3, #0
10004028:	d01e      	beq.n	10004068 <_dtoa_r+0x8f4>
1000402a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000402c:	1c39      	adds	r1, r7, #0
1000402e:	f000 fbc9 	bl	100047c4 <__mcmp>
10004032:	2800      	cmp	r0, #0
10004034:	da18      	bge.n	10004068 <_dtoa_r+0x8f4>
10004036:	9b03      	ldr	r3, [sp, #12]
10004038:	9808      	ldr	r0, [sp, #32]
1000403a:	3b01      	subs	r3, #1
1000403c:	9303      	str	r3, [sp, #12]
1000403e:	990a      	ldr	r1, [sp, #40]	; 0x28
10004040:	2300      	movs	r3, #0
10004042:	220a      	movs	r2, #10
10004044:	f000 f9fe 	bl	10004444 <__multadd>
10004048:	9b10      	ldr	r3, [sp, #64]	; 0x40
1000404a:	900a      	str	r0, [sp, #40]	; 0x28
1000404c:	2b00      	cmp	r3, #0
1000404e:	d100      	bne.n	10004052 <_dtoa_r+0x8de>
10004050:	e17f      	b.n	10004352 <_dtoa_r+0xbde>
10004052:	1c31      	adds	r1, r6, #0
10004054:	2300      	movs	r3, #0
10004056:	9808      	ldr	r0, [sp, #32]
10004058:	220a      	movs	r2, #10
1000405a:	f000 f9f3 	bl	10004444 <__multadd>
1000405e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10004060:	1c06      	adds	r6, r0, #0
10004062:	2b00      	cmp	r3, #0
10004064:	dc3c      	bgt.n	100040e0 <_dtoa_r+0x96c>
10004066:	e17d      	b.n	10004364 <_dtoa_r+0xbf0>
10004068:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000406a:	2b00      	cmp	r3, #0
1000406c:	dc2e      	bgt.n	100040cc <_dtoa_r+0x958>
1000406e:	9b20      	ldr	r3, [sp, #128]	; 0x80
10004070:	2b02      	cmp	r3, #2
10004072:	dd2b      	ble.n	100040cc <_dtoa_r+0x958>
10004074:	9b09      	ldr	r3, [sp, #36]	; 0x24
10004076:	930b      	str	r3, [sp, #44]	; 0x2c
10004078:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000407a:	2b00      	cmp	r3, #0
1000407c:	d110      	bne.n	100040a0 <_dtoa_r+0x92c>
1000407e:	1c39      	adds	r1, r7, #0
10004080:	9808      	ldr	r0, [sp, #32]
10004082:	2205      	movs	r2, #5
10004084:	f000 f9de 	bl	10004444 <__multadd>
10004088:	1c07      	adds	r7, r0, #0
1000408a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000408c:	1c39      	adds	r1, r7, #0
1000408e:	f000 fb99 	bl	100047c4 <__mcmp>
10004092:	2800      	cmp	r0, #0
10004094:	dc0e      	bgt.n	100040b4 <_dtoa_r+0x940>
10004096:	e003      	b.n	100040a0 <_dtoa_r+0x92c>
10004098:	1c2f      	adds	r7, r5, #0
1000409a:	e000      	b.n	1000409e <_dtoa_r+0x92a>
1000409c:	2700      	movs	r7, #0
1000409e:	1c3e      	adds	r6, r7, #0
100040a0:	9b21      	ldr	r3, [sp, #132]	; 0x84
100040a2:	43db      	mvns	r3, r3
100040a4:	9303      	str	r3, [sp, #12]
100040a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100040a8:	9304      	str	r3, [sp, #16]
100040aa:	e00c      	b.n	100040c6 <_dtoa_r+0x952>
100040ac:	1c2f      	adds	r7, r5, #0
100040ae:	1c2e      	adds	r6, r5, #0
100040b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
100040b2:	9303      	str	r3, [sp, #12]
100040b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100040b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
100040b8:	3301      	adds	r3, #1
100040ba:	9304      	str	r3, [sp, #16]
100040bc:	2331      	movs	r3, #49	; 0x31
100040be:	7013      	strb	r3, [r2, #0]
100040c0:	9b03      	ldr	r3, [sp, #12]
100040c2:	3301      	adds	r3, #1
100040c4:	9303      	str	r3, [sp, #12]
100040c6:	9609      	str	r6, [sp, #36]	; 0x24
100040c8:	2600      	movs	r6, #0
100040ca:	e11a      	b.n	10004302 <_dtoa_r+0xb8e>
100040cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
100040ce:	2b00      	cmp	r3, #0
100040d0:	d104      	bne.n	100040dc <_dtoa_r+0x968>
100040d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
100040d4:	930b      	str	r3, [sp, #44]	; 0x2c
100040d6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
100040d8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
100040da:	e0d0      	b.n	1000427e <_dtoa_r+0xb0a>
100040dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
100040de:	930b      	str	r3, [sp, #44]	; 0x2c
100040e0:	2c00      	cmp	r4, #0
100040e2:	dd05      	ble.n	100040f0 <_dtoa_r+0x97c>
100040e4:	1c31      	adds	r1, r6, #0
100040e6:	9808      	ldr	r0, [sp, #32]
100040e8:	1c22      	adds	r2, r4, #0
100040ea:	f000 fb19 	bl	10004720 <__lshift>
100040ee:	1c06      	adds	r6, r0, #0
100040f0:	9609      	str	r6, [sp, #36]	; 0x24
100040f2:	2d00      	cmp	r5, #0
100040f4:	d012      	beq.n	1000411c <_dtoa_r+0x9a8>
100040f6:	6871      	ldr	r1, [r6, #4]
100040f8:	9808      	ldr	r0, [sp, #32]
100040fa:	f000 f952 	bl	100043a2 <_Balloc>
100040fe:	1c31      	adds	r1, r6, #0
10004100:	1c04      	adds	r4, r0, #0
10004102:	6933      	ldr	r3, [r6, #16]
10004104:	310c      	adds	r1, #12
10004106:	1c9a      	adds	r2, r3, #2
10004108:	0092      	lsls	r2, r2, #2
1000410a:	300c      	adds	r0, #12
1000410c:	f000 f940 	bl	10004390 <memcpy>
10004110:	9808      	ldr	r0, [sp, #32]
10004112:	1c21      	adds	r1, r4, #0
10004114:	2201      	movs	r2, #1
10004116:	f000 fb03 	bl	10004720 <__lshift>
1000411a:	9009      	str	r0, [sp, #36]	; 0x24
1000411c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000411e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10004120:	930e      	str	r3, [sp, #56]	; 0x38
10004122:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10004124:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10004126:	3b01      	subs	r3, #1
10004128:	18d3      	adds	r3, r2, r3
1000412a:	9310      	str	r3, [sp, #64]	; 0x40
1000412c:	1c39      	adds	r1, r7, #0
1000412e:	1c20      	adds	r0, r4, #0
10004130:	f7ff fa99 	bl	10003666 <quorem>
10004134:	1c03      	adds	r3, r0, #0
10004136:	900f      	str	r0, [sp, #60]	; 0x3c
10004138:	3330      	adds	r3, #48	; 0x30
1000413a:	1c31      	adds	r1, r6, #0
1000413c:	1c20      	adds	r0, r4, #0
1000413e:	930d      	str	r3, [sp, #52]	; 0x34
10004140:	f000 fb40 	bl	100047c4 <__mcmp>
10004144:	1c39      	adds	r1, r7, #0
10004146:	900b      	str	r0, [sp, #44]	; 0x2c
10004148:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000414a:	9808      	ldr	r0, [sp, #32]
1000414c:	f000 fb55 	bl	100047fa <__mdiff>
10004150:	2301      	movs	r3, #1
10004152:	9304      	str	r3, [sp, #16]
10004154:	68c3      	ldr	r3, [r0, #12]
10004156:	1c05      	adds	r5, r0, #0
10004158:	2b00      	cmp	r3, #0
1000415a:	d104      	bne.n	10004166 <_dtoa_r+0x9f2>
1000415c:	1c20      	adds	r0, r4, #0
1000415e:	1c29      	adds	r1, r5, #0
10004160:	f000 fb30 	bl	100047c4 <__mcmp>
10004164:	9004      	str	r0, [sp, #16]
10004166:	9808      	ldr	r0, [sp, #32]
10004168:	1c29      	adds	r1, r5, #0
1000416a:	f000 f952 	bl	10004412 <_Bfree>
1000416e:	9b04      	ldr	r3, [sp, #16]
10004170:	9a20      	ldr	r2, [sp, #128]	; 0x80
10004172:	4313      	orrs	r3, r2
10004174:	d110      	bne.n	10004198 <_dtoa_r+0xa24>
10004176:	9a06      	ldr	r2, [sp, #24]
10004178:	3301      	adds	r3, #1
1000417a:	4213      	tst	r3, r2
1000417c:	d10c      	bne.n	10004198 <_dtoa_r+0xa24>
1000417e:	980d      	ldr	r0, [sp, #52]	; 0x34
10004180:	940a      	str	r4, [sp, #40]	; 0x28
10004182:	2839      	cmp	r0, #57	; 0x39
10004184:	d03d      	beq.n	10004202 <_dtoa_r+0xa8e>
10004186:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10004188:	2b00      	cmp	r3, #0
1000418a:	dd01      	ble.n	10004190 <_dtoa_r+0xa1c>
1000418c:	980f      	ldr	r0, [sp, #60]	; 0x3c
1000418e:	3031      	adds	r0, #49	; 0x31
10004190:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10004192:	3301      	adds	r3, #1
10004194:	9304      	str	r3, [sp, #16]
10004196:	e03e      	b.n	10004216 <_dtoa_r+0xaa2>
10004198:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000419a:	2b00      	cmp	r3, #0
1000419c:	da05      	bge.n	100041aa <_dtoa_r+0xa36>
1000419e:	9b04      	ldr	r3, [sp, #16]
100041a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
100041a2:	940a      	str	r4, [sp, #40]	; 0x28
100041a4:	2b00      	cmp	r3, #0
100041a6:	dc09      	bgt.n	100041bc <_dtoa_r+0xa48>
100041a8:	e01c      	b.n	100041e4 <_dtoa_r+0xa70>
100041aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
100041ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
100041ae:	431d      	orrs	r5, r3
100041b0:	d11e      	bne.n	100041f0 <_dtoa_r+0xa7c>
100041b2:	2301      	movs	r3, #1
100041b4:	9a06      	ldr	r2, [sp, #24]
100041b6:	4213      	tst	r3, r2
100041b8:	d11a      	bne.n	100041f0 <_dtoa_r+0xa7c>
100041ba:	e7f0      	b.n	1000419e <_dtoa_r+0xa2a>
100041bc:	1c21      	adds	r1, r4, #0
100041be:	9808      	ldr	r0, [sp, #32]
100041c0:	2201      	movs	r2, #1
100041c2:	f000 faad 	bl	10004720 <__lshift>
100041c6:	1c39      	adds	r1, r7, #0
100041c8:	900a      	str	r0, [sp, #40]	; 0x28
100041ca:	f000 fafb 	bl	100047c4 <__mcmp>
100041ce:	2800      	cmp	r0, #0
100041d0:	dc03      	bgt.n	100041da <_dtoa_r+0xa66>
100041d2:	d107      	bne.n	100041e4 <_dtoa_r+0xa70>
100041d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100041d6:	07db      	lsls	r3, r3, #31
100041d8:	d504      	bpl.n	100041e4 <_dtoa_r+0xa70>
100041da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100041dc:	2b39      	cmp	r3, #57	; 0x39
100041de:	d010      	beq.n	10004202 <_dtoa_r+0xa8e>
100041e0:	1c1d      	adds	r5, r3, #0
100041e2:	3501      	adds	r5, #1
100041e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
100041e6:	3301      	adds	r3, #1
100041e8:	9304      	str	r3, [sp, #16]
100041ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
100041ec:	701d      	strb	r5, [r3, #0]
100041ee:	e088      	b.n	10004302 <_dtoa_r+0xb8e>
100041f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
100041f2:	1c5d      	adds	r5, r3, #1
100041f4:	9b04      	ldr	r3, [sp, #16]
100041f6:	2b00      	cmp	r3, #0
100041f8:	dd10      	ble.n	1000421c <_dtoa_r+0xaa8>
100041fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100041fc:	940a      	str	r4, [sp, #40]	; 0x28
100041fe:	2b39      	cmp	r3, #57	; 0x39
10004200:	d106      	bne.n	10004210 <_dtoa_r+0xa9c>
10004202:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10004204:	9a0e      	ldr	r2, [sp, #56]	; 0x38
10004206:	3301      	adds	r3, #1
10004208:	9304      	str	r3, [sp, #16]
1000420a:	2339      	movs	r3, #57	; 0x39
1000420c:	7013      	strb	r3, [r2, #0]
1000420e:	e060      	b.n	100042d2 <_dtoa_r+0xb5e>
10004210:	980d      	ldr	r0, [sp, #52]	; 0x34
10004212:	9504      	str	r5, [sp, #16]
10004214:	3001      	adds	r0, #1
10004216:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10004218:	7018      	strb	r0, [r3, #0]
1000421a:	e072      	b.n	10004302 <_dtoa_r+0xb8e>
1000421c:	466a      	mov	r2, sp
1000421e:	2134      	movs	r1, #52	; 0x34
10004220:	1852      	adds	r2, r2, r1
10004222:	7812      	ldrb	r2, [r2, #0]
10004224:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10004226:	9504      	str	r5, [sp, #16]
10004228:	701a      	strb	r2, [r3, #0]
1000422a:	9a10      	ldr	r2, [sp, #64]	; 0x40
1000422c:	4293      	cmp	r3, r2
1000422e:	d03f      	beq.n	100042b0 <_dtoa_r+0xb3c>
10004230:	1c21      	adds	r1, r4, #0
10004232:	220a      	movs	r2, #10
10004234:	2300      	movs	r3, #0
10004236:	9808      	ldr	r0, [sp, #32]
10004238:	f000 f904 	bl	10004444 <__multadd>
1000423c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000423e:	1c04      	adds	r4, r0, #0
10004240:	1c31      	adds	r1, r6, #0
10004242:	9808      	ldr	r0, [sp, #32]
10004244:	220a      	movs	r2, #10
10004246:	429e      	cmp	r6, r3
10004248:	d105      	bne.n	10004256 <_dtoa_r+0xae2>
1000424a:	2300      	movs	r3, #0
1000424c:	f000 f8fa 	bl	10004444 <__multadd>
10004250:	1c06      	adds	r6, r0, #0
10004252:	9009      	str	r0, [sp, #36]	; 0x24
10004254:	e00a      	b.n	1000426c <_dtoa_r+0xaf8>
10004256:	2300      	movs	r3, #0
10004258:	f000 f8f4 	bl	10004444 <__multadd>
1000425c:	9909      	ldr	r1, [sp, #36]	; 0x24
1000425e:	1c06      	adds	r6, r0, #0
10004260:	220a      	movs	r2, #10
10004262:	9808      	ldr	r0, [sp, #32]
10004264:	2300      	movs	r3, #0
10004266:	f000 f8ed 	bl	10004444 <__multadd>
1000426a:	9009      	str	r0, [sp, #36]	; 0x24
1000426c:	950e      	str	r5, [sp, #56]	; 0x38
1000426e:	e75d      	b.n	1000412c <_dtoa_r+0x9b8>
10004270:	1c21      	adds	r1, r4, #0
10004272:	9808      	ldr	r0, [sp, #32]
10004274:	220a      	movs	r2, #10
10004276:	2300      	movs	r3, #0
10004278:	f000 f8e4 	bl	10004444 <__multadd>
1000427c:	1c04      	adds	r4, r0, #0
1000427e:	1c20      	adds	r0, r4, #0
10004280:	1c39      	adds	r1, r7, #0
10004282:	f7ff f9f0 	bl	10003666 <quorem>
10004286:	2234      	movs	r2, #52	; 0x34
10004288:	466b      	mov	r3, sp
1000428a:	3030      	adds	r0, #48	; 0x30
1000428c:	189b      	adds	r3, r3, r2
1000428e:	900d      	str	r0, [sp, #52]	; 0x34
10004290:	781b      	ldrb	r3, [r3, #0]
10004292:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10004294:	702b      	strb	r3, [r5, #0]
10004296:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10004298:	3501      	adds	r5, #1
1000429a:	1aeb      	subs	r3, r5, r3
1000429c:	4293      	cmp	r3, r2
1000429e:	dbe7      	blt.n	10004270 <_dtoa_r+0xafc>
100042a0:	1e13      	subs	r3, r2, #0
100042a2:	dc00      	bgt.n	100042a6 <_dtoa_r+0xb32>
100042a4:	2301      	movs	r3, #1
100042a6:	9609      	str	r6, [sp, #36]	; 0x24
100042a8:	2600      	movs	r6, #0
100042aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
100042ac:	18d3      	adds	r3, r2, r3
100042ae:	9304      	str	r3, [sp, #16]
100042b0:	1c21      	adds	r1, r4, #0
100042b2:	9808      	ldr	r0, [sp, #32]
100042b4:	2201      	movs	r2, #1
100042b6:	f000 fa33 	bl	10004720 <__lshift>
100042ba:	1c39      	adds	r1, r7, #0
100042bc:	900a      	str	r0, [sp, #40]	; 0x28
100042be:	f000 fa81 	bl	100047c4 <__mcmp>
100042c2:	2800      	cmp	r0, #0
100042c4:	dc05      	bgt.n	100042d2 <_dtoa_r+0xb5e>
100042c6:	d115      	bne.n	100042f4 <_dtoa_r+0xb80>
100042c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100042ca:	07db      	lsls	r3, r3, #31
100042cc:	d401      	bmi.n	100042d2 <_dtoa_r+0xb5e>
100042ce:	e011      	b.n	100042f4 <_dtoa_r+0xb80>
100042d0:	9304      	str	r3, [sp, #16]
100042d2:	9b04      	ldr	r3, [sp, #16]
100042d4:	3b01      	subs	r3, #1
100042d6:	781a      	ldrb	r2, [r3, #0]
100042d8:	2a39      	cmp	r2, #57	; 0x39
100042da:	d108      	bne.n	100042ee <_dtoa_r+0xb7a>
100042dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
100042de:	4293      	cmp	r3, r2
100042e0:	d1f6      	bne.n	100042d0 <_dtoa_r+0xb5c>
100042e2:	9b03      	ldr	r3, [sp, #12]
100042e4:	3301      	adds	r3, #1
100042e6:	9303      	str	r3, [sp, #12]
100042e8:	2331      	movs	r3, #49	; 0x31
100042ea:	7013      	strb	r3, [r2, #0]
100042ec:	e009      	b.n	10004302 <_dtoa_r+0xb8e>
100042ee:	3201      	adds	r2, #1
100042f0:	701a      	strb	r2, [r3, #0]
100042f2:	e006      	b.n	10004302 <_dtoa_r+0xb8e>
100042f4:	9b04      	ldr	r3, [sp, #16]
100042f6:	3b01      	subs	r3, #1
100042f8:	781a      	ldrb	r2, [r3, #0]
100042fa:	2a30      	cmp	r2, #48	; 0x30
100042fc:	d101      	bne.n	10004302 <_dtoa_r+0xb8e>
100042fe:	9304      	str	r3, [sp, #16]
10004300:	e7f8      	b.n	100042f4 <_dtoa_r+0xb80>
10004302:	9808      	ldr	r0, [sp, #32]
10004304:	1c39      	adds	r1, r7, #0
10004306:	f000 f884 	bl	10004412 <_Bfree>
1000430a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000430c:	2b00      	cmp	r3, #0
1000430e:	d00e      	beq.n	1000432e <_dtoa_r+0xbba>
10004310:	2e00      	cmp	r6, #0
10004312:	d005      	beq.n	10004320 <_dtoa_r+0xbac>
10004314:	429e      	cmp	r6, r3
10004316:	d003      	beq.n	10004320 <_dtoa_r+0xbac>
10004318:	9808      	ldr	r0, [sp, #32]
1000431a:	1c31      	adds	r1, r6, #0
1000431c:	f000 f879 	bl	10004412 <_Bfree>
10004320:	9808      	ldr	r0, [sp, #32]
10004322:	9909      	ldr	r1, [sp, #36]	; 0x24
10004324:	f000 f875 	bl	10004412 <_Bfree>
10004328:	e001      	b.n	1000432e <_dtoa_r+0xbba>
1000432a:	9b11      	ldr	r3, [sp, #68]	; 0x44
1000432c:	9303      	str	r3, [sp, #12]
1000432e:	9808      	ldr	r0, [sp, #32]
10004330:	990a      	ldr	r1, [sp, #40]	; 0x28
10004332:	f000 f86e 	bl	10004412 <_Bfree>
10004336:	2300      	movs	r3, #0
10004338:	9a04      	ldr	r2, [sp, #16]
1000433a:	980c      	ldr	r0, [sp, #48]	; 0x30
1000433c:	7013      	strb	r3, [r2, #0]
1000433e:	9b03      	ldr	r3, [sp, #12]
10004340:	9a22      	ldr	r2, [sp, #136]	; 0x88
10004342:	3301      	adds	r3, #1
10004344:	6013      	str	r3, [r2, #0]
10004346:	9b24      	ldr	r3, [sp, #144]	; 0x90
10004348:	2b00      	cmp	r3, #0
1000434a:	d010      	beq.n	1000436e <_dtoa_r+0xbfa>
1000434c:	9a04      	ldr	r2, [sp, #16]
1000434e:	601a      	str	r2, [r3, #0]
10004350:	e00d      	b.n	1000436e <_dtoa_r+0xbfa>
10004352:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10004354:	2b00      	cmp	r3, #0
10004356:	dd00      	ble.n	1000435a <_dtoa_r+0xbe6>
10004358:	e6bd      	b.n	100040d6 <_dtoa_r+0x962>
1000435a:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000435c:	2b02      	cmp	r3, #2
1000435e:	dd00      	ble.n	10004362 <_dtoa_r+0xbee>
10004360:	e68a      	b.n	10004078 <_dtoa_r+0x904>
10004362:	e6b8      	b.n	100040d6 <_dtoa_r+0x962>
10004364:	9b20      	ldr	r3, [sp, #128]	; 0x80
10004366:	2b02      	cmp	r3, #2
10004368:	dd00      	ble.n	1000436c <_dtoa_r+0xbf8>
1000436a:	e685      	b.n	10004078 <_dtoa_r+0x904>
1000436c:	e6b8      	b.n	100040e0 <_dtoa_r+0x96c>
1000436e:	b01b      	add	sp, #108	; 0x6c
10004370:	bdf0      	pop	{r4, r5, r6, r7, pc}
10004372:	46c0      	nop			; (mov r8, r8)

10004374 <_localeconv_r>:
10004374:	4800      	ldr	r0, [pc, #0]	; (10004378 <_localeconv_r+0x4>)
10004376:	4770      	bx	lr
10004378:	200005dc 	.word	0x200005dc

1000437c <malloc>:
1000437c:	b508      	push	{r3, lr}
1000437e:	4b03      	ldr	r3, [pc, #12]	; (1000438c <malloc+0x10>)
10004380:	1c01      	adds	r1, r0, #0
10004382:	6818      	ldr	r0, [r3, #0]
10004384:	f000 fb06 	bl	10004994 <_malloc_r>
10004388:	bd08      	pop	{r3, pc}
1000438a:	46c0      	nop			; (mov r8, r8)
1000438c:	200005d8 	.word	0x200005d8

10004390 <memcpy>:
10004390:	2300      	movs	r3, #0
10004392:	b510      	push	{r4, lr}
10004394:	4293      	cmp	r3, r2
10004396:	d003      	beq.n	100043a0 <memcpy+0x10>
10004398:	5ccc      	ldrb	r4, [r1, r3]
1000439a:	54c4      	strb	r4, [r0, r3]
1000439c:	3301      	adds	r3, #1
1000439e:	e7f9      	b.n	10004394 <memcpy+0x4>
100043a0:	bd10      	pop	{r4, pc}

100043a2 <_Balloc>:
100043a2:	b570      	push	{r4, r5, r6, lr}
100043a4:	6a46      	ldr	r6, [r0, #36]	; 0x24
100043a6:	1c04      	adds	r4, r0, #0
100043a8:	1c0d      	adds	r5, r1, #0
100043aa:	2e00      	cmp	r6, #0
100043ac:	d107      	bne.n	100043be <_Balloc+0x1c>
100043ae:	2010      	movs	r0, #16
100043b0:	f7ff ffe4 	bl	1000437c <malloc>
100043b4:	6260      	str	r0, [r4, #36]	; 0x24
100043b6:	6046      	str	r6, [r0, #4]
100043b8:	6086      	str	r6, [r0, #8]
100043ba:	6006      	str	r6, [r0, #0]
100043bc:	60c6      	str	r6, [r0, #12]
100043be:	6a66      	ldr	r6, [r4, #36]	; 0x24
100043c0:	68f3      	ldr	r3, [r6, #12]
100043c2:	2b00      	cmp	r3, #0
100043c4:	d009      	beq.n	100043da <_Balloc+0x38>
100043c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
100043c8:	00ab      	lsls	r3, r5, #2
100043ca:	68d2      	ldr	r2, [r2, #12]
100043cc:	18d3      	adds	r3, r2, r3
100043ce:	6818      	ldr	r0, [r3, #0]
100043d0:	2800      	cmp	r0, #0
100043d2:	d00e      	beq.n	100043f2 <_Balloc+0x50>
100043d4:	6802      	ldr	r2, [r0, #0]
100043d6:	601a      	str	r2, [r3, #0]
100043d8:	e017      	b.n	1000440a <_Balloc+0x68>
100043da:	1c20      	adds	r0, r4, #0
100043dc:	2104      	movs	r1, #4
100043de:	2221      	movs	r2, #33	; 0x21
100043e0:	f000 faca 	bl	10004978 <_calloc_r>
100043e4:	6a63      	ldr	r3, [r4, #36]	; 0x24
100043e6:	60f0      	str	r0, [r6, #12]
100043e8:	68db      	ldr	r3, [r3, #12]
100043ea:	2b00      	cmp	r3, #0
100043ec:	d1eb      	bne.n	100043c6 <_Balloc+0x24>
100043ee:	2000      	movs	r0, #0
100043f0:	e00e      	b.n	10004410 <_Balloc+0x6e>
100043f2:	2101      	movs	r1, #1
100043f4:	1c0e      	adds	r6, r1, #0
100043f6:	40ae      	lsls	r6, r5
100043f8:	1d72      	adds	r2, r6, #5
100043fa:	0092      	lsls	r2, r2, #2
100043fc:	1c20      	adds	r0, r4, #0
100043fe:	f000 fabb 	bl	10004978 <_calloc_r>
10004402:	2800      	cmp	r0, #0
10004404:	d0f3      	beq.n	100043ee <_Balloc+0x4c>
10004406:	6045      	str	r5, [r0, #4]
10004408:	6086      	str	r6, [r0, #8]
1000440a:	2300      	movs	r3, #0
1000440c:	6103      	str	r3, [r0, #16]
1000440e:	60c3      	str	r3, [r0, #12]
10004410:	bd70      	pop	{r4, r5, r6, pc}

10004412 <_Bfree>:
10004412:	b570      	push	{r4, r5, r6, lr}
10004414:	6a45      	ldr	r5, [r0, #36]	; 0x24
10004416:	1c06      	adds	r6, r0, #0
10004418:	1c0c      	adds	r4, r1, #0
1000441a:	2d00      	cmp	r5, #0
1000441c:	d107      	bne.n	1000442e <_Bfree+0x1c>
1000441e:	2010      	movs	r0, #16
10004420:	f7ff ffac 	bl	1000437c <malloc>
10004424:	6270      	str	r0, [r6, #36]	; 0x24
10004426:	6045      	str	r5, [r0, #4]
10004428:	6085      	str	r5, [r0, #8]
1000442a:	6005      	str	r5, [r0, #0]
1000442c:	60c5      	str	r5, [r0, #12]
1000442e:	2c00      	cmp	r4, #0
10004430:	d007      	beq.n	10004442 <_Bfree+0x30>
10004432:	6a72      	ldr	r2, [r6, #36]	; 0x24
10004434:	6863      	ldr	r3, [r4, #4]
10004436:	68d2      	ldr	r2, [r2, #12]
10004438:	009b      	lsls	r3, r3, #2
1000443a:	18d3      	adds	r3, r2, r3
1000443c:	681a      	ldr	r2, [r3, #0]
1000443e:	6022      	str	r2, [r4, #0]
10004440:	601c      	str	r4, [r3, #0]
10004442:	bd70      	pop	{r4, r5, r6, pc}

10004444 <__multadd>:
10004444:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10004446:	1c1e      	adds	r6, r3, #0
10004448:	2314      	movs	r3, #20
1000444a:	469c      	mov	ip, r3
1000444c:	1c07      	adds	r7, r0, #0
1000444e:	1c0c      	adds	r4, r1, #0
10004450:	2000      	movs	r0, #0
10004452:	690d      	ldr	r5, [r1, #16]
10004454:	448c      	add	ip, r1
10004456:	4663      	mov	r3, ip
10004458:	8819      	ldrh	r1, [r3, #0]
1000445a:	681b      	ldr	r3, [r3, #0]
1000445c:	4351      	muls	r1, r2
1000445e:	0c1b      	lsrs	r3, r3, #16
10004460:	4353      	muls	r3, r2
10004462:	1989      	adds	r1, r1, r6
10004464:	0c0e      	lsrs	r6, r1, #16
10004466:	18f3      	adds	r3, r6, r3
10004468:	b289      	uxth	r1, r1
1000446a:	0c1e      	lsrs	r6, r3, #16
1000446c:	041b      	lsls	r3, r3, #16
1000446e:	185b      	adds	r3, r3, r1
10004470:	4661      	mov	r1, ip
10004472:	3001      	adds	r0, #1
10004474:	c108      	stmia	r1!, {r3}
10004476:	468c      	mov	ip, r1
10004478:	42a8      	cmp	r0, r5
1000447a:	dbec      	blt.n	10004456 <__multadd+0x12>
1000447c:	2e00      	cmp	r6, #0
1000447e:	d01b      	beq.n	100044b8 <__multadd+0x74>
10004480:	68a3      	ldr	r3, [r4, #8]
10004482:	429d      	cmp	r5, r3
10004484:	db12      	blt.n	100044ac <__multadd+0x68>
10004486:	6863      	ldr	r3, [r4, #4]
10004488:	1c38      	adds	r0, r7, #0
1000448a:	1c59      	adds	r1, r3, #1
1000448c:	f7ff ff89 	bl	100043a2 <_Balloc>
10004490:	1c21      	adds	r1, r4, #0
10004492:	6923      	ldr	r3, [r4, #16]
10004494:	9001      	str	r0, [sp, #4]
10004496:	1c9a      	adds	r2, r3, #2
10004498:	310c      	adds	r1, #12
1000449a:	0092      	lsls	r2, r2, #2
1000449c:	300c      	adds	r0, #12
1000449e:	f7ff ff77 	bl	10004390 <memcpy>
100044a2:	1c21      	adds	r1, r4, #0
100044a4:	1c38      	adds	r0, r7, #0
100044a6:	f7ff ffb4 	bl	10004412 <_Bfree>
100044aa:	9c01      	ldr	r4, [sp, #4]
100044ac:	1d2b      	adds	r3, r5, #4
100044ae:	009b      	lsls	r3, r3, #2
100044b0:	18e3      	adds	r3, r4, r3
100044b2:	3501      	adds	r5, #1
100044b4:	605e      	str	r6, [r3, #4]
100044b6:	6125      	str	r5, [r4, #16]
100044b8:	1c20      	adds	r0, r4, #0
100044ba:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100044bc <__hi0bits>:
100044bc:	2200      	movs	r2, #0
100044be:	1c03      	adds	r3, r0, #0
100044c0:	0c01      	lsrs	r1, r0, #16
100044c2:	4291      	cmp	r1, r2
100044c4:	d101      	bne.n	100044ca <__hi0bits+0xe>
100044c6:	0403      	lsls	r3, r0, #16
100044c8:	3210      	adds	r2, #16
100044ca:	0e19      	lsrs	r1, r3, #24
100044cc:	d101      	bne.n	100044d2 <__hi0bits+0x16>
100044ce:	3208      	adds	r2, #8
100044d0:	021b      	lsls	r3, r3, #8
100044d2:	0f19      	lsrs	r1, r3, #28
100044d4:	d101      	bne.n	100044da <__hi0bits+0x1e>
100044d6:	3204      	adds	r2, #4
100044d8:	011b      	lsls	r3, r3, #4
100044da:	0f99      	lsrs	r1, r3, #30
100044dc:	d101      	bne.n	100044e2 <__hi0bits+0x26>
100044de:	3202      	adds	r2, #2
100044e0:	009b      	lsls	r3, r3, #2
100044e2:	1c10      	adds	r0, r2, #0
100044e4:	2b00      	cmp	r3, #0
100044e6:	db03      	blt.n	100044f0 <__hi0bits+0x34>
100044e8:	2020      	movs	r0, #32
100044ea:	005b      	lsls	r3, r3, #1
100044ec:	d500      	bpl.n	100044f0 <__hi0bits+0x34>
100044ee:	1c50      	adds	r0, r2, #1
100044f0:	4770      	bx	lr

100044f2 <__lo0bits>:
100044f2:	2207      	movs	r2, #7
100044f4:	6803      	ldr	r3, [r0, #0]
100044f6:	b510      	push	{r4, lr}
100044f8:	1c01      	adds	r1, r0, #0
100044fa:	401a      	ands	r2, r3
100044fc:	d00c      	beq.n	10004518 <__lo0bits+0x26>
100044fe:	2401      	movs	r4, #1
10004500:	2000      	movs	r0, #0
10004502:	4223      	tst	r3, r4
10004504:	d123      	bne.n	1000454e <__lo0bits+0x5c>
10004506:	2202      	movs	r2, #2
10004508:	4213      	tst	r3, r2
1000450a:	d003      	beq.n	10004514 <__lo0bits+0x22>
1000450c:	40e3      	lsrs	r3, r4
1000450e:	1c20      	adds	r0, r4, #0
10004510:	600b      	str	r3, [r1, #0]
10004512:	e01c      	b.n	1000454e <__lo0bits+0x5c>
10004514:	089b      	lsrs	r3, r3, #2
10004516:	e018      	b.n	1000454a <__lo0bits+0x58>
10004518:	b298      	uxth	r0, r3
1000451a:	2800      	cmp	r0, #0
1000451c:	d101      	bne.n	10004522 <__lo0bits+0x30>
1000451e:	2210      	movs	r2, #16
10004520:	0c1b      	lsrs	r3, r3, #16
10004522:	b2d8      	uxtb	r0, r3
10004524:	2800      	cmp	r0, #0
10004526:	d101      	bne.n	1000452c <__lo0bits+0x3a>
10004528:	3208      	adds	r2, #8
1000452a:	0a1b      	lsrs	r3, r3, #8
1000452c:	0718      	lsls	r0, r3, #28
1000452e:	d101      	bne.n	10004534 <__lo0bits+0x42>
10004530:	3204      	adds	r2, #4
10004532:	091b      	lsrs	r3, r3, #4
10004534:	0798      	lsls	r0, r3, #30
10004536:	d101      	bne.n	1000453c <__lo0bits+0x4a>
10004538:	3202      	adds	r2, #2
1000453a:	089b      	lsrs	r3, r3, #2
1000453c:	07d8      	lsls	r0, r3, #31
1000453e:	d404      	bmi.n	1000454a <__lo0bits+0x58>
10004540:	085b      	lsrs	r3, r3, #1
10004542:	2020      	movs	r0, #32
10004544:	2b00      	cmp	r3, #0
10004546:	d002      	beq.n	1000454e <__lo0bits+0x5c>
10004548:	3201      	adds	r2, #1
1000454a:	1c10      	adds	r0, r2, #0
1000454c:	600b      	str	r3, [r1, #0]
1000454e:	bd10      	pop	{r4, pc}

10004550 <__i2b>:
10004550:	b510      	push	{r4, lr}
10004552:	1c0c      	adds	r4, r1, #0
10004554:	2101      	movs	r1, #1
10004556:	f7ff ff24 	bl	100043a2 <_Balloc>
1000455a:	2301      	movs	r3, #1
1000455c:	6144      	str	r4, [r0, #20]
1000455e:	6103      	str	r3, [r0, #16]
10004560:	bd10      	pop	{r4, pc}

10004562 <__multiply>:
10004562:	b5f0      	push	{r4, r5, r6, r7, lr}
10004564:	690b      	ldr	r3, [r1, #16]
10004566:	1c14      	adds	r4, r2, #0
10004568:	6912      	ldr	r2, [r2, #16]
1000456a:	b089      	sub	sp, #36	; 0x24
1000456c:	1c0d      	adds	r5, r1, #0
1000456e:	4293      	cmp	r3, r2
10004570:	da01      	bge.n	10004576 <__multiply+0x14>
10004572:	1c25      	adds	r5, r4, #0
10004574:	1c0c      	adds	r4, r1, #0
10004576:	692f      	ldr	r7, [r5, #16]
10004578:	6926      	ldr	r6, [r4, #16]
1000457a:	68aa      	ldr	r2, [r5, #8]
1000457c:	19bb      	adds	r3, r7, r6
1000457e:	6869      	ldr	r1, [r5, #4]
10004580:	9300      	str	r3, [sp, #0]
10004582:	4293      	cmp	r3, r2
10004584:	dd00      	ble.n	10004588 <__multiply+0x26>
10004586:	3101      	adds	r1, #1
10004588:	f7ff ff0b 	bl	100043a2 <_Balloc>
1000458c:	1c01      	adds	r1, r0, #0
1000458e:	9b00      	ldr	r3, [sp, #0]
10004590:	3114      	adds	r1, #20
10004592:	4684      	mov	ip, r0
10004594:	0098      	lsls	r0, r3, #2
10004596:	1c0b      	adds	r3, r1, #0
10004598:	1808      	adds	r0, r1, r0
1000459a:	4283      	cmp	r3, r0
1000459c:	d202      	bcs.n	100045a4 <__multiply+0x42>
1000459e:	2200      	movs	r2, #0
100045a0:	c304      	stmia	r3!, {r2}
100045a2:	e7fa      	b.n	1000459a <__multiply+0x38>
100045a4:	3514      	adds	r5, #20
100045a6:	00bf      	lsls	r7, r7, #2
100045a8:	19eb      	adds	r3, r5, r7
100045aa:	3414      	adds	r4, #20
100045ac:	00b6      	lsls	r6, r6, #2
100045ae:	9304      	str	r3, [sp, #16]
100045b0:	19a3      	adds	r3, r4, r6
100045b2:	9502      	str	r5, [sp, #8]
100045b4:	9306      	str	r3, [sp, #24]
100045b6:	9b06      	ldr	r3, [sp, #24]
100045b8:	429c      	cmp	r4, r3
100045ba:	d256      	bcs.n	1000466a <__multiply+0x108>
100045bc:	8823      	ldrh	r3, [r4, #0]
100045be:	9303      	str	r3, [sp, #12]
100045c0:	2b00      	cmp	r3, #0
100045c2:	d022      	beq.n	1000460a <__multiply+0xa8>
100045c4:	1c0e      	adds	r6, r1, #0
100045c6:	2700      	movs	r7, #0
100045c8:	9b02      	ldr	r3, [sp, #8]
100045ca:	9301      	str	r3, [sp, #4]
100045cc:	9b01      	ldr	r3, [sp, #4]
100045ce:	9d03      	ldr	r5, [sp, #12]
100045d0:	cb04      	ldmia	r3!, {r2}
100045d2:	9605      	str	r6, [sp, #20]
100045d4:	9301      	str	r3, [sp, #4]
100045d6:	8833      	ldrh	r3, [r6, #0]
100045d8:	9307      	str	r3, [sp, #28]
100045da:	b293      	uxth	r3, r2
100045dc:	436b      	muls	r3, r5
100045de:	9d07      	ldr	r5, [sp, #28]
100045e0:	0c12      	lsrs	r2, r2, #16
100045e2:	18eb      	adds	r3, r5, r3
100045e4:	6835      	ldr	r5, [r6, #0]
100045e6:	19db      	adds	r3, r3, r7
100045e8:	0c2f      	lsrs	r7, r5, #16
100045ea:	9d03      	ldr	r5, [sp, #12]
100045ec:	436a      	muls	r2, r5
100045ee:	18ba      	adds	r2, r7, r2
100045f0:	0c1f      	lsrs	r7, r3, #16
100045f2:	19d2      	adds	r2, r2, r7
100045f4:	0c17      	lsrs	r7, r2, #16
100045f6:	b29b      	uxth	r3, r3
100045f8:	0412      	lsls	r2, r2, #16
100045fa:	4313      	orrs	r3, r2
100045fc:	c608      	stmia	r6!, {r3}
100045fe:	9a01      	ldr	r2, [sp, #4]
10004600:	9b04      	ldr	r3, [sp, #16]
10004602:	429a      	cmp	r2, r3
10004604:	d3e2      	bcc.n	100045cc <__multiply+0x6a>
10004606:	9b05      	ldr	r3, [sp, #20]
10004608:	605f      	str	r7, [r3, #4]
1000460a:	6823      	ldr	r3, [r4, #0]
1000460c:	0c1b      	lsrs	r3, r3, #16
1000460e:	9301      	str	r3, [sp, #4]
10004610:	d021      	beq.n	10004656 <__multiply+0xf4>
10004612:	2200      	movs	r2, #0
10004614:	1c0d      	adds	r5, r1, #0
10004616:	680b      	ldr	r3, [r1, #0]
10004618:	9f02      	ldr	r7, [sp, #8]
1000461a:	9203      	str	r2, [sp, #12]
1000461c:	883e      	ldrh	r6, [r7, #0]
1000461e:	9a01      	ldr	r2, [sp, #4]
10004620:	b29b      	uxth	r3, r3
10004622:	4356      	muls	r6, r2
10004624:	682a      	ldr	r2, [r5, #0]
10004626:	9505      	str	r5, [sp, #20]
10004628:	0c12      	lsrs	r2, r2, #16
1000462a:	18b2      	adds	r2, r6, r2
1000462c:	9e03      	ldr	r6, [sp, #12]
1000462e:	1992      	adds	r2, r2, r6
10004630:	0416      	lsls	r6, r2, #16
10004632:	4333      	orrs	r3, r6
10004634:	602b      	str	r3, [r5, #0]
10004636:	cf08      	ldmia	r7!, {r3}
10004638:	9e01      	ldr	r6, [sp, #4]
1000463a:	0c1b      	lsrs	r3, r3, #16
1000463c:	4373      	muls	r3, r6
1000463e:	88ae      	ldrh	r6, [r5, #4]
10004640:	0c12      	lsrs	r2, r2, #16
10004642:	199b      	adds	r3, r3, r6
10004644:	189b      	adds	r3, r3, r2
10004646:	0c1a      	lsrs	r2, r3, #16
10004648:	9203      	str	r2, [sp, #12]
1000464a:	9a04      	ldr	r2, [sp, #16]
1000464c:	3504      	adds	r5, #4
1000464e:	42ba      	cmp	r2, r7
10004650:	d8e4      	bhi.n	1000461c <__multiply+0xba>
10004652:	9a05      	ldr	r2, [sp, #20]
10004654:	6053      	str	r3, [r2, #4]
10004656:	3404      	adds	r4, #4
10004658:	3104      	adds	r1, #4
1000465a:	e7ac      	b.n	100045b6 <__multiply+0x54>
1000465c:	3804      	subs	r0, #4
1000465e:	6803      	ldr	r3, [r0, #0]
10004660:	2b00      	cmp	r3, #0
10004662:	d105      	bne.n	10004670 <__multiply+0x10e>
10004664:	9b00      	ldr	r3, [sp, #0]
10004666:	3b01      	subs	r3, #1
10004668:	9300      	str	r3, [sp, #0]
1000466a:	9b00      	ldr	r3, [sp, #0]
1000466c:	2b00      	cmp	r3, #0
1000466e:	dcf5      	bgt.n	1000465c <__multiply+0xfa>
10004670:	4663      	mov	r3, ip
10004672:	4660      	mov	r0, ip
10004674:	9a00      	ldr	r2, [sp, #0]
10004676:	611a      	str	r2, [r3, #16]
10004678:	b009      	add	sp, #36	; 0x24
1000467a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1000467c <__pow5mult>:
1000467c:	2303      	movs	r3, #3
1000467e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10004680:	4013      	ands	r3, r2
10004682:	1c05      	adds	r5, r0, #0
10004684:	1c0e      	adds	r6, r1, #0
10004686:	1c14      	adds	r4, r2, #0
10004688:	2b00      	cmp	r3, #0
1000468a:	d007      	beq.n	1000469c <__pow5mult+0x20>
1000468c:	4a22      	ldr	r2, [pc, #136]	; (10004718 <__pow5mult+0x9c>)
1000468e:	3b01      	subs	r3, #1
10004690:	009b      	lsls	r3, r3, #2
10004692:	589a      	ldr	r2, [r3, r2]
10004694:	2300      	movs	r3, #0
10004696:	f7ff fed5 	bl	10004444 <__multadd>
1000469a:	1c06      	adds	r6, r0, #0
1000469c:	10a3      	asrs	r3, r4, #2
1000469e:	9301      	str	r3, [sp, #4]
100046a0:	d037      	beq.n	10004712 <__pow5mult+0x96>
100046a2:	6a6c      	ldr	r4, [r5, #36]	; 0x24
100046a4:	2c00      	cmp	r4, #0
100046a6:	d107      	bne.n	100046b8 <__pow5mult+0x3c>
100046a8:	2010      	movs	r0, #16
100046aa:	f7ff fe67 	bl	1000437c <malloc>
100046ae:	6268      	str	r0, [r5, #36]	; 0x24
100046b0:	6044      	str	r4, [r0, #4]
100046b2:	6084      	str	r4, [r0, #8]
100046b4:	6004      	str	r4, [r0, #0]
100046b6:	60c4      	str	r4, [r0, #12]
100046b8:	6a6f      	ldr	r7, [r5, #36]	; 0x24
100046ba:	68bc      	ldr	r4, [r7, #8]
100046bc:	2c00      	cmp	r4, #0
100046be:	d110      	bne.n	100046e2 <__pow5mult+0x66>
100046c0:	1c28      	adds	r0, r5, #0
100046c2:	4916      	ldr	r1, [pc, #88]	; (1000471c <__pow5mult+0xa0>)
100046c4:	f7ff ff44 	bl	10004550 <__i2b>
100046c8:	2300      	movs	r3, #0
100046ca:	60b8      	str	r0, [r7, #8]
100046cc:	1c04      	adds	r4, r0, #0
100046ce:	6003      	str	r3, [r0, #0]
100046d0:	e007      	b.n	100046e2 <__pow5mult+0x66>
100046d2:	9b01      	ldr	r3, [sp, #4]
100046d4:	105b      	asrs	r3, r3, #1
100046d6:	9301      	str	r3, [sp, #4]
100046d8:	d01b      	beq.n	10004712 <__pow5mult+0x96>
100046da:	6820      	ldr	r0, [r4, #0]
100046dc:	2800      	cmp	r0, #0
100046de:	d00f      	beq.n	10004700 <__pow5mult+0x84>
100046e0:	1c04      	adds	r4, r0, #0
100046e2:	9b01      	ldr	r3, [sp, #4]
100046e4:	07db      	lsls	r3, r3, #31
100046e6:	d5f4      	bpl.n	100046d2 <__pow5mult+0x56>
100046e8:	1c31      	adds	r1, r6, #0
100046ea:	1c22      	adds	r2, r4, #0
100046ec:	1c28      	adds	r0, r5, #0
100046ee:	f7ff ff38 	bl	10004562 <__multiply>
100046f2:	1c07      	adds	r7, r0, #0
100046f4:	1c31      	adds	r1, r6, #0
100046f6:	1c28      	adds	r0, r5, #0
100046f8:	f7ff fe8b 	bl	10004412 <_Bfree>
100046fc:	1c3e      	adds	r6, r7, #0
100046fe:	e7e8      	b.n	100046d2 <__pow5mult+0x56>
10004700:	1c28      	adds	r0, r5, #0
10004702:	1c21      	adds	r1, r4, #0
10004704:	1c22      	adds	r2, r4, #0
10004706:	f7ff ff2c 	bl	10004562 <__multiply>
1000470a:	2300      	movs	r3, #0
1000470c:	6020      	str	r0, [r4, #0]
1000470e:	6003      	str	r3, [r0, #0]
10004710:	e7e6      	b.n	100046e0 <__pow5mult+0x64>
10004712:	1c30      	adds	r0, r6, #0
10004714:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10004716:	46c0      	nop			; (mov r8, r8)
10004718:	10006948 	.word	0x10006948
1000471c:	00000271 	.word	0x00000271

10004720 <__lshift>:
10004720:	b5f0      	push	{r4, r5, r6, r7, lr}
10004722:	1c0c      	adds	r4, r1, #0
10004724:	1c17      	adds	r7, r2, #0
10004726:	6923      	ldr	r3, [r4, #16]
10004728:	1155      	asrs	r5, r2, #5
1000472a:	b085      	sub	sp, #20
1000472c:	18eb      	adds	r3, r5, r3
1000472e:	9301      	str	r3, [sp, #4]
10004730:	3301      	adds	r3, #1
10004732:	9300      	str	r3, [sp, #0]
10004734:	6849      	ldr	r1, [r1, #4]
10004736:	68a3      	ldr	r3, [r4, #8]
10004738:	9002      	str	r0, [sp, #8]
1000473a:	9a00      	ldr	r2, [sp, #0]
1000473c:	429a      	cmp	r2, r3
1000473e:	dd02      	ble.n	10004746 <__lshift+0x26>
10004740:	3101      	adds	r1, #1
10004742:	005b      	lsls	r3, r3, #1
10004744:	e7f9      	b.n	1000473a <__lshift+0x1a>
10004746:	9802      	ldr	r0, [sp, #8]
10004748:	f7ff fe2b 	bl	100043a2 <_Balloc>
1000474c:	1c02      	adds	r2, r0, #0
1000474e:	1c06      	adds	r6, r0, #0
10004750:	2300      	movs	r3, #0
10004752:	3214      	adds	r2, #20
10004754:	42ab      	cmp	r3, r5
10004756:	da04      	bge.n	10004762 <__lshift+0x42>
10004758:	2000      	movs	r0, #0
1000475a:	0099      	lsls	r1, r3, #2
1000475c:	5050      	str	r0, [r2, r1]
1000475e:	3301      	adds	r3, #1
10004760:	e7f8      	b.n	10004754 <__lshift+0x34>
10004762:	43eb      	mvns	r3, r5
10004764:	17db      	asrs	r3, r3, #31
10004766:	401d      	ands	r5, r3
10004768:	1c23      	adds	r3, r4, #0
1000476a:	00ad      	lsls	r5, r5, #2
1000476c:	1955      	adds	r5, r2, r5
1000476e:	6922      	ldr	r2, [r4, #16]
10004770:	3314      	adds	r3, #20
10004772:	0092      	lsls	r2, r2, #2
10004774:	189a      	adds	r2, r3, r2
10004776:	4694      	mov	ip, r2
10004778:	221f      	movs	r2, #31
1000477a:	4017      	ands	r7, r2
1000477c:	d014      	beq.n	100047a8 <__lshift+0x88>
1000477e:	3201      	adds	r2, #1
10004780:	1bd2      	subs	r2, r2, r7
10004782:	9203      	str	r2, [sp, #12]
10004784:	2200      	movs	r2, #0
10004786:	6819      	ldr	r1, [r3, #0]
10004788:	1c28      	adds	r0, r5, #0
1000478a:	40b9      	lsls	r1, r7
1000478c:	430a      	orrs	r2, r1
1000478e:	c504      	stmia	r5!, {r2}
10004790:	cb04      	ldmia	r3!, {r2}
10004792:	9903      	ldr	r1, [sp, #12]
10004794:	40ca      	lsrs	r2, r1
10004796:	459c      	cmp	ip, r3
10004798:	d8f5      	bhi.n	10004786 <__lshift+0x66>
1000479a:	6042      	str	r2, [r0, #4]
1000479c:	2a00      	cmp	r2, #0
1000479e:	d007      	beq.n	100047b0 <__lshift+0x90>
100047a0:	9b01      	ldr	r3, [sp, #4]
100047a2:	3302      	adds	r3, #2
100047a4:	9300      	str	r3, [sp, #0]
100047a6:	e003      	b.n	100047b0 <__lshift+0x90>
100047a8:	cb04      	ldmia	r3!, {r2}
100047aa:	c504      	stmia	r5!, {r2}
100047ac:	459c      	cmp	ip, r3
100047ae:	d8fb      	bhi.n	100047a8 <__lshift+0x88>
100047b0:	9b00      	ldr	r3, [sp, #0]
100047b2:	9802      	ldr	r0, [sp, #8]
100047b4:	3b01      	subs	r3, #1
100047b6:	6133      	str	r3, [r6, #16]
100047b8:	1c21      	adds	r1, r4, #0
100047ba:	f7ff fe2a 	bl	10004412 <_Bfree>
100047be:	1c30      	adds	r0, r6, #0
100047c0:	b005      	add	sp, #20
100047c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100047c4 <__mcmp>:
100047c4:	6903      	ldr	r3, [r0, #16]
100047c6:	690a      	ldr	r2, [r1, #16]
100047c8:	b510      	push	{r4, lr}
100047ca:	1a9b      	subs	r3, r3, r2
100047cc:	1c04      	adds	r4, r0, #0
100047ce:	1e18      	subs	r0, r3, #0
100047d0:	d112      	bne.n	100047f8 <__mcmp+0x34>
100047d2:	0093      	lsls	r3, r2, #2
100047d4:	3414      	adds	r4, #20
100047d6:	3114      	adds	r1, #20
100047d8:	18e2      	adds	r2, r4, r3
100047da:	18c9      	adds	r1, r1, r3
100047dc:	3a04      	subs	r2, #4
100047de:	3904      	subs	r1, #4
100047e0:	6813      	ldr	r3, [r2, #0]
100047e2:	6808      	ldr	r0, [r1, #0]
100047e4:	4283      	cmp	r3, r0
100047e6:	d004      	beq.n	100047f2 <__mcmp+0x2e>
100047e8:	4283      	cmp	r3, r0
100047ea:	419b      	sbcs	r3, r3
100047ec:	2001      	movs	r0, #1
100047ee:	4318      	orrs	r0, r3
100047f0:	e002      	b.n	100047f8 <__mcmp+0x34>
100047f2:	42a2      	cmp	r2, r4
100047f4:	d8f2      	bhi.n	100047dc <__mcmp+0x18>
100047f6:	2000      	movs	r0, #0
100047f8:	bd10      	pop	{r4, pc}

100047fa <__mdiff>:
100047fa:	b5f0      	push	{r4, r5, r6, r7, lr}
100047fc:	1c07      	adds	r7, r0, #0
100047fe:	b085      	sub	sp, #20
10004800:	1c08      	adds	r0, r1, #0
10004802:	1c0c      	adds	r4, r1, #0
10004804:	1c11      	adds	r1, r2, #0
10004806:	1c15      	adds	r5, r2, #0
10004808:	f7ff ffdc 	bl	100047c4 <__mcmp>
1000480c:	1e06      	subs	r6, r0, #0
1000480e:	d107      	bne.n	10004820 <__mdiff+0x26>
10004810:	1c38      	adds	r0, r7, #0
10004812:	1c31      	adds	r1, r6, #0
10004814:	f7ff fdc5 	bl	100043a2 <_Balloc>
10004818:	2301      	movs	r3, #1
1000481a:	6146      	str	r6, [r0, #20]
1000481c:	6103      	str	r3, [r0, #16]
1000481e:	e055      	b.n	100048cc <__mdiff+0xd2>
10004820:	2300      	movs	r3, #0
10004822:	9301      	str	r3, [sp, #4]
10004824:	4298      	cmp	r0, r3
10004826:	da04      	bge.n	10004832 <__mdiff+0x38>
10004828:	1c23      	adds	r3, r4, #0
1000482a:	1c2c      	adds	r4, r5, #0
1000482c:	1c1d      	adds	r5, r3, #0
1000482e:	2301      	movs	r3, #1
10004830:	9301      	str	r3, [sp, #4]
10004832:	1c38      	adds	r0, r7, #0
10004834:	6861      	ldr	r1, [r4, #4]
10004836:	f7ff fdb4 	bl	100043a2 <_Balloc>
1000483a:	9b01      	ldr	r3, [sp, #4]
1000483c:	6926      	ldr	r6, [r4, #16]
1000483e:	1c2f      	adds	r7, r5, #0
10004840:	60c3      	str	r3, [r0, #12]
10004842:	3414      	adds	r4, #20
10004844:	00b3      	lsls	r3, r6, #2
10004846:	18e3      	adds	r3, r4, r3
10004848:	1c02      	adds	r2, r0, #0
1000484a:	9302      	str	r3, [sp, #8]
1000484c:	692b      	ldr	r3, [r5, #16]
1000484e:	2500      	movs	r5, #0
10004850:	3714      	adds	r7, #20
10004852:	009b      	lsls	r3, r3, #2
10004854:	18fb      	adds	r3, r7, r3
10004856:	9303      	str	r3, [sp, #12]
10004858:	3214      	adds	r2, #20
1000485a:	cc08      	ldmia	r4!, {r3}
1000485c:	4669      	mov	r1, sp
1000485e:	469c      	mov	ip, r3
10004860:	cf08      	ldmia	r7!, {r3}
10004862:	3204      	adds	r2, #4
10004864:	9300      	str	r3, [sp, #0]
10004866:	4663      	mov	r3, ip
10004868:	808b      	strh	r3, [r1, #4]
1000486a:	888b      	ldrh	r3, [r1, #4]
1000486c:	195d      	adds	r5, r3, r5
1000486e:	9b00      	ldr	r3, [sp, #0]
10004870:	b29b      	uxth	r3, r3
10004872:	1aeb      	subs	r3, r5, r3
10004874:	4665      	mov	r5, ip
10004876:	9301      	str	r3, [sp, #4]
10004878:	9b00      	ldr	r3, [sp, #0]
1000487a:	0c2d      	lsrs	r5, r5, #16
1000487c:	0c19      	lsrs	r1, r3, #16
1000487e:	9b01      	ldr	r3, [sp, #4]
10004880:	1a69      	subs	r1, r5, r1
10004882:	141d      	asrs	r5, r3, #16
10004884:	1f13      	subs	r3, r2, #4
10004886:	469c      	mov	ip, r3
10004888:	466b      	mov	r3, sp
1000488a:	1949      	adds	r1, r1, r5
1000488c:	889b      	ldrh	r3, [r3, #4]
1000488e:	140d      	asrs	r5, r1, #16
10004890:	0409      	lsls	r1, r1, #16
10004892:	430b      	orrs	r3, r1
10004894:	4661      	mov	r1, ip
10004896:	600b      	str	r3, [r1, #0]
10004898:	9b03      	ldr	r3, [sp, #12]
1000489a:	429f      	cmp	r7, r3
1000489c:	d3dd      	bcc.n	1000485a <__mdiff+0x60>
1000489e:	9902      	ldr	r1, [sp, #8]
100048a0:	1c13      	adds	r3, r2, #0
100048a2:	428c      	cmp	r4, r1
100048a4:	d20b      	bcs.n	100048be <__mdiff+0xc4>
100048a6:	cc08      	ldmia	r4!, {r3}
100048a8:	b299      	uxth	r1, r3
100048aa:	1949      	adds	r1, r1, r5
100048ac:	140d      	asrs	r5, r1, #16
100048ae:	0c1b      	lsrs	r3, r3, #16
100048b0:	18eb      	adds	r3, r5, r3
100048b2:	141d      	asrs	r5, r3, #16
100048b4:	b289      	uxth	r1, r1
100048b6:	041b      	lsls	r3, r3, #16
100048b8:	430b      	orrs	r3, r1
100048ba:	c208      	stmia	r2!, {r3}
100048bc:	e7ef      	b.n	1000489e <__mdiff+0xa4>
100048be:	3b04      	subs	r3, #4
100048c0:	681a      	ldr	r2, [r3, #0]
100048c2:	2a00      	cmp	r2, #0
100048c4:	d101      	bne.n	100048ca <__mdiff+0xd0>
100048c6:	3e01      	subs	r6, #1
100048c8:	e7f9      	b.n	100048be <__mdiff+0xc4>
100048ca:	6106      	str	r6, [r0, #16]
100048cc:	b005      	add	sp, #20
100048ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

100048d0 <__d2b>:
100048d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100048d2:	1c1d      	adds	r5, r3, #0
100048d4:	2101      	movs	r1, #1
100048d6:	9f08      	ldr	r7, [sp, #32]
100048d8:	1c14      	adds	r4, r2, #0
100048da:	f7ff fd62 	bl	100043a2 <_Balloc>
100048de:	032b      	lsls	r3, r5, #12
100048e0:	006d      	lsls	r5, r5, #1
100048e2:	1c06      	adds	r6, r0, #0
100048e4:	0b1b      	lsrs	r3, r3, #12
100048e6:	0d6d      	lsrs	r5, r5, #21
100048e8:	d002      	beq.n	100048f0 <__d2b+0x20>
100048ea:	2280      	movs	r2, #128	; 0x80
100048ec:	0352      	lsls	r2, r2, #13
100048ee:	4313      	orrs	r3, r2
100048f0:	9301      	str	r3, [sp, #4]
100048f2:	2c00      	cmp	r4, #0
100048f4:	d018      	beq.n	10004928 <__d2b+0x58>
100048f6:	4668      	mov	r0, sp
100048f8:	9400      	str	r4, [sp, #0]
100048fa:	f7ff fdfa 	bl	100044f2 <__lo0bits>
100048fe:	9c00      	ldr	r4, [sp, #0]
10004900:	2800      	cmp	r0, #0
10004902:	d009      	beq.n	10004918 <__d2b+0x48>
10004904:	2320      	movs	r3, #32
10004906:	9a01      	ldr	r2, [sp, #4]
10004908:	1a19      	subs	r1, r3, r0
1000490a:	1c13      	adds	r3, r2, #0
1000490c:	408b      	lsls	r3, r1
1000490e:	40c2      	lsrs	r2, r0
10004910:	4323      	orrs	r3, r4
10004912:	6173      	str	r3, [r6, #20]
10004914:	9201      	str	r2, [sp, #4]
10004916:	e000      	b.n	1000491a <__d2b+0x4a>
10004918:	6174      	str	r4, [r6, #20]
1000491a:	9c01      	ldr	r4, [sp, #4]
1000491c:	61b4      	str	r4, [r6, #24]
1000491e:	1e63      	subs	r3, r4, #1
10004920:	419c      	sbcs	r4, r3
10004922:	3401      	adds	r4, #1
10004924:	6134      	str	r4, [r6, #16]
10004926:	e007      	b.n	10004938 <__d2b+0x68>
10004928:	a801      	add	r0, sp, #4
1000492a:	f7ff fde2 	bl	100044f2 <__lo0bits>
1000492e:	2401      	movs	r4, #1
10004930:	9b01      	ldr	r3, [sp, #4]
10004932:	6134      	str	r4, [r6, #16]
10004934:	6173      	str	r3, [r6, #20]
10004936:	3020      	adds	r0, #32
10004938:	2d00      	cmp	r5, #0
1000493a:	d006      	beq.n	1000494a <__d2b+0x7a>
1000493c:	4b0b      	ldr	r3, [pc, #44]	; (1000496c <__d2b+0x9c>)
1000493e:	18ed      	adds	r5, r5, r3
10004940:	2335      	movs	r3, #53	; 0x35
10004942:	182d      	adds	r5, r5, r0
10004944:	603d      	str	r5, [r7, #0]
10004946:	1a18      	subs	r0, r3, r0
10004948:	e00b      	b.n	10004962 <__d2b+0x92>
1000494a:	4b09      	ldr	r3, [pc, #36]	; (10004970 <__d2b+0xa0>)
1000494c:	18c0      	adds	r0, r0, r3
1000494e:	4b09      	ldr	r3, [pc, #36]	; (10004974 <__d2b+0xa4>)
10004950:	6038      	str	r0, [r7, #0]
10004952:	18e3      	adds	r3, r4, r3
10004954:	009b      	lsls	r3, r3, #2
10004956:	18f3      	adds	r3, r6, r3
10004958:	6958      	ldr	r0, [r3, #20]
1000495a:	f7ff fdaf 	bl	100044bc <__hi0bits>
1000495e:	0164      	lsls	r4, r4, #5
10004960:	1a20      	subs	r0, r4, r0
10004962:	9b09      	ldr	r3, [sp, #36]	; 0x24
10004964:	6018      	str	r0, [r3, #0]
10004966:	1c30      	adds	r0, r6, #0
10004968:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000496a:	46c0      	nop			; (mov r8, r8)
1000496c:	fffffbcd 	.word	0xfffffbcd
10004970:	fffffbce 	.word	0xfffffbce
10004974:	3fffffff 	.word	0x3fffffff

10004978 <_calloc_r>:
10004978:	434a      	muls	r2, r1
1000497a:	b538      	push	{r3, r4, r5, lr}
1000497c:	1c11      	adds	r1, r2, #0
1000497e:	1c14      	adds	r4, r2, #0
10004980:	f000 f808 	bl	10004994 <_malloc_r>
10004984:	1e05      	subs	r5, r0, #0
10004986:	d003      	beq.n	10004990 <_calloc_r+0x18>
10004988:	2100      	movs	r1, #0
1000498a:	1c22      	adds	r2, r4, #0
1000498c:	f000 f86c 	bl	10004a68 <memset>
10004990:	1c28      	adds	r0, r5, #0
10004992:	bd38      	pop	{r3, r4, r5, pc}

10004994 <_malloc_r>:
10004994:	2303      	movs	r3, #3
10004996:	b570      	push	{r4, r5, r6, lr}
10004998:	1ccc      	adds	r4, r1, #3
1000499a:	439c      	bics	r4, r3
1000499c:	3408      	adds	r4, #8
1000499e:	1c05      	adds	r5, r0, #0
100049a0:	2c0c      	cmp	r4, #12
100049a2:	d201      	bcs.n	100049a8 <_malloc_r+0x14>
100049a4:	240c      	movs	r4, #12
100049a6:	e005      	b.n	100049b4 <_malloc_r+0x20>
100049a8:	2c00      	cmp	r4, #0
100049aa:	da03      	bge.n	100049b4 <_malloc_r+0x20>
100049ac:	230c      	movs	r3, #12
100049ae:	2000      	movs	r0, #0
100049b0:	602b      	str	r3, [r5, #0]
100049b2:	e042      	b.n	10004a3a <_malloc_r+0xa6>
100049b4:	428c      	cmp	r4, r1
100049b6:	d3f9      	bcc.n	100049ac <_malloc_r+0x18>
100049b8:	4a20      	ldr	r2, [pc, #128]	; (10004a3c <_malloc_r+0xa8>)
100049ba:	6813      	ldr	r3, [r2, #0]
100049bc:	1c10      	adds	r0, r2, #0
100049be:	1c19      	adds	r1, r3, #0
100049c0:	2900      	cmp	r1, #0
100049c2:	d013      	beq.n	100049ec <_malloc_r+0x58>
100049c4:	680a      	ldr	r2, [r1, #0]
100049c6:	1b12      	subs	r2, r2, r4
100049c8:	d40d      	bmi.n	100049e6 <_malloc_r+0x52>
100049ca:	2a0b      	cmp	r2, #11
100049cc:	d902      	bls.n	100049d4 <_malloc_r+0x40>
100049ce:	600a      	str	r2, [r1, #0]
100049d0:	188b      	adds	r3, r1, r2
100049d2:	e01f      	b.n	10004a14 <_malloc_r+0x80>
100049d4:	428b      	cmp	r3, r1
100049d6:	d102      	bne.n	100049de <_malloc_r+0x4a>
100049d8:	685a      	ldr	r2, [r3, #4]
100049da:	6002      	str	r2, [r0, #0]
100049dc:	e01b      	b.n	10004a16 <_malloc_r+0x82>
100049de:	684a      	ldr	r2, [r1, #4]
100049e0:	605a      	str	r2, [r3, #4]
100049e2:	1c0b      	adds	r3, r1, #0
100049e4:	e017      	b.n	10004a16 <_malloc_r+0x82>
100049e6:	1c0b      	adds	r3, r1, #0
100049e8:	6849      	ldr	r1, [r1, #4]
100049ea:	e7e9      	b.n	100049c0 <_malloc_r+0x2c>
100049ec:	4e14      	ldr	r6, [pc, #80]	; (10004a40 <_malloc_r+0xac>)
100049ee:	6833      	ldr	r3, [r6, #0]
100049f0:	2b00      	cmp	r3, #0
100049f2:	d103      	bne.n	100049fc <_malloc_r+0x68>
100049f4:	1c28      	adds	r0, r5, #0
100049f6:	f000 f825 	bl	10004a44 <_sbrk_r>
100049fa:	6030      	str	r0, [r6, #0]
100049fc:	1c28      	adds	r0, r5, #0
100049fe:	1c21      	adds	r1, r4, #0
10004a00:	f000 f820 	bl	10004a44 <_sbrk_r>
10004a04:	1c03      	adds	r3, r0, #0
10004a06:	1c42      	adds	r2, r0, #1
10004a08:	d0d0      	beq.n	100049ac <_malloc_r+0x18>
10004a0a:	2203      	movs	r2, #3
10004a0c:	1cc6      	adds	r6, r0, #3
10004a0e:	4396      	bics	r6, r2
10004a10:	4286      	cmp	r6, r0
10004a12:	d10a      	bne.n	10004a2a <_malloc_r+0x96>
10004a14:	601c      	str	r4, [r3, #0]
10004a16:	1c18      	adds	r0, r3, #0
10004a18:	2107      	movs	r1, #7
10004a1a:	300b      	adds	r0, #11
10004a1c:	1d1a      	adds	r2, r3, #4
10004a1e:	4388      	bics	r0, r1
10004a20:	1a82      	subs	r2, r0, r2
10004a22:	d00a      	beq.n	10004a3a <_malloc_r+0xa6>
10004a24:	4251      	negs	r1, r2
10004a26:	5099      	str	r1, [r3, r2]
10004a28:	e007      	b.n	10004a3a <_malloc_r+0xa6>
10004a2a:	1a31      	subs	r1, r6, r0
10004a2c:	1c28      	adds	r0, r5, #0
10004a2e:	f000 f809 	bl	10004a44 <_sbrk_r>
10004a32:	1c43      	adds	r3, r0, #1
10004a34:	d0ba      	beq.n	100049ac <_malloc_r+0x18>
10004a36:	1c33      	adds	r3, r6, #0
10004a38:	e7ec      	b.n	10004a14 <_malloc_r+0x80>
10004a3a:	bd70      	pop	{r4, r5, r6, pc}
10004a3c:	2000067c 	.word	0x2000067c
10004a40:	20000678 	.word	0x20000678

10004a44 <_sbrk_r>:
10004a44:	b538      	push	{r3, r4, r5, lr}
10004a46:	2300      	movs	r3, #0
10004a48:	4c06      	ldr	r4, [pc, #24]	; (10004a64 <_sbrk_r+0x20>)
10004a4a:	1c05      	adds	r5, r0, #0
10004a4c:	1c08      	adds	r0, r1, #0
10004a4e:	6023      	str	r3, [r4, #0]
10004a50:	f7fc fe54 	bl	100016fc <_sbrk>
10004a54:	1c43      	adds	r3, r0, #1
10004a56:	d103      	bne.n	10004a60 <_sbrk_r+0x1c>
10004a58:	6823      	ldr	r3, [r4, #0]
10004a5a:	2b00      	cmp	r3, #0
10004a5c:	d000      	beq.n	10004a60 <_sbrk_r+0x1c>
10004a5e:	602b      	str	r3, [r5, #0]
10004a60:	bd38      	pop	{r3, r4, r5, pc}
10004a62:	46c0      	nop			; (mov r8, r8)
10004a64:	200007a4 	.word	0x200007a4

10004a68 <memset>:
10004a68:	1c03      	adds	r3, r0, #0
10004a6a:	1882      	adds	r2, r0, r2
10004a6c:	4293      	cmp	r3, r2
10004a6e:	d002      	beq.n	10004a76 <memset+0xe>
10004a70:	7019      	strb	r1, [r3, #0]
10004a72:	3301      	adds	r3, #1
10004a74:	e7fa      	b.n	10004a6c <memset+0x4>
10004a76:	4770      	bx	lr

10004a78 <__gnu_thumb1_case_uqi>:
10004a78:	b402      	push	{r1}
10004a7a:	4671      	mov	r1, lr
10004a7c:	0849      	lsrs	r1, r1, #1
10004a7e:	0049      	lsls	r1, r1, #1
10004a80:	5c09      	ldrb	r1, [r1, r0]
10004a82:	0049      	lsls	r1, r1, #1
10004a84:	448e      	add	lr, r1
10004a86:	bc02      	pop	{r1}
10004a88:	4770      	bx	lr
10004a8a:	46c0      	nop			; (mov r8, r8)

10004a8c <__aeabi_cdrcmple>:
10004a8c:	4684      	mov	ip, r0
10004a8e:	1c10      	adds	r0, r2, #0
10004a90:	4662      	mov	r2, ip
10004a92:	468c      	mov	ip, r1
10004a94:	1c19      	adds	r1, r3, #0
10004a96:	4663      	mov	r3, ip
10004a98:	e000      	b.n	10004a9c <__aeabi_cdcmpeq>
10004a9a:	46c0      	nop			; (mov r8, r8)

10004a9c <__aeabi_cdcmpeq>:
10004a9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10004a9e:	f000 ff33 	bl	10005908 <__ledf2>
10004aa2:	2800      	cmp	r0, #0
10004aa4:	d401      	bmi.n	10004aaa <__aeabi_cdcmpeq+0xe>
10004aa6:	2100      	movs	r1, #0
10004aa8:	42c8      	cmn	r0, r1
10004aaa:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

10004aac <__aeabi_dcmpeq>:
10004aac:	b510      	push	{r4, lr}
10004aae:	f000 fe77 	bl	100057a0 <__eqdf2>
10004ab2:	4240      	negs	r0, r0
10004ab4:	3001      	adds	r0, #1
10004ab6:	bd10      	pop	{r4, pc}

10004ab8 <__aeabi_dcmplt>:
10004ab8:	b510      	push	{r4, lr}
10004aba:	f000 ff25 	bl	10005908 <__ledf2>
10004abe:	2800      	cmp	r0, #0
10004ac0:	db01      	blt.n	10004ac6 <__aeabi_dcmplt+0xe>
10004ac2:	2000      	movs	r0, #0
10004ac4:	bd10      	pop	{r4, pc}
10004ac6:	2001      	movs	r0, #1
10004ac8:	bd10      	pop	{r4, pc}
10004aca:	46c0      	nop			; (mov r8, r8)

10004acc <__aeabi_dcmple>:
10004acc:	b510      	push	{r4, lr}
10004ace:	f000 ff1b 	bl	10005908 <__ledf2>
10004ad2:	2800      	cmp	r0, #0
10004ad4:	dd01      	ble.n	10004ada <__aeabi_dcmple+0xe>
10004ad6:	2000      	movs	r0, #0
10004ad8:	bd10      	pop	{r4, pc}
10004ada:	2001      	movs	r0, #1
10004adc:	bd10      	pop	{r4, pc}
10004ade:	46c0      	nop			; (mov r8, r8)

10004ae0 <__aeabi_dcmpgt>:
10004ae0:	b510      	push	{r4, lr}
10004ae2:	f000 fea1 	bl	10005828 <__gedf2>
10004ae6:	2800      	cmp	r0, #0
10004ae8:	dc01      	bgt.n	10004aee <__aeabi_dcmpgt+0xe>
10004aea:	2000      	movs	r0, #0
10004aec:	bd10      	pop	{r4, pc}
10004aee:	2001      	movs	r0, #1
10004af0:	bd10      	pop	{r4, pc}
10004af2:	46c0      	nop			; (mov r8, r8)

10004af4 <__aeabi_dcmpge>:
10004af4:	b510      	push	{r4, lr}
10004af6:	f000 fe97 	bl	10005828 <__gedf2>
10004afa:	2800      	cmp	r0, #0
10004afc:	da01      	bge.n	10004b02 <__aeabi_dcmpge+0xe>
10004afe:	2000      	movs	r0, #0
10004b00:	bd10      	pop	{r4, pc}
10004b02:	2001      	movs	r0, #1
10004b04:	bd10      	pop	{r4, pc}
10004b06:	46c0      	nop			; (mov r8, r8)

10004b08 <__aeabi_dadd>:
10004b08:	b5f0      	push	{r4, r5, r6, r7, lr}
10004b0a:	4645      	mov	r5, r8
10004b0c:	4657      	mov	r7, sl
10004b0e:	464e      	mov	r6, r9
10004b10:	4694      	mov	ip, r2
10004b12:	004c      	lsls	r4, r1, #1
10004b14:	030a      	lsls	r2, r1, #12
10004b16:	0fc9      	lsrs	r1, r1, #31
10004b18:	b4e0      	push	{r5, r6, r7}
10004b1a:	4688      	mov	r8, r1
10004b1c:	1c0e      	adds	r6, r1, #0
10004b1e:	0319      	lsls	r1, r3, #12
10004b20:	0f47      	lsrs	r7, r0, #29
10004b22:	00c5      	lsls	r5, r0, #3
10004b24:	0a48      	lsrs	r0, r1, #9
10004b26:	4661      	mov	r1, ip
10004b28:	0f49      	lsrs	r1, r1, #29
10004b2a:	4301      	orrs	r1, r0
10004b2c:	4660      	mov	r0, ip
10004b2e:	0a52      	lsrs	r2, r2, #9
10004b30:	4317      	orrs	r7, r2
10004b32:	00c0      	lsls	r0, r0, #3
10004b34:	005a      	lsls	r2, r3, #1
10004b36:	0d64      	lsrs	r4, r4, #21
10004b38:	0d52      	lsrs	r2, r2, #21
10004b3a:	0fdb      	lsrs	r3, r3, #31
10004b3c:	4684      	mov	ip, r0
10004b3e:	4598      	cmp	r8, r3
10004b40:	d100      	bne.n	10004b44 <__aeabi_dadd+0x3c>
10004b42:	e0a7      	b.n	10004c94 <__aeabi_dadd+0x18c>
10004b44:	1aa0      	subs	r0, r4, r2
10004b46:	2800      	cmp	r0, #0
10004b48:	dc00      	bgt.n	10004b4c <__aeabi_dadd+0x44>
10004b4a:	e101      	b.n	10004d50 <__aeabi_dadd+0x248>
10004b4c:	2a00      	cmp	r2, #0
10004b4e:	d13d      	bne.n	10004bcc <__aeabi_dadd+0xc4>
10004b50:	4663      	mov	r3, ip
10004b52:	430b      	orrs	r3, r1
10004b54:	d000      	beq.n	10004b58 <__aeabi_dadd+0x50>
10004b56:	e0d4      	b.n	10004d02 <__aeabi_dadd+0x1fa>
10004b58:	076b      	lsls	r3, r5, #29
10004b5a:	d100      	bne.n	10004b5e <__aeabi_dadd+0x56>
10004b5c:	e088      	b.n	10004c70 <__aeabi_dadd+0x168>
10004b5e:	230f      	movs	r3, #15
10004b60:	402b      	ands	r3, r5
10004b62:	2b04      	cmp	r3, #4
10004b64:	d100      	bne.n	10004b68 <__aeabi_dadd+0x60>
10004b66:	e083      	b.n	10004c70 <__aeabi_dadd+0x168>
10004b68:	1d2a      	adds	r2, r5, #4
10004b6a:	42aa      	cmp	r2, r5
10004b6c:	41ad      	sbcs	r5, r5
10004b6e:	2380      	movs	r3, #128	; 0x80
10004b70:	426d      	negs	r5, r5
10004b72:	197f      	adds	r7, r7, r5
10004b74:	041b      	lsls	r3, r3, #16
10004b76:	403b      	ands	r3, r7
10004b78:	4646      	mov	r6, r8
10004b7a:	1c15      	adds	r5, r2, #0
10004b7c:	2b00      	cmp	r3, #0
10004b7e:	d100      	bne.n	10004b82 <__aeabi_dadd+0x7a>
10004b80:	e07c      	b.n	10004c7c <__aeabi_dadd+0x174>
10004b82:	4bcc      	ldr	r3, [pc, #816]	; (10004eb4 <__aeabi_dadd+0x3ac>)
10004b84:	3401      	adds	r4, #1
10004b86:	429c      	cmp	r4, r3
10004b88:	d100      	bne.n	10004b8c <__aeabi_dadd+0x84>
10004b8a:	e0fd      	b.n	10004d88 <__aeabi_dadd+0x280>
10004b8c:	1c3a      	adds	r2, r7, #0
10004b8e:	4bca      	ldr	r3, [pc, #808]	; (10004eb8 <__aeabi_dadd+0x3b0>)
10004b90:	08ed      	lsrs	r5, r5, #3
10004b92:	401a      	ands	r2, r3
10004b94:	0750      	lsls	r0, r2, #29
10004b96:	0564      	lsls	r4, r4, #21
10004b98:	0252      	lsls	r2, r2, #9
10004b9a:	4305      	orrs	r5, r0
10004b9c:	0b12      	lsrs	r2, r2, #12
10004b9e:	0d64      	lsrs	r4, r4, #21
10004ba0:	2100      	movs	r1, #0
10004ba2:	0312      	lsls	r2, r2, #12
10004ba4:	0d0b      	lsrs	r3, r1, #20
10004ba6:	051b      	lsls	r3, r3, #20
10004ba8:	0564      	lsls	r4, r4, #21
10004baa:	0b12      	lsrs	r2, r2, #12
10004bac:	431a      	orrs	r2, r3
10004bae:	0863      	lsrs	r3, r4, #1
10004bb0:	4cc2      	ldr	r4, [pc, #776]	; (10004ebc <__aeabi_dadd+0x3b4>)
10004bb2:	07f6      	lsls	r6, r6, #31
10004bb4:	4014      	ands	r4, r2
10004bb6:	431c      	orrs	r4, r3
10004bb8:	0064      	lsls	r4, r4, #1
10004bba:	0864      	lsrs	r4, r4, #1
10004bbc:	4334      	orrs	r4, r6
10004bbe:	1c28      	adds	r0, r5, #0
10004bc0:	1c21      	adds	r1, r4, #0
10004bc2:	bc1c      	pop	{r2, r3, r4}
10004bc4:	4690      	mov	r8, r2
10004bc6:	4699      	mov	r9, r3
10004bc8:	46a2      	mov	sl, r4
10004bca:	bdf0      	pop	{r4, r5, r6, r7, pc}
10004bcc:	4bb9      	ldr	r3, [pc, #740]	; (10004eb4 <__aeabi_dadd+0x3ac>)
10004bce:	429c      	cmp	r4, r3
10004bd0:	d0c2      	beq.n	10004b58 <__aeabi_dadd+0x50>
10004bd2:	2380      	movs	r3, #128	; 0x80
10004bd4:	041b      	lsls	r3, r3, #16
10004bd6:	4319      	orrs	r1, r3
10004bd8:	2838      	cmp	r0, #56	; 0x38
10004bda:	dd00      	ble.n	10004bde <__aeabi_dadd+0xd6>
10004bdc:	e0ec      	b.n	10004db8 <__aeabi_dadd+0x2b0>
10004bde:	281f      	cmp	r0, #31
10004be0:	dd00      	ble.n	10004be4 <__aeabi_dadd+0xdc>
10004be2:	e121      	b.n	10004e28 <__aeabi_dadd+0x320>
10004be4:	2220      	movs	r2, #32
10004be6:	1c0e      	adds	r6, r1, #0
10004be8:	4663      	mov	r3, ip
10004bea:	1a12      	subs	r2, r2, r0
10004bec:	4096      	lsls	r6, r2
10004bee:	40c3      	lsrs	r3, r0
10004bf0:	4333      	orrs	r3, r6
10004bf2:	4666      	mov	r6, ip
10004bf4:	4096      	lsls	r6, r2
10004bf6:	1c32      	adds	r2, r6, #0
10004bf8:	1e56      	subs	r6, r2, #1
10004bfa:	41b2      	sbcs	r2, r6
10004bfc:	4313      	orrs	r3, r2
10004bfe:	1c0a      	adds	r2, r1, #0
10004c00:	40c2      	lsrs	r2, r0
10004c02:	1aeb      	subs	r3, r5, r3
10004c04:	429d      	cmp	r5, r3
10004c06:	41b6      	sbcs	r6, r6
10004c08:	1c1d      	adds	r5, r3, #0
10004c0a:	1aba      	subs	r2, r7, r2
10004c0c:	4276      	negs	r6, r6
10004c0e:	1b97      	subs	r7, r2, r6
10004c10:	023b      	lsls	r3, r7, #8
10004c12:	d400      	bmi.n	10004c16 <__aeabi_dadd+0x10e>
10004c14:	e097      	b.n	10004d46 <__aeabi_dadd+0x23e>
10004c16:	027a      	lsls	r2, r7, #9
10004c18:	0a56      	lsrs	r6, r2, #9
10004c1a:	2e00      	cmp	r6, #0
10004c1c:	d100      	bne.n	10004c20 <__aeabi_dadd+0x118>
10004c1e:	e0b6      	b.n	10004d8e <__aeabi_dadd+0x286>
10004c20:	1c30      	adds	r0, r6, #0
10004c22:	f7fe f96b 	bl	10002efc <__clzsi2>
10004c26:	1c03      	adds	r3, r0, #0
10004c28:	3b08      	subs	r3, #8
10004c2a:	2b1f      	cmp	r3, #31
10004c2c:	dd00      	ble.n	10004c30 <__aeabi_dadd+0x128>
10004c2e:	e0b7      	b.n	10004da0 <__aeabi_dadd+0x298>
10004c30:	409e      	lsls	r6, r3
10004c32:	1c37      	adds	r7, r6, #0
10004c34:	2628      	movs	r6, #40	; 0x28
10004c36:	1c2a      	adds	r2, r5, #0
10004c38:	1a36      	subs	r6, r6, r0
10004c3a:	40f2      	lsrs	r2, r6
10004c3c:	1c16      	adds	r6, r2, #0
10004c3e:	409d      	lsls	r5, r3
10004c40:	433e      	orrs	r6, r7
10004c42:	429c      	cmp	r4, r3
10004c44:	dd00      	ble.n	10004c48 <__aeabi_dadd+0x140>
10004c46:	e0b2      	b.n	10004dae <__aeabi_dadd+0x2a6>
10004c48:	1b1c      	subs	r4, r3, r4
10004c4a:	1c62      	adds	r2, r4, #1
10004c4c:	2a1f      	cmp	r2, #31
10004c4e:	dd00      	ble.n	10004c52 <__aeabi_dadd+0x14a>
10004c50:	e0d8      	b.n	10004e04 <__aeabi_dadd+0x2fc>
10004c52:	231f      	movs	r3, #31
10004c54:	1c29      	adds	r1, r5, #0
10004c56:	1b1c      	subs	r4, r3, r4
10004c58:	1c33      	adds	r3, r6, #0
10004c5a:	40a5      	lsls	r5, r4
10004c5c:	40a3      	lsls	r3, r4
10004c5e:	40d1      	lsrs	r1, r2
10004c60:	1e6c      	subs	r4, r5, #1
10004c62:	41a5      	sbcs	r5, r4
10004c64:	40d6      	lsrs	r6, r2
10004c66:	4319      	orrs	r1, r3
10004c68:	430d      	orrs	r5, r1
10004c6a:	1c37      	adds	r7, r6, #0
10004c6c:	2400      	movs	r4, #0
10004c6e:	e773      	b.n	10004b58 <__aeabi_dadd+0x50>
10004c70:	2380      	movs	r3, #128	; 0x80
10004c72:	041b      	lsls	r3, r3, #16
10004c74:	403b      	ands	r3, r7
10004c76:	4646      	mov	r6, r8
10004c78:	d000      	beq.n	10004c7c <__aeabi_dadd+0x174>
10004c7a:	e782      	b.n	10004b82 <__aeabi_dadd+0x7a>
10004c7c:	4b8d      	ldr	r3, [pc, #564]	; (10004eb4 <__aeabi_dadd+0x3ac>)
10004c7e:	08ed      	lsrs	r5, r5, #3
10004c80:	0778      	lsls	r0, r7, #29
10004c82:	4305      	orrs	r5, r0
10004c84:	08fa      	lsrs	r2, r7, #3
10004c86:	429c      	cmp	r4, r3
10004c88:	d032      	beq.n	10004cf0 <__aeabi_dadd+0x1e8>
10004c8a:	0312      	lsls	r2, r2, #12
10004c8c:	0564      	lsls	r4, r4, #21
10004c8e:	0b12      	lsrs	r2, r2, #12
10004c90:	0d64      	lsrs	r4, r4, #21
10004c92:	e785      	b.n	10004ba0 <__aeabi_dadd+0x98>
10004c94:	1aa3      	subs	r3, r4, r2
10004c96:	2b00      	cmp	r3, #0
10004c98:	dc00      	bgt.n	10004c9c <__aeabi_dadd+0x194>
10004c9a:	e094      	b.n	10004dc6 <__aeabi_dadd+0x2be>
10004c9c:	2a00      	cmp	r2, #0
10004c9e:	d03c      	beq.n	10004d1a <__aeabi_dadd+0x212>
10004ca0:	4a84      	ldr	r2, [pc, #528]	; (10004eb4 <__aeabi_dadd+0x3ac>)
10004ca2:	4294      	cmp	r4, r2
10004ca4:	d100      	bne.n	10004ca8 <__aeabi_dadd+0x1a0>
10004ca6:	e757      	b.n	10004b58 <__aeabi_dadd+0x50>
10004ca8:	2280      	movs	r2, #128	; 0x80
10004caa:	0412      	lsls	r2, r2, #16
10004cac:	4311      	orrs	r1, r2
10004cae:	2b38      	cmp	r3, #56	; 0x38
10004cb0:	dc00      	bgt.n	10004cb4 <__aeabi_dadd+0x1ac>
10004cb2:	e105      	b.n	10004ec0 <__aeabi_dadd+0x3b8>
10004cb4:	4663      	mov	r3, ip
10004cb6:	4319      	orrs	r1, r3
10004cb8:	1e48      	subs	r0, r1, #1
10004cba:	4181      	sbcs	r1, r0
10004cbc:	2200      	movs	r2, #0
10004cbe:	b2c8      	uxtb	r0, r1
10004cc0:	1940      	adds	r0, r0, r5
10004cc2:	42a8      	cmp	r0, r5
10004cc4:	419b      	sbcs	r3, r3
10004cc6:	1c05      	adds	r5, r0, #0
10004cc8:	19d2      	adds	r2, r2, r7
10004cca:	425b      	negs	r3, r3
10004ccc:	18d7      	adds	r7, r2, r3
10004cce:	023b      	lsls	r3, r7, #8
10004cd0:	d539      	bpl.n	10004d46 <__aeabi_dadd+0x23e>
10004cd2:	4b78      	ldr	r3, [pc, #480]	; (10004eb4 <__aeabi_dadd+0x3ac>)
10004cd4:	3401      	adds	r4, #1
10004cd6:	429c      	cmp	r4, r3
10004cd8:	d100      	bne.n	10004cdc <__aeabi_dadd+0x1d4>
10004cda:	e14c      	b.n	10004f76 <__aeabi_dadd+0x46e>
10004cdc:	2001      	movs	r0, #1
10004cde:	4a76      	ldr	r2, [pc, #472]	; (10004eb8 <__aeabi_dadd+0x3b0>)
10004ce0:	086b      	lsrs	r3, r5, #1
10004ce2:	403a      	ands	r2, r7
10004ce4:	4028      	ands	r0, r5
10004ce6:	4318      	orrs	r0, r3
10004ce8:	07d5      	lsls	r5, r2, #31
10004cea:	4305      	orrs	r5, r0
10004cec:	0857      	lsrs	r7, r2, #1
10004cee:	e733      	b.n	10004b58 <__aeabi_dadd+0x50>
10004cf0:	1c2b      	adds	r3, r5, #0
10004cf2:	4313      	orrs	r3, r2
10004cf4:	d048      	beq.n	10004d88 <__aeabi_dadd+0x280>
10004cf6:	2380      	movs	r3, #128	; 0x80
10004cf8:	031b      	lsls	r3, r3, #12
10004cfa:	431a      	orrs	r2, r3
10004cfc:	0312      	lsls	r2, r2, #12
10004cfe:	0b12      	lsrs	r2, r2, #12
10004d00:	e74e      	b.n	10004ba0 <__aeabi_dadd+0x98>
10004d02:	3801      	subs	r0, #1
10004d04:	2800      	cmp	r0, #0
10004d06:	d178      	bne.n	10004dfa <__aeabi_dadd+0x2f2>
10004d08:	4663      	mov	r3, ip
10004d0a:	1aee      	subs	r6, r5, r3
10004d0c:	42b5      	cmp	r5, r6
10004d0e:	419b      	sbcs	r3, r3
10004d10:	1a7a      	subs	r2, r7, r1
10004d12:	425b      	negs	r3, r3
10004d14:	1ad7      	subs	r7, r2, r3
10004d16:	1c35      	adds	r5, r6, #0
10004d18:	e77a      	b.n	10004c10 <__aeabi_dadd+0x108>
10004d1a:	1c02      	adds	r2, r0, #0
10004d1c:	430a      	orrs	r2, r1
10004d1e:	d100      	bne.n	10004d22 <__aeabi_dadd+0x21a>
10004d20:	e71a      	b.n	10004b58 <__aeabi_dadd+0x50>
10004d22:	3b01      	subs	r3, #1
10004d24:	2b00      	cmp	r3, #0
10004d26:	d000      	beq.n	10004d2a <__aeabi_dadd+0x222>
10004d28:	e0f2      	b.n	10004f10 <__aeabi_dadd+0x408>
10004d2a:	1940      	adds	r0, r0, r5
10004d2c:	42a8      	cmp	r0, r5
10004d2e:	419b      	sbcs	r3, r3
10004d30:	19ca      	adds	r2, r1, r7
10004d32:	425b      	negs	r3, r3
10004d34:	18d7      	adds	r7, r2, r3
10004d36:	1c05      	adds	r5, r0, #0
10004d38:	e7c9      	b.n	10004cce <__aeabi_dadd+0x1c6>
10004d3a:	1c13      	adds	r3, r2, #0
10004d3c:	4333      	orrs	r3, r6
10004d3e:	d100      	bne.n	10004d42 <__aeabi_dadd+0x23a>
10004d40:	e118      	b.n	10004f74 <__aeabi_dadd+0x46c>
10004d42:	1c17      	adds	r7, r2, #0
10004d44:	1c35      	adds	r5, r6, #0
10004d46:	4646      	mov	r6, r8
10004d48:	076b      	lsls	r3, r5, #29
10004d4a:	d000      	beq.n	10004d4e <__aeabi_dadd+0x246>
10004d4c:	e707      	b.n	10004b5e <__aeabi_dadd+0x56>
10004d4e:	e795      	b.n	10004c7c <__aeabi_dadd+0x174>
10004d50:	2800      	cmp	r0, #0
10004d52:	d17a      	bne.n	10004e4a <__aeabi_dadd+0x342>
10004d54:	1c62      	adds	r2, r4, #1
10004d56:	0552      	lsls	r2, r2, #21
10004d58:	0d52      	lsrs	r2, r2, #21
10004d5a:	2a01      	cmp	r2, #1
10004d5c:	dc00      	bgt.n	10004d60 <__aeabi_dadd+0x258>
10004d5e:	e0fb      	b.n	10004f58 <__aeabi_dadd+0x450>
10004d60:	4662      	mov	r2, ip
10004d62:	1aaa      	subs	r2, r5, r2
10004d64:	4295      	cmp	r5, r2
10004d66:	41b6      	sbcs	r6, r6
10004d68:	4691      	mov	r9, r2
10004d6a:	1a78      	subs	r0, r7, r1
10004d6c:	4272      	negs	r2, r6
10004d6e:	1a86      	subs	r6, r0, r2
10004d70:	0232      	lsls	r2, r6, #8
10004d72:	d400      	bmi.n	10004d76 <__aeabi_dadd+0x26e>
10004d74:	e093      	b.n	10004e9e <__aeabi_dadd+0x396>
10004d76:	4662      	mov	r2, ip
10004d78:	1b55      	subs	r5, r2, r5
10004d7a:	45ac      	cmp	ip, r5
10004d7c:	4180      	sbcs	r0, r0
10004d7e:	1bcf      	subs	r7, r1, r7
10004d80:	4240      	negs	r0, r0
10004d82:	1a3e      	subs	r6, r7, r0
10004d84:	4698      	mov	r8, r3
10004d86:	e748      	b.n	10004c1a <__aeabi_dadd+0x112>
10004d88:	2200      	movs	r2, #0
10004d8a:	2500      	movs	r5, #0
10004d8c:	e708      	b.n	10004ba0 <__aeabi_dadd+0x98>
10004d8e:	1c28      	adds	r0, r5, #0
10004d90:	f7fe f8b4 	bl	10002efc <__clzsi2>
10004d94:	3020      	adds	r0, #32
10004d96:	1c03      	adds	r3, r0, #0
10004d98:	3b08      	subs	r3, #8
10004d9a:	2b1f      	cmp	r3, #31
10004d9c:	dc00      	bgt.n	10004da0 <__aeabi_dadd+0x298>
10004d9e:	e747      	b.n	10004c30 <__aeabi_dadd+0x128>
10004da0:	3828      	subs	r0, #40	; 0x28
10004da2:	4085      	lsls	r5, r0
10004da4:	1c2e      	adds	r6, r5, #0
10004da6:	2500      	movs	r5, #0
10004da8:	429c      	cmp	r4, r3
10004daa:	dc00      	bgt.n	10004dae <__aeabi_dadd+0x2a6>
10004dac:	e74c      	b.n	10004c48 <__aeabi_dadd+0x140>
10004dae:	4a42      	ldr	r2, [pc, #264]	; (10004eb8 <__aeabi_dadd+0x3b0>)
10004db0:	1ae4      	subs	r4, r4, r3
10004db2:	4016      	ands	r6, r2
10004db4:	1c37      	adds	r7, r6, #0
10004db6:	e6cf      	b.n	10004b58 <__aeabi_dadd+0x50>
10004db8:	4663      	mov	r3, ip
10004dba:	4319      	orrs	r1, r3
10004dbc:	1e4b      	subs	r3, r1, #1
10004dbe:	4199      	sbcs	r1, r3
10004dc0:	2200      	movs	r2, #0
10004dc2:	b2cb      	uxtb	r3, r1
10004dc4:	e71d      	b.n	10004c02 <__aeabi_dadd+0xfa>
10004dc6:	2b00      	cmp	r3, #0
10004dc8:	d000      	beq.n	10004dcc <__aeabi_dadd+0x2c4>
10004dca:	e0f2      	b.n	10004fb2 <__aeabi_dadd+0x4aa>
10004dcc:	1c60      	adds	r0, r4, #1
10004dce:	0543      	lsls	r3, r0, #21
10004dd0:	0d5b      	lsrs	r3, r3, #21
10004dd2:	2b01      	cmp	r3, #1
10004dd4:	dc00      	bgt.n	10004dd8 <__aeabi_dadd+0x2d0>
10004dd6:	e0a4      	b.n	10004f22 <__aeabi_dadd+0x41a>
10004dd8:	4b36      	ldr	r3, [pc, #216]	; (10004eb4 <__aeabi_dadd+0x3ac>)
10004dda:	4298      	cmp	r0, r3
10004ddc:	d100      	bne.n	10004de0 <__aeabi_dadd+0x2d8>
10004dde:	e121      	b.n	10005024 <__aeabi_dadd+0x51c>
10004de0:	4663      	mov	r3, ip
10004de2:	195c      	adds	r4, r3, r5
10004de4:	42ac      	cmp	r4, r5
10004de6:	419b      	sbcs	r3, r3
10004de8:	19cf      	adds	r7, r1, r7
10004dea:	425b      	negs	r3, r3
10004dec:	18fa      	adds	r2, r7, r3
10004dee:	0864      	lsrs	r4, r4, #1
10004df0:	07d5      	lsls	r5, r2, #31
10004df2:	4325      	orrs	r5, r4
10004df4:	0857      	lsrs	r7, r2, #1
10004df6:	1c04      	adds	r4, r0, #0
10004df8:	e6ae      	b.n	10004b58 <__aeabi_dadd+0x50>
10004dfa:	4b2e      	ldr	r3, [pc, #184]	; (10004eb4 <__aeabi_dadd+0x3ac>)
10004dfc:	429c      	cmp	r4, r3
10004dfe:	d000      	beq.n	10004e02 <__aeabi_dadd+0x2fa>
10004e00:	e6ea      	b.n	10004bd8 <__aeabi_dadd+0xd0>
10004e02:	e6a9      	b.n	10004b58 <__aeabi_dadd+0x50>
10004e04:	1c21      	adds	r1, r4, #0
10004e06:	1c33      	adds	r3, r6, #0
10004e08:	391f      	subs	r1, #31
10004e0a:	40cb      	lsrs	r3, r1
10004e0c:	1c19      	adds	r1, r3, #0
10004e0e:	2a20      	cmp	r2, #32
10004e10:	d100      	bne.n	10004e14 <__aeabi_dadd+0x30c>
10004e12:	e082      	b.n	10004f1a <__aeabi_dadd+0x412>
10004e14:	233f      	movs	r3, #63	; 0x3f
10004e16:	1b1c      	subs	r4, r3, r4
10004e18:	40a6      	lsls	r6, r4
10004e1a:	4335      	orrs	r5, r6
10004e1c:	1e6e      	subs	r6, r5, #1
10004e1e:	41b5      	sbcs	r5, r6
10004e20:	2700      	movs	r7, #0
10004e22:	430d      	orrs	r5, r1
10004e24:	2400      	movs	r4, #0
10004e26:	e78e      	b.n	10004d46 <__aeabi_dadd+0x23e>
10004e28:	1c03      	adds	r3, r0, #0
10004e2a:	1c0e      	adds	r6, r1, #0
10004e2c:	3b20      	subs	r3, #32
10004e2e:	40de      	lsrs	r6, r3
10004e30:	2820      	cmp	r0, #32
10004e32:	d074      	beq.n	10004f1e <__aeabi_dadd+0x416>
10004e34:	2340      	movs	r3, #64	; 0x40
10004e36:	1a1b      	subs	r3, r3, r0
10004e38:	4099      	lsls	r1, r3
10004e3a:	1c0b      	adds	r3, r1, #0
10004e3c:	4662      	mov	r2, ip
10004e3e:	4313      	orrs	r3, r2
10004e40:	1e59      	subs	r1, r3, #1
10004e42:	418b      	sbcs	r3, r1
10004e44:	2200      	movs	r2, #0
10004e46:	4333      	orrs	r3, r6
10004e48:	e6db      	b.n	10004c02 <__aeabi_dadd+0xfa>
10004e4a:	2c00      	cmp	r4, #0
10004e4c:	d050      	beq.n	10004ef0 <__aeabi_dadd+0x3e8>
10004e4e:	4c19      	ldr	r4, [pc, #100]	; (10004eb4 <__aeabi_dadd+0x3ac>)
10004e50:	42a2      	cmp	r2, r4
10004e52:	d100      	bne.n	10004e56 <__aeabi_dadd+0x34e>
10004e54:	e0a8      	b.n	10004fa8 <__aeabi_dadd+0x4a0>
10004e56:	2480      	movs	r4, #128	; 0x80
10004e58:	0424      	lsls	r4, r4, #16
10004e5a:	4240      	negs	r0, r0
10004e5c:	4327      	orrs	r7, r4
10004e5e:	2838      	cmp	r0, #56	; 0x38
10004e60:	dd00      	ble.n	10004e64 <__aeabi_dadd+0x35c>
10004e62:	e0d9      	b.n	10005018 <__aeabi_dadd+0x510>
10004e64:	281f      	cmp	r0, #31
10004e66:	dd00      	ble.n	10004e6a <__aeabi_dadd+0x362>
10004e68:	e139      	b.n	100050de <__aeabi_dadd+0x5d6>
10004e6a:	2420      	movs	r4, #32
10004e6c:	1c3e      	adds	r6, r7, #0
10004e6e:	1a24      	subs	r4, r4, r0
10004e70:	40a6      	lsls	r6, r4
10004e72:	46b0      	mov	r8, r6
10004e74:	1c2e      	adds	r6, r5, #0
10004e76:	46a1      	mov	r9, r4
10004e78:	40c6      	lsrs	r6, r0
10004e7a:	4644      	mov	r4, r8
10004e7c:	4326      	orrs	r6, r4
10004e7e:	464c      	mov	r4, r9
10004e80:	40a5      	lsls	r5, r4
10004e82:	1e6c      	subs	r4, r5, #1
10004e84:	41a5      	sbcs	r5, r4
10004e86:	40c7      	lsrs	r7, r0
10004e88:	4335      	orrs	r5, r6
10004e8a:	4660      	mov	r0, ip
10004e8c:	1b45      	subs	r5, r0, r5
10004e8e:	1bcf      	subs	r7, r1, r7
10004e90:	45ac      	cmp	ip, r5
10004e92:	4189      	sbcs	r1, r1
10004e94:	4249      	negs	r1, r1
10004e96:	1a7f      	subs	r7, r7, r1
10004e98:	1c14      	adds	r4, r2, #0
10004e9a:	4698      	mov	r8, r3
10004e9c:	e6b8      	b.n	10004c10 <__aeabi_dadd+0x108>
10004e9e:	464b      	mov	r3, r9
10004ea0:	464d      	mov	r5, r9
10004ea2:	4333      	orrs	r3, r6
10004ea4:	d000      	beq.n	10004ea8 <__aeabi_dadd+0x3a0>
10004ea6:	e6b8      	b.n	10004c1a <__aeabi_dadd+0x112>
10004ea8:	2600      	movs	r6, #0
10004eaa:	2700      	movs	r7, #0
10004eac:	2400      	movs	r4, #0
10004eae:	2500      	movs	r5, #0
10004eb0:	e6e4      	b.n	10004c7c <__aeabi_dadd+0x174>
10004eb2:	46c0      	nop			; (mov r8, r8)
10004eb4:	000007ff 	.word	0x000007ff
10004eb8:	ff7fffff 	.word	0xff7fffff
10004ebc:	800fffff 	.word	0x800fffff
10004ec0:	2b1f      	cmp	r3, #31
10004ec2:	dc5b      	bgt.n	10004f7c <__aeabi_dadd+0x474>
10004ec4:	2220      	movs	r2, #32
10004ec6:	1c08      	adds	r0, r1, #0
10004ec8:	1ad2      	subs	r2, r2, r3
10004eca:	4090      	lsls	r0, r2
10004ecc:	4681      	mov	r9, r0
10004ece:	4660      	mov	r0, ip
10004ed0:	4692      	mov	sl, r2
10004ed2:	40d8      	lsrs	r0, r3
10004ed4:	464a      	mov	r2, r9
10004ed6:	4310      	orrs	r0, r2
10004ed8:	4681      	mov	r9, r0
10004eda:	4652      	mov	r2, sl
10004edc:	4660      	mov	r0, ip
10004ede:	4090      	lsls	r0, r2
10004ee0:	1c02      	adds	r2, r0, #0
10004ee2:	1e50      	subs	r0, r2, #1
10004ee4:	4182      	sbcs	r2, r0
10004ee6:	4648      	mov	r0, r9
10004ee8:	4310      	orrs	r0, r2
10004eea:	1c0a      	adds	r2, r1, #0
10004eec:	40da      	lsrs	r2, r3
10004eee:	e6e7      	b.n	10004cc0 <__aeabi_dadd+0x1b8>
10004ef0:	1c3c      	adds	r4, r7, #0
10004ef2:	432c      	orrs	r4, r5
10004ef4:	d058      	beq.n	10004fa8 <__aeabi_dadd+0x4a0>
10004ef6:	43c0      	mvns	r0, r0
10004ef8:	2800      	cmp	r0, #0
10004efa:	d151      	bne.n	10004fa0 <__aeabi_dadd+0x498>
10004efc:	4660      	mov	r0, ip
10004efe:	1b45      	subs	r5, r0, r5
10004f00:	45ac      	cmp	ip, r5
10004f02:	4180      	sbcs	r0, r0
10004f04:	1bcf      	subs	r7, r1, r7
10004f06:	4240      	negs	r0, r0
10004f08:	1a3f      	subs	r7, r7, r0
10004f0a:	1c14      	adds	r4, r2, #0
10004f0c:	4698      	mov	r8, r3
10004f0e:	e67f      	b.n	10004c10 <__aeabi_dadd+0x108>
10004f10:	4a8f      	ldr	r2, [pc, #572]	; (10005150 <__aeabi_dadd+0x648>)
10004f12:	4294      	cmp	r4, r2
10004f14:	d000      	beq.n	10004f18 <__aeabi_dadd+0x410>
10004f16:	e6ca      	b.n	10004cae <__aeabi_dadd+0x1a6>
10004f18:	e61e      	b.n	10004b58 <__aeabi_dadd+0x50>
10004f1a:	2600      	movs	r6, #0
10004f1c:	e77d      	b.n	10004e1a <__aeabi_dadd+0x312>
10004f1e:	2300      	movs	r3, #0
10004f20:	e78c      	b.n	10004e3c <__aeabi_dadd+0x334>
10004f22:	1c3b      	adds	r3, r7, #0
10004f24:	432b      	orrs	r3, r5
10004f26:	2c00      	cmp	r4, #0
10004f28:	d000      	beq.n	10004f2c <__aeabi_dadd+0x424>
10004f2a:	e0bd      	b.n	100050a8 <__aeabi_dadd+0x5a0>
10004f2c:	2b00      	cmp	r3, #0
10004f2e:	d100      	bne.n	10004f32 <__aeabi_dadd+0x42a>
10004f30:	e0f5      	b.n	1000511e <__aeabi_dadd+0x616>
10004f32:	4663      	mov	r3, ip
10004f34:	430b      	orrs	r3, r1
10004f36:	d100      	bne.n	10004f3a <__aeabi_dadd+0x432>
10004f38:	e60e      	b.n	10004b58 <__aeabi_dadd+0x50>
10004f3a:	4663      	mov	r3, ip
10004f3c:	195b      	adds	r3, r3, r5
10004f3e:	42ab      	cmp	r3, r5
10004f40:	4180      	sbcs	r0, r0
10004f42:	19ca      	adds	r2, r1, r7
10004f44:	4240      	negs	r0, r0
10004f46:	1817      	adds	r7, r2, r0
10004f48:	023a      	lsls	r2, r7, #8
10004f4a:	d400      	bmi.n	10004f4e <__aeabi_dadd+0x446>
10004f4c:	e0fc      	b.n	10005148 <__aeabi_dadd+0x640>
10004f4e:	4a81      	ldr	r2, [pc, #516]	; (10005154 <__aeabi_dadd+0x64c>)
10004f50:	1c1d      	adds	r5, r3, #0
10004f52:	4017      	ands	r7, r2
10004f54:	3401      	adds	r4, #1
10004f56:	e5ff      	b.n	10004b58 <__aeabi_dadd+0x50>
10004f58:	1c3a      	adds	r2, r7, #0
10004f5a:	432a      	orrs	r2, r5
10004f5c:	2c00      	cmp	r4, #0
10004f5e:	d151      	bne.n	10005004 <__aeabi_dadd+0x4fc>
10004f60:	2a00      	cmp	r2, #0
10004f62:	d000      	beq.n	10004f66 <__aeabi_dadd+0x45e>
10004f64:	e085      	b.n	10005072 <__aeabi_dadd+0x56a>
10004f66:	4662      	mov	r2, ip
10004f68:	430a      	orrs	r2, r1
10004f6a:	d003      	beq.n	10004f74 <__aeabi_dadd+0x46c>
10004f6c:	1c0f      	adds	r7, r1, #0
10004f6e:	4665      	mov	r5, ip
10004f70:	4698      	mov	r8, r3
10004f72:	e5f1      	b.n	10004b58 <__aeabi_dadd+0x50>
10004f74:	2600      	movs	r6, #0
10004f76:	2700      	movs	r7, #0
10004f78:	2500      	movs	r5, #0
10004f7a:	e67f      	b.n	10004c7c <__aeabi_dadd+0x174>
10004f7c:	1c18      	adds	r0, r3, #0
10004f7e:	1c0a      	adds	r2, r1, #0
10004f80:	3820      	subs	r0, #32
10004f82:	40c2      	lsrs	r2, r0
10004f84:	2b20      	cmp	r3, #32
10004f86:	d100      	bne.n	10004f8a <__aeabi_dadd+0x482>
10004f88:	e0a7      	b.n	100050da <__aeabi_dadd+0x5d2>
10004f8a:	2040      	movs	r0, #64	; 0x40
10004f8c:	1ac0      	subs	r0, r0, r3
10004f8e:	4081      	lsls	r1, r0
10004f90:	1c08      	adds	r0, r1, #0
10004f92:	4663      	mov	r3, ip
10004f94:	4318      	orrs	r0, r3
10004f96:	1e41      	subs	r1, r0, #1
10004f98:	4188      	sbcs	r0, r1
10004f9a:	4310      	orrs	r0, r2
10004f9c:	2200      	movs	r2, #0
10004f9e:	e68f      	b.n	10004cc0 <__aeabi_dadd+0x1b8>
10004fa0:	4c6b      	ldr	r4, [pc, #428]	; (10005150 <__aeabi_dadd+0x648>)
10004fa2:	42a2      	cmp	r2, r4
10004fa4:	d000      	beq.n	10004fa8 <__aeabi_dadd+0x4a0>
10004fa6:	e75a      	b.n	10004e5e <__aeabi_dadd+0x356>
10004fa8:	1c0f      	adds	r7, r1, #0
10004faa:	4665      	mov	r5, ip
10004fac:	1c14      	adds	r4, r2, #0
10004fae:	4698      	mov	r8, r3
10004fb0:	e5d2      	b.n	10004b58 <__aeabi_dadd+0x50>
10004fb2:	2c00      	cmp	r4, #0
10004fb4:	d13a      	bne.n	1000502c <__aeabi_dadd+0x524>
10004fb6:	1c38      	adds	r0, r7, #0
10004fb8:	4328      	orrs	r0, r5
10004fba:	d071      	beq.n	100050a0 <__aeabi_dadd+0x598>
10004fbc:	43db      	mvns	r3, r3
10004fbe:	2b00      	cmp	r3, #0
10004fc0:	d018      	beq.n	10004ff4 <__aeabi_dadd+0x4ec>
10004fc2:	4863      	ldr	r0, [pc, #396]	; (10005150 <__aeabi_dadd+0x648>)
10004fc4:	4282      	cmp	r2, r0
10004fc6:	d06b      	beq.n	100050a0 <__aeabi_dadd+0x598>
10004fc8:	2b38      	cmp	r3, #56	; 0x38
10004fca:	dd00      	ble.n	10004fce <__aeabi_dadd+0x4c6>
10004fcc:	e09d      	b.n	1000510a <__aeabi_dadd+0x602>
10004fce:	2b1f      	cmp	r3, #31
10004fd0:	dd00      	ble.n	10004fd4 <__aeabi_dadd+0x4cc>
10004fd2:	e0a7      	b.n	10005124 <__aeabi_dadd+0x61c>
10004fd4:	2020      	movs	r0, #32
10004fd6:	1c3c      	adds	r4, r7, #0
10004fd8:	1ac0      	subs	r0, r0, r3
10004fda:	4084      	lsls	r4, r0
10004fdc:	46a1      	mov	r9, r4
10004fde:	1c2c      	adds	r4, r5, #0
10004fe0:	4682      	mov	sl, r0
10004fe2:	40dc      	lsrs	r4, r3
10004fe4:	4648      	mov	r0, r9
10004fe6:	4304      	orrs	r4, r0
10004fe8:	4650      	mov	r0, sl
10004fea:	4085      	lsls	r5, r0
10004fec:	1e68      	subs	r0, r5, #1
10004fee:	4185      	sbcs	r5, r0
10004ff0:	40df      	lsrs	r7, r3
10004ff2:	4325      	orrs	r5, r4
10004ff4:	4465      	add	r5, ip
10004ff6:	4565      	cmp	r5, ip
10004ff8:	419b      	sbcs	r3, r3
10004ffa:	187f      	adds	r7, r7, r1
10004ffc:	425b      	negs	r3, r3
10004ffe:	18ff      	adds	r7, r7, r3
10005000:	1c14      	adds	r4, r2, #0
10005002:	e664      	b.n	10004cce <__aeabi_dadd+0x1c6>
10005004:	2a00      	cmp	r2, #0
10005006:	d119      	bne.n	1000503c <__aeabi_dadd+0x534>
10005008:	4662      	mov	r2, ip
1000500a:	430a      	orrs	r2, r1
1000500c:	d077      	beq.n	100050fe <__aeabi_dadd+0x5f6>
1000500e:	1c0f      	adds	r7, r1, #0
10005010:	4665      	mov	r5, ip
10005012:	4698      	mov	r8, r3
10005014:	4c4e      	ldr	r4, [pc, #312]	; (10005150 <__aeabi_dadd+0x648>)
10005016:	e59f      	b.n	10004b58 <__aeabi_dadd+0x50>
10005018:	433d      	orrs	r5, r7
1000501a:	1e6f      	subs	r7, r5, #1
1000501c:	41bd      	sbcs	r5, r7
1000501e:	2700      	movs	r7, #0
10005020:	b2ed      	uxtb	r5, r5
10005022:	e732      	b.n	10004e8a <__aeabi_dadd+0x382>
10005024:	1c04      	adds	r4, r0, #0
10005026:	2700      	movs	r7, #0
10005028:	2500      	movs	r5, #0
1000502a:	e627      	b.n	10004c7c <__aeabi_dadd+0x174>
1000502c:	4848      	ldr	r0, [pc, #288]	; (10005150 <__aeabi_dadd+0x648>)
1000502e:	4282      	cmp	r2, r0
10005030:	d036      	beq.n	100050a0 <__aeabi_dadd+0x598>
10005032:	2080      	movs	r0, #128	; 0x80
10005034:	0400      	lsls	r0, r0, #16
10005036:	425b      	negs	r3, r3
10005038:	4307      	orrs	r7, r0
1000503a:	e7c5      	b.n	10004fc8 <__aeabi_dadd+0x4c0>
1000503c:	4662      	mov	r2, ip
1000503e:	430a      	orrs	r2, r1
10005040:	d049      	beq.n	100050d6 <__aeabi_dadd+0x5ce>
10005042:	2480      	movs	r4, #128	; 0x80
10005044:	08ed      	lsrs	r5, r5, #3
10005046:	0778      	lsls	r0, r7, #29
10005048:	08fa      	lsrs	r2, r7, #3
1000504a:	0324      	lsls	r4, r4, #12
1000504c:	4328      	orrs	r0, r5
1000504e:	4222      	tst	r2, r4
10005050:	d009      	beq.n	10005066 <__aeabi_dadd+0x55e>
10005052:	08ce      	lsrs	r6, r1, #3
10005054:	4226      	tst	r6, r4
10005056:	d106      	bne.n	10005066 <__aeabi_dadd+0x55e>
10005058:	4662      	mov	r2, ip
1000505a:	074f      	lsls	r7, r1, #29
1000505c:	1c38      	adds	r0, r7, #0
1000505e:	08d2      	lsrs	r2, r2, #3
10005060:	4310      	orrs	r0, r2
10005062:	4698      	mov	r8, r3
10005064:	1c32      	adds	r2, r6, #0
10005066:	00d2      	lsls	r2, r2, #3
10005068:	0f47      	lsrs	r7, r0, #29
1000506a:	4317      	orrs	r7, r2
1000506c:	00c5      	lsls	r5, r0, #3
1000506e:	4c38      	ldr	r4, [pc, #224]	; (10005150 <__aeabi_dadd+0x648>)
10005070:	e572      	b.n	10004b58 <__aeabi_dadd+0x50>
10005072:	4662      	mov	r2, ip
10005074:	430a      	orrs	r2, r1
10005076:	d100      	bne.n	1000507a <__aeabi_dadd+0x572>
10005078:	e56e      	b.n	10004b58 <__aeabi_dadd+0x50>
1000507a:	4662      	mov	r2, ip
1000507c:	1aae      	subs	r6, r5, r2
1000507e:	42b5      	cmp	r5, r6
10005080:	4192      	sbcs	r2, r2
10005082:	1a78      	subs	r0, r7, r1
10005084:	4252      	negs	r2, r2
10005086:	1a82      	subs	r2, r0, r2
10005088:	0210      	lsls	r0, r2, #8
1000508a:	d400      	bmi.n	1000508e <__aeabi_dadd+0x586>
1000508c:	e655      	b.n	10004d3a <__aeabi_dadd+0x232>
1000508e:	4662      	mov	r2, ip
10005090:	1b55      	subs	r5, r2, r5
10005092:	45ac      	cmp	ip, r5
10005094:	4180      	sbcs	r0, r0
10005096:	1bca      	subs	r2, r1, r7
10005098:	4240      	negs	r0, r0
1000509a:	1a17      	subs	r7, r2, r0
1000509c:	4698      	mov	r8, r3
1000509e:	e55b      	b.n	10004b58 <__aeabi_dadd+0x50>
100050a0:	1c0f      	adds	r7, r1, #0
100050a2:	4665      	mov	r5, ip
100050a4:	1c14      	adds	r4, r2, #0
100050a6:	e557      	b.n	10004b58 <__aeabi_dadd+0x50>
100050a8:	2b00      	cmp	r3, #0
100050aa:	d034      	beq.n	10005116 <__aeabi_dadd+0x60e>
100050ac:	4663      	mov	r3, ip
100050ae:	430b      	orrs	r3, r1
100050b0:	d011      	beq.n	100050d6 <__aeabi_dadd+0x5ce>
100050b2:	2480      	movs	r4, #128	; 0x80
100050b4:	08ed      	lsrs	r5, r5, #3
100050b6:	0778      	lsls	r0, r7, #29
100050b8:	08fa      	lsrs	r2, r7, #3
100050ba:	0324      	lsls	r4, r4, #12
100050bc:	4328      	orrs	r0, r5
100050be:	4222      	tst	r2, r4
100050c0:	d0d1      	beq.n	10005066 <__aeabi_dadd+0x55e>
100050c2:	08cb      	lsrs	r3, r1, #3
100050c4:	4223      	tst	r3, r4
100050c6:	d1ce      	bne.n	10005066 <__aeabi_dadd+0x55e>
100050c8:	4662      	mov	r2, ip
100050ca:	074f      	lsls	r7, r1, #29
100050cc:	1c38      	adds	r0, r7, #0
100050ce:	08d2      	lsrs	r2, r2, #3
100050d0:	4310      	orrs	r0, r2
100050d2:	1c1a      	adds	r2, r3, #0
100050d4:	e7c7      	b.n	10005066 <__aeabi_dadd+0x55e>
100050d6:	4c1e      	ldr	r4, [pc, #120]	; (10005150 <__aeabi_dadd+0x648>)
100050d8:	e53e      	b.n	10004b58 <__aeabi_dadd+0x50>
100050da:	2000      	movs	r0, #0
100050dc:	e759      	b.n	10004f92 <__aeabi_dadd+0x48a>
100050de:	1c04      	adds	r4, r0, #0
100050e0:	1c3e      	adds	r6, r7, #0
100050e2:	3c20      	subs	r4, #32
100050e4:	40e6      	lsrs	r6, r4
100050e6:	1c34      	adds	r4, r6, #0
100050e8:	2820      	cmp	r0, #32
100050ea:	d02b      	beq.n	10005144 <__aeabi_dadd+0x63c>
100050ec:	2640      	movs	r6, #64	; 0x40
100050ee:	1a30      	subs	r0, r6, r0
100050f0:	4087      	lsls	r7, r0
100050f2:	433d      	orrs	r5, r7
100050f4:	1e6f      	subs	r7, r5, #1
100050f6:	41bd      	sbcs	r5, r7
100050f8:	2700      	movs	r7, #0
100050fa:	4325      	orrs	r5, r4
100050fc:	e6c5      	b.n	10004e8a <__aeabi_dadd+0x382>
100050fe:	2780      	movs	r7, #128	; 0x80
10005100:	2600      	movs	r6, #0
10005102:	03ff      	lsls	r7, r7, #15
10005104:	4c12      	ldr	r4, [pc, #72]	; (10005150 <__aeabi_dadd+0x648>)
10005106:	2500      	movs	r5, #0
10005108:	e5b8      	b.n	10004c7c <__aeabi_dadd+0x174>
1000510a:	433d      	orrs	r5, r7
1000510c:	1e6f      	subs	r7, r5, #1
1000510e:	41bd      	sbcs	r5, r7
10005110:	2700      	movs	r7, #0
10005112:	b2ed      	uxtb	r5, r5
10005114:	e76e      	b.n	10004ff4 <__aeabi_dadd+0x4ec>
10005116:	1c0f      	adds	r7, r1, #0
10005118:	4665      	mov	r5, ip
1000511a:	4c0d      	ldr	r4, [pc, #52]	; (10005150 <__aeabi_dadd+0x648>)
1000511c:	e51c      	b.n	10004b58 <__aeabi_dadd+0x50>
1000511e:	1c0f      	adds	r7, r1, #0
10005120:	4665      	mov	r5, ip
10005122:	e519      	b.n	10004b58 <__aeabi_dadd+0x50>
10005124:	1c1c      	adds	r4, r3, #0
10005126:	1c38      	adds	r0, r7, #0
10005128:	3c20      	subs	r4, #32
1000512a:	40e0      	lsrs	r0, r4
1000512c:	1c04      	adds	r4, r0, #0
1000512e:	2b20      	cmp	r3, #32
10005130:	d00c      	beq.n	1000514c <__aeabi_dadd+0x644>
10005132:	2040      	movs	r0, #64	; 0x40
10005134:	1ac3      	subs	r3, r0, r3
10005136:	409f      	lsls	r7, r3
10005138:	433d      	orrs	r5, r7
1000513a:	1e6f      	subs	r7, r5, #1
1000513c:	41bd      	sbcs	r5, r7
1000513e:	2700      	movs	r7, #0
10005140:	4325      	orrs	r5, r4
10005142:	e757      	b.n	10004ff4 <__aeabi_dadd+0x4ec>
10005144:	2700      	movs	r7, #0
10005146:	e7d4      	b.n	100050f2 <__aeabi_dadd+0x5ea>
10005148:	1c1d      	adds	r5, r3, #0
1000514a:	e5fc      	b.n	10004d46 <__aeabi_dadd+0x23e>
1000514c:	2700      	movs	r7, #0
1000514e:	e7f3      	b.n	10005138 <__aeabi_dadd+0x630>
10005150:	000007ff 	.word	0x000007ff
10005154:	ff7fffff 	.word	0xff7fffff

10005158 <__aeabi_ddiv>:
10005158:	b5f0      	push	{r4, r5, r6, r7, lr}
1000515a:	465f      	mov	r7, fp
1000515c:	4656      	mov	r6, sl
1000515e:	464d      	mov	r5, r9
10005160:	4644      	mov	r4, r8
10005162:	b4f0      	push	{r4, r5, r6, r7}
10005164:	030f      	lsls	r7, r1, #12
10005166:	b087      	sub	sp, #28
10005168:	4698      	mov	r8, r3
1000516a:	004d      	lsls	r5, r1, #1
1000516c:	0b3b      	lsrs	r3, r7, #12
1000516e:	0fcc      	lsrs	r4, r1, #31
10005170:	1c06      	adds	r6, r0, #0
10005172:	4692      	mov	sl, r2
10005174:	4681      	mov	r9, r0
10005176:	469b      	mov	fp, r3
10005178:	0d6d      	lsrs	r5, r5, #21
1000517a:	9401      	str	r4, [sp, #4]
1000517c:	d06b      	beq.n	10005256 <__aeabi_ddiv+0xfe>
1000517e:	4b66      	ldr	r3, [pc, #408]	; (10005318 <__aeabi_ddiv+0x1c0>)
10005180:	429d      	cmp	r5, r3
10005182:	d035      	beq.n	100051f0 <__aeabi_ddiv+0x98>
10005184:	2780      	movs	r7, #128	; 0x80
10005186:	465b      	mov	r3, fp
10005188:	037f      	lsls	r7, r7, #13
1000518a:	431f      	orrs	r7, r3
1000518c:	00f3      	lsls	r3, r6, #3
1000518e:	4699      	mov	r9, r3
10005190:	4b62      	ldr	r3, [pc, #392]	; (1000531c <__aeabi_ddiv+0x1c4>)
10005192:	00ff      	lsls	r7, r7, #3
10005194:	0f40      	lsrs	r0, r0, #29
10005196:	469c      	mov	ip, r3
10005198:	4307      	orrs	r7, r0
1000519a:	2300      	movs	r3, #0
1000519c:	46bb      	mov	fp, r7
1000519e:	2600      	movs	r6, #0
100051a0:	4465      	add	r5, ip
100051a2:	9300      	str	r3, [sp, #0]
100051a4:	4642      	mov	r2, r8
100051a6:	0317      	lsls	r7, r2, #12
100051a8:	0050      	lsls	r0, r2, #1
100051aa:	0fd2      	lsrs	r2, r2, #31
100051ac:	4653      	mov	r3, sl
100051ae:	0b3f      	lsrs	r7, r7, #12
100051b0:	0d40      	lsrs	r0, r0, #21
100051b2:	4690      	mov	r8, r2
100051b4:	d100      	bne.n	100051b8 <__aeabi_ddiv+0x60>
100051b6:	e072      	b.n	1000529e <__aeabi_ddiv+0x146>
100051b8:	4a57      	ldr	r2, [pc, #348]	; (10005318 <__aeabi_ddiv+0x1c0>)
100051ba:	4290      	cmp	r0, r2
100051bc:	d067      	beq.n	1000528e <__aeabi_ddiv+0x136>
100051be:	2380      	movs	r3, #128	; 0x80
100051c0:	035b      	lsls	r3, r3, #13
100051c2:	431f      	orrs	r7, r3
100051c4:	4653      	mov	r3, sl
100051c6:	4a55      	ldr	r2, [pc, #340]	; (1000531c <__aeabi_ddiv+0x1c4>)
100051c8:	0f5b      	lsrs	r3, r3, #29
100051ca:	00ff      	lsls	r7, r7, #3
100051cc:	431f      	orrs	r7, r3
100051ce:	4694      	mov	ip, r2
100051d0:	4653      	mov	r3, sl
100051d2:	2100      	movs	r1, #0
100051d4:	00db      	lsls	r3, r3, #3
100051d6:	4460      	add	r0, ip
100051d8:	4642      	mov	r2, r8
100051da:	4062      	eors	r2, r4
100051dc:	4692      	mov	sl, r2
100051de:	1a2d      	subs	r5, r5, r0
100051e0:	430e      	orrs	r6, r1
100051e2:	2e0f      	cmp	r6, #15
100051e4:	d900      	bls.n	100051e8 <__aeabi_ddiv+0x90>
100051e6:	e0a1      	b.n	1000532c <__aeabi_ddiv+0x1d4>
100051e8:	484d      	ldr	r0, [pc, #308]	; (10005320 <__aeabi_ddiv+0x1c8>)
100051ea:	00b6      	lsls	r6, r6, #2
100051ec:	5980      	ldr	r0, [r0, r6]
100051ee:	4687      	mov	pc, r0
100051f0:	465b      	mov	r3, fp
100051f2:	431e      	orrs	r6, r3
100051f4:	d000      	beq.n	100051f8 <__aeabi_ddiv+0xa0>
100051f6:	e076      	b.n	100052e6 <__aeabi_ddiv+0x18e>
100051f8:	2300      	movs	r3, #0
100051fa:	469b      	mov	fp, r3
100051fc:	4699      	mov	r9, r3
100051fe:	3302      	adds	r3, #2
10005200:	2608      	movs	r6, #8
10005202:	9300      	str	r3, [sp, #0]
10005204:	e7ce      	b.n	100051a4 <__aeabi_ddiv+0x4c>
10005206:	4699      	mov	r9, r3
10005208:	4643      	mov	r3, r8
1000520a:	46bb      	mov	fp, r7
1000520c:	9301      	str	r3, [sp, #4]
1000520e:	9100      	str	r1, [sp, #0]
10005210:	9b00      	ldr	r3, [sp, #0]
10005212:	2b02      	cmp	r3, #2
10005214:	d16b      	bne.n	100052ee <__aeabi_ddiv+0x196>
10005216:	9b01      	ldr	r3, [sp, #4]
10005218:	469a      	mov	sl, r3
1000521a:	2100      	movs	r1, #0
1000521c:	4653      	mov	r3, sl
1000521e:	2201      	movs	r2, #1
10005220:	2700      	movs	r7, #0
10005222:	4689      	mov	r9, r1
10005224:	401a      	ands	r2, r3
10005226:	4b3c      	ldr	r3, [pc, #240]	; (10005318 <__aeabi_ddiv+0x1c0>)
10005228:	2100      	movs	r1, #0
1000522a:	033f      	lsls	r7, r7, #12
1000522c:	0d0c      	lsrs	r4, r1, #20
1000522e:	0524      	lsls	r4, r4, #20
10005230:	0b3f      	lsrs	r7, r7, #12
10005232:	4327      	orrs	r7, r4
10005234:	4c3b      	ldr	r4, [pc, #236]	; (10005324 <__aeabi_ddiv+0x1cc>)
10005236:	051b      	lsls	r3, r3, #20
10005238:	4027      	ands	r7, r4
1000523a:	431f      	orrs	r7, r3
1000523c:	007f      	lsls	r7, r7, #1
1000523e:	07d2      	lsls	r2, r2, #31
10005240:	087f      	lsrs	r7, r7, #1
10005242:	4317      	orrs	r7, r2
10005244:	4648      	mov	r0, r9
10005246:	1c39      	adds	r1, r7, #0
10005248:	b007      	add	sp, #28
1000524a:	bc3c      	pop	{r2, r3, r4, r5}
1000524c:	4690      	mov	r8, r2
1000524e:	4699      	mov	r9, r3
10005250:	46a2      	mov	sl, r4
10005252:	46ab      	mov	fp, r5
10005254:	bdf0      	pop	{r4, r5, r6, r7, pc}
10005256:	4303      	orrs	r3, r0
10005258:	d03e      	beq.n	100052d8 <__aeabi_ddiv+0x180>
1000525a:	465b      	mov	r3, fp
1000525c:	2b00      	cmp	r3, #0
1000525e:	d100      	bne.n	10005262 <__aeabi_ddiv+0x10a>
10005260:	e19c      	b.n	1000559c <__aeabi_ddiv+0x444>
10005262:	4658      	mov	r0, fp
10005264:	f7fd fe4a 	bl	10002efc <__clzsi2>
10005268:	2328      	movs	r3, #40	; 0x28
1000526a:	1c31      	adds	r1, r6, #0
1000526c:	1a1b      	subs	r3, r3, r0
1000526e:	1c02      	adds	r2, r0, #0
10005270:	465f      	mov	r7, fp
10005272:	40d9      	lsrs	r1, r3
10005274:	3a08      	subs	r2, #8
10005276:	4097      	lsls	r7, r2
10005278:	1c0b      	adds	r3, r1, #0
1000527a:	4096      	lsls	r6, r2
1000527c:	433b      	orrs	r3, r7
1000527e:	469b      	mov	fp, r3
10005280:	46b1      	mov	r9, r6
10005282:	2300      	movs	r3, #0
10005284:	4d28      	ldr	r5, [pc, #160]	; (10005328 <__aeabi_ddiv+0x1d0>)
10005286:	2600      	movs	r6, #0
10005288:	1a2d      	subs	r5, r5, r0
1000528a:	9300      	str	r3, [sp, #0]
1000528c:	e78a      	b.n	100051a4 <__aeabi_ddiv+0x4c>
1000528e:	4652      	mov	r2, sl
10005290:	2103      	movs	r1, #3
10005292:	433a      	orrs	r2, r7
10005294:	d1a0      	bne.n	100051d8 <__aeabi_ddiv+0x80>
10005296:	2700      	movs	r7, #0
10005298:	2300      	movs	r3, #0
1000529a:	2102      	movs	r1, #2
1000529c:	e79c      	b.n	100051d8 <__aeabi_ddiv+0x80>
1000529e:	4652      	mov	r2, sl
100052a0:	433a      	orrs	r2, r7
100052a2:	d015      	beq.n	100052d0 <__aeabi_ddiv+0x178>
100052a4:	2f00      	cmp	r7, #0
100052a6:	d100      	bne.n	100052aa <__aeabi_ddiv+0x152>
100052a8:	e185      	b.n	100055b6 <__aeabi_ddiv+0x45e>
100052aa:	1c38      	adds	r0, r7, #0
100052ac:	f7fd fe26 	bl	10002efc <__clzsi2>
100052b0:	1c02      	adds	r2, r0, #0
100052b2:	2128      	movs	r1, #40	; 0x28
100052b4:	4650      	mov	r0, sl
100052b6:	1a89      	subs	r1, r1, r2
100052b8:	1c13      	adds	r3, r2, #0
100052ba:	40c8      	lsrs	r0, r1
100052bc:	4651      	mov	r1, sl
100052be:	3b08      	subs	r3, #8
100052c0:	4099      	lsls	r1, r3
100052c2:	409f      	lsls	r7, r3
100052c4:	1c0b      	adds	r3, r1, #0
100052c6:	4307      	orrs	r7, r0
100052c8:	4817      	ldr	r0, [pc, #92]	; (10005328 <__aeabi_ddiv+0x1d0>)
100052ca:	2100      	movs	r1, #0
100052cc:	1a80      	subs	r0, r0, r2
100052ce:	e783      	b.n	100051d8 <__aeabi_ddiv+0x80>
100052d0:	2700      	movs	r7, #0
100052d2:	2300      	movs	r3, #0
100052d4:	2101      	movs	r1, #1
100052d6:	e77f      	b.n	100051d8 <__aeabi_ddiv+0x80>
100052d8:	2300      	movs	r3, #0
100052da:	469b      	mov	fp, r3
100052dc:	4699      	mov	r9, r3
100052de:	3301      	adds	r3, #1
100052e0:	2604      	movs	r6, #4
100052e2:	9300      	str	r3, [sp, #0]
100052e4:	e75e      	b.n	100051a4 <__aeabi_ddiv+0x4c>
100052e6:	2303      	movs	r3, #3
100052e8:	260c      	movs	r6, #12
100052ea:	9300      	str	r3, [sp, #0]
100052ec:	e75a      	b.n	100051a4 <__aeabi_ddiv+0x4c>
100052ee:	2b03      	cmp	r3, #3
100052f0:	d100      	bne.n	100052f4 <__aeabi_ddiv+0x19c>
100052f2:	e23c      	b.n	1000576e <__aeabi_ddiv+0x616>
100052f4:	2b01      	cmp	r3, #1
100052f6:	d000      	beq.n	100052fa <__aeabi_ddiv+0x1a2>
100052f8:	e1bf      	b.n	1000567a <__aeabi_ddiv+0x522>
100052fa:	1c1a      	adds	r2, r3, #0
100052fc:	9b01      	ldr	r3, [sp, #4]
100052fe:	401a      	ands	r2, r3
10005300:	2100      	movs	r1, #0
10005302:	2300      	movs	r3, #0
10005304:	2700      	movs	r7, #0
10005306:	4689      	mov	r9, r1
10005308:	e78e      	b.n	10005228 <__aeabi_ddiv+0xd0>
1000530a:	2300      	movs	r3, #0
1000530c:	2780      	movs	r7, #128	; 0x80
1000530e:	4699      	mov	r9, r3
10005310:	2200      	movs	r2, #0
10005312:	033f      	lsls	r7, r7, #12
10005314:	4b00      	ldr	r3, [pc, #0]	; (10005318 <__aeabi_ddiv+0x1c0>)
10005316:	e787      	b.n	10005228 <__aeabi_ddiv+0xd0>
10005318:	000007ff 	.word	0x000007ff
1000531c:	fffffc01 	.word	0xfffffc01
10005320:	10006954 	.word	0x10006954
10005324:	800fffff 	.word	0x800fffff
10005328:	fffffc0d 	.word	0xfffffc0d
1000532c:	45bb      	cmp	fp, r7
1000532e:	d900      	bls.n	10005332 <__aeabi_ddiv+0x1da>
10005330:	e151      	b.n	100055d6 <__aeabi_ddiv+0x47e>
10005332:	d100      	bne.n	10005336 <__aeabi_ddiv+0x1de>
10005334:	e14c      	b.n	100055d0 <__aeabi_ddiv+0x478>
10005336:	464a      	mov	r2, r9
10005338:	9203      	str	r2, [sp, #12]
1000533a:	2200      	movs	r2, #0
1000533c:	465c      	mov	r4, fp
1000533e:	4690      	mov	r8, r2
10005340:	3d01      	subs	r5, #1
10005342:	0e18      	lsrs	r0, r3, #24
10005344:	023f      	lsls	r7, r7, #8
10005346:	4338      	orrs	r0, r7
10005348:	021b      	lsls	r3, r3, #8
1000534a:	9301      	str	r3, [sp, #4]
1000534c:	0c03      	lsrs	r3, r0, #16
1000534e:	4699      	mov	r9, r3
10005350:	0403      	lsls	r3, r0, #16
10005352:	0c1b      	lsrs	r3, r3, #16
10005354:	4649      	mov	r1, r9
10005356:	1c06      	adds	r6, r0, #0
10005358:	1c20      	adds	r0, r4, #0
1000535a:	1c1f      	adds	r7, r3, #0
1000535c:	9300      	str	r3, [sp, #0]
1000535e:	f7fd fc4b 	bl	10002bf8 <__aeabi_uidiv>
10005362:	1c02      	adds	r2, r0, #0
10005364:	437a      	muls	r2, r7
10005366:	9002      	str	r0, [sp, #8]
10005368:	4649      	mov	r1, r9
1000536a:	1c20      	adds	r0, r4, #0
1000536c:	1c17      	adds	r7, r2, #0
1000536e:	f7fd fcc9 	bl	10002d04 <__aeabi_uidivmod>
10005372:	9b03      	ldr	r3, [sp, #12]
10005374:	0409      	lsls	r1, r1, #16
10005376:	0c1b      	lsrs	r3, r3, #16
10005378:	4319      	orrs	r1, r3
1000537a:	428f      	cmp	r7, r1
1000537c:	d90c      	bls.n	10005398 <__aeabi_ddiv+0x240>
1000537e:	9b02      	ldr	r3, [sp, #8]
10005380:	1989      	adds	r1, r1, r6
10005382:	3b01      	subs	r3, #1
10005384:	428e      	cmp	r6, r1
10005386:	d900      	bls.n	1000538a <__aeabi_ddiv+0x232>
10005388:	e152      	b.n	10005630 <__aeabi_ddiv+0x4d8>
1000538a:	428f      	cmp	r7, r1
1000538c:	d800      	bhi.n	10005390 <__aeabi_ddiv+0x238>
1000538e:	e14f      	b.n	10005630 <__aeabi_ddiv+0x4d8>
10005390:	9b02      	ldr	r3, [sp, #8]
10005392:	1989      	adds	r1, r1, r6
10005394:	3b02      	subs	r3, #2
10005396:	9302      	str	r3, [sp, #8]
10005398:	1bcc      	subs	r4, r1, r7
1000539a:	1c20      	adds	r0, r4, #0
1000539c:	4649      	mov	r1, r9
1000539e:	f7fd fc2b 	bl	10002bf8 <__aeabi_uidiv>
100053a2:	9f00      	ldr	r7, [sp, #0]
100053a4:	4683      	mov	fp, r0
100053a6:	4347      	muls	r7, r0
100053a8:	4649      	mov	r1, r9
100053aa:	1c20      	adds	r0, r4, #0
100053ac:	f7fd fcaa 	bl	10002d04 <__aeabi_uidivmod>
100053b0:	9a03      	ldr	r2, [sp, #12]
100053b2:	040b      	lsls	r3, r1, #16
100053b4:	0414      	lsls	r4, r2, #16
100053b6:	0c24      	lsrs	r4, r4, #16
100053b8:	4323      	orrs	r3, r4
100053ba:	429f      	cmp	r7, r3
100053bc:	d90d      	bls.n	100053da <__aeabi_ddiv+0x282>
100053be:	465a      	mov	r2, fp
100053c0:	199b      	adds	r3, r3, r6
100053c2:	3a01      	subs	r2, #1
100053c4:	429e      	cmp	r6, r3
100053c6:	d900      	bls.n	100053ca <__aeabi_ddiv+0x272>
100053c8:	e130      	b.n	1000562c <__aeabi_ddiv+0x4d4>
100053ca:	429f      	cmp	r7, r3
100053cc:	d800      	bhi.n	100053d0 <__aeabi_ddiv+0x278>
100053ce:	e12d      	b.n	1000562c <__aeabi_ddiv+0x4d4>
100053d0:	2202      	movs	r2, #2
100053d2:	4252      	negs	r2, r2
100053d4:	4694      	mov	ip, r2
100053d6:	199b      	adds	r3, r3, r6
100053d8:	44e3      	add	fp, ip
100053da:	9a02      	ldr	r2, [sp, #8]
100053dc:	1bdb      	subs	r3, r3, r7
100053de:	0417      	lsls	r7, r2, #16
100053e0:	465a      	mov	r2, fp
100053e2:	433a      	orrs	r2, r7
100053e4:	4693      	mov	fp, r2
100053e6:	9c01      	ldr	r4, [sp, #4]
100053e8:	0c17      	lsrs	r7, r2, #16
100053ea:	0c22      	lsrs	r2, r4, #16
100053ec:	1c10      	adds	r0, r2, #0
100053ee:	9204      	str	r2, [sp, #16]
100053f0:	465a      	mov	r2, fp
100053f2:	0411      	lsls	r1, r2, #16
100053f4:	0422      	lsls	r2, r4, #16
100053f6:	0c12      	lsrs	r2, r2, #16
100053f8:	1c14      	adds	r4, r2, #0
100053fa:	0c09      	lsrs	r1, r1, #16
100053fc:	437c      	muls	r4, r7
100053fe:	9205      	str	r2, [sp, #20]
10005400:	434a      	muls	r2, r1
10005402:	4341      	muls	r1, r0
10005404:	4347      	muls	r7, r0
10005406:	1861      	adds	r1, r4, r1
10005408:	0c10      	lsrs	r0, r2, #16
1000540a:	1809      	adds	r1, r1, r0
1000540c:	428c      	cmp	r4, r1
1000540e:	d903      	bls.n	10005418 <__aeabi_ddiv+0x2c0>
10005410:	2080      	movs	r0, #128	; 0x80
10005412:	0240      	lsls	r0, r0, #9
10005414:	4684      	mov	ip, r0
10005416:	4467      	add	r7, ip
10005418:	0c0c      	lsrs	r4, r1, #16
1000541a:	0412      	lsls	r2, r2, #16
1000541c:	0408      	lsls	r0, r1, #16
1000541e:	0c12      	lsrs	r2, r2, #16
10005420:	193c      	adds	r4, r7, r4
10005422:	1881      	adds	r1, r0, r2
10005424:	42a3      	cmp	r3, r4
10005426:	d200      	bcs.n	1000542a <__aeabi_ddiv+0x2d2>
10005428:	e0e5      	b.n	100055f6 <__aeabi_ddiv+0x49e>
1000542a:	d100      	bne.n	1000542e <__aeabi_ddiv+0x2d6>
1000542c:	e0df      	b.n	100055ee <__aeabi_ddiv+0x496>
1000542e:	1b1f      	subs	r7, r3, r4
10005430:	4643      	mov	r3, r8
10005432:	1a5c      	subs	r4, r3, r1
10005434:	45a0      	cmp	r8, r4
10005436:	4192      	sbcs	r2, r2
10005438:	4252      	negs	r2, r2
1000543a:	1abf      	subs	r7, r7, r2
1000543c:	42b7      	cmp	r7, r6
1000543e:	d100      	bne.n	10005442 <__aeabi_ddiv+0x2ea>
10005440:	e10e      	b.n	10005660 <__aeabi_ddiv+0x508>
10005442:	1c38      	adds	r0, r7, #0
10005444:	4649      	mov	r1, r9
10005446:	f7fd fbd7 	bl	10002bf8 <__aeabi_uidiv>
1000544a:	9b00      	ldr	r3, [sp, #0]
1000544c:	9002      	str	r0, [sp, #8]
1000544e:	4343      	muls	r3, r0
10005450:	4649      	mov	r1, r9
10005452:	1c38      	adds	r0, r7, #0
10005454:	4698      	mov	r8, r3
10005456:	f7fd fc55 	bl	10002d04 <__aeabi_uidivmod>
1000545a:	0c23      	lsrs	r3, r4, #16
1000545c:	040f      	lsls	r7, r1, #16
1000545e:	431f      	orrs	r7, r3
10005460:	45b8      	cmp	r8, r7
10005462:	d90c      	bls.n	1000547e <__aeabi_ddiv+0x326>
10005464:	9b02      	ldr	r3, [sp, #8]
10005466:	19bf      	adds	r7, r7, r6
10005468:	3b01      	subs	r3, #1
1000546a:	42be      	cmp	r6, r7
1000546c:	d900      	bls.n	10005470 <__aeabi_ddiv+0x318>
1000546e:	e0fb      	b.n	10005668 <__aeabi_ddiv+0x510>
10005470:	45b8      	cmp	r8, r7
10005472:	d800      	bhi.n	10005476 <__aeabi_ddiv+0x31e>
10005474:	e0f8      	b.n	10005668 <__aeabi_ddiv+0x510>
10005476:	9b02      	ldr	r3, [sp, #8]
10005478:	19bf      	adds	r7, r7, r6
1000547a:	3b02      	subs	r3, #2
1000547c:	9302      	str	r3, [sp, #8]
1000547e:	4643      	mov	r3, r8
10005480:	1aff      	subs	r7, r7, r3
10005482:	4649      	mov	r1, r9
10005484:	1c38      	adds	r0, r7, #0
10005486:	f7fd fbb7 	bl	10002bf8 <__aeabi_uidiv>
1000548a:	9b00      	ldr	r3, [sp, #0]
1000548c:	9003      	str	r0, [sp, #12]
1000548e:	4343      	muls	r3, r0
10005490:	4649      	mov	r1, r9
10005492:	1c38      	adds	r0, r7, #0
10005494:	4698      	mov	r8, r3
10005496:	f7fd fc35 	bl	10002d04 <__aeabi_uidivmod>
1000549a:	0424      	lsls	r4, r4, #16
1000549c:	0409      	lsls	r1, r1, #16
1000549e:	0c24      	lsrs	r4, r4, #16
100054a0:	4321      	orrs	r1, r4
100054a2:	4588      	cmp	r8, r1
100054a4:	d90c      	bls.n	100054c0 <__aeabi_ddiv+0x368>
100054a6:	9b03      	ldr	r3, [sp, #12]
100054a8:	1989      	adds	r1, r1, r6
100054aa:	3b01      	subs	r3, #1
100054ac:	428e      	cmp	r6, r1
100054ae:	d900      	bls.n	100054b2 <__aeabi_ddiv+0x35a>
100054b0:	e0dc      	b.n	1000566c <__aeabi_ddiv+0x514>
100054b2:	4588      	cmp	r8, r1
100054b4:	d800      	bhi.n	100054b8 <__aeabi_ddiv+0x360>
100054b6:	e0d9      	b.n	1000566c <__aeabi_ddiv+0x514>
100054b8:	9b03      	ldr	r3, [sp, #12]
100054ba:	1989      	adds	r1, r1, r6
100054bc:	3b02      	subs	r3, #2
100054be:	9303      	str	r3, [sp, #12]
100054c0:	4643      	mov	r3, r8
100054c2:	1ac9      	subs	r1, r1, r3
100054c4:	9b02      	ldr	r3, [sp, #8]
100054c6:	9a03      	ldr	r2, [sp, #12]
100054c8:	041b      	lsls	r3, r3, #16
100054ca:	9c05      	ldr	r4, [sp, #20]
100054cc:	431a      	orrs	r2, r3
100054ce:	0c10      	lsrs	r0, r2, #16
100054d0:	0413      	lsls	r3, r2, #16
100054d2:	4691      	mov	r9, r2
100054d4:	1c22      	adds	r2, r4, #0
100054d6:	9f04      	ldr	r7, [sp, #16]
100054d8:	0c1b      	lsrs	r3, r3, #16
100054da:	435a      	muls	r2, r3
100054dc:	4344      	muls	r4, r0
100054de:	437b      	muls	r3, r7
100054e0:	4378      	muls	r0, r7
100054e2:	18e3      	adds	r3, r4, r3
100054e4:	0c17      	lsrs	r7, r2, #16
100054e6:	19db      	adds	r3, r3, r7
100054e8:	429c      	cmp	r4, r3
100054ea:	d903      	bls.n	100054f4 <__aeabi_ddiv+0x39c>
100054ec:	2480      	movs	r4, #128	; 0x80
100054ee:	0264      	lsls	r4, r4, #9
100054f0:	46a4      	mov	ip, r4
100054f2:	4460      	add	r0, ip
100054f4:	0c1c      	lsrs	r4, r3, #16
100054f6:	0412      	lsls	r2, r2, #16
100054f8:	041b      	lsls	r3, r3, #16
100054fa:	0c12      	lsrs	r2, r2, #16
100054fc:	1900      	adds	r0, r0, r4
100054fe:	189b      	adds	r3, r3, r2
10005500:	4281      	cmp	r1, r0
10005502:	d200      	bcs.n	10005506 <__aeabi_ddiv+0x3ae>
10005504:	e096      	b.n	10005634 <__aeabi_ddiv+0x4dc>
10005506:	d100      	bne.n	1000550a <__aeabi_ddiv+0x3b2>
10005508:	e0fc      	b.n	10005704 <__aeabi_ddiv+0x5ac>
1000550a:	464a      	mov	r2, r9
1000550c:	2301      	movs	r3, #1
1000550e:	431a      	orrs	r2, r3
10005510:	4691      	mov	r9, r2
10005512:	4b9b      	ldr	r3, [pc, #620]	; (10005780 <__aeabi_ddiv+0x628>)
10005514:	18eb      	adds	r3, r5, r3
10005516:	2b00      	cmp	r3, #0
10005518:	dc00      	bgt.n	1000551c <__aeabi_ddiv+0x3c4>
1000551a:	e099      	b.n	10005650 <__aeabi_ddiv+0x4f8>
1000551c:	464a      	mov	r2, r9
1000551e:	0752      	lsls	r2, r2, #29
10005520:	d00a      	beq.n	10005538 <__aeabi_ddiv+0x3e0>
10005522:	220f      	movs	r2, #15
10005524:	4649      	mov	r1, r9
10005526:	400a      	ands	r2, r1
10005528:	2a04      	cmp	r2, #4
1000552a:	d005      	beq.n	10005538 <__aeabi_ddiv+0x3e0>
1000552c:	3104      	adds	r1, #4
1000552e:	4549      	cmp	r1, r9
10005530:	4192      	sbcs	r2, r2
10005532:	4689      	mov	r9, r1
10005534:	4252      	negs	r2, r2
10005536:	4493      	add	fp, r2
10005538:	465a      	mov	r2, fp
1000553a:	01d2      	lsls	r2, r2, #7
1000553c:	d506      	bpl.n	1000554c <__aeabi_ddiv+0x3f4>
1000553e:	465a      	mov	r2, fp
10005540:	4b90      	ldr	r3, [pc, #576]	; (10005784 <__aeabi_ddiv+0x62c>)
10005542:	401a      	ands	r2, r3
10005544:	2380      	movs	r3, #128	; 0x80
10005546:	4693      	mov	fp, r2
10005548:	00db      	lsls	r3, r3, #3
1000554a:	18eb      	adds	r3, r5, r3
1000554c:	4a8e      	ldr	r2, [pc, #568]	; (10005788 <__aeabi_ddiv+0x630>)
1000554e:	4293      	cmp	r3, r2
10005550:	dd00      	ble.n	10005554 <__aeabi_ddiv+0x3fc>
10005552:	e662      	b.n	1000521a <__aeabi_ddiv+0xc2>
10005554:	464a      	mov	r2, r9
10005556:	4659      	mov	r1, fp
10005558:	08d2      	lsrs	r2, r2, #3
1000555a:	0749      	lsls	r1, r1, #29
1000555c:	4311      	orrs	r1, r2
1000555e:	465a      	mov	r2, fp
10005560:	4689      	mov	r9, r1
10005562:	0257      	lsls	r7, r2, #9
10005564:	4651      	mov	r1, sl
10005566:	2201      	movs	r2, #1
10005568:	055b      	lsls	r3, r3, #21
1000556a:	0b3f      	lsrs	r7, r7, #12
1000556c:	0d5b      	lsrs	r3, r3, #21
1000556e:	400a      	ands	r2, r1
10005570:	e65a      	b.n	10005228 <__aeabi_ddiv+0xd0>
10005572:	2080      	movs	r0, #128	; 0x80
10005574:	465a      	mov	r2, fp
10005576:	0300      	lsls	r0, r0, #12
10005578:	4202      	tst	r2, r0
1000557a:	d008      	beq.n	1000558e <__aeabi_ddiv+0x436>
1000557c:	4207      	tst	r7, r0
1000557e:	d106      	bne.n	1000558e <__aeabi_ddiv+0x436>
10005580:	4307      	orrs	r7, r0
10005582:	033f      	lsls	r7, r7, #12
10005584:	4699      	mov	r9, r3
10005586:	0b3f      	lsrs	r7, r7, #12
10005588:	4642      	mov	r2, r8
1000558a:	4b80      	ldr	r3, [pc, #512]	; (1000578c <__aeabi_ddiv+0x634>)
1000558c:	e64c      	b.n	10005228 <__aeabi_ddiv+0xd0>
1000558e:	465f      	mov	r7, fp
10005590:	4307      	orrs	r7, r0
10005592:	033f      	lsls	r7, r7, #12
10005594:	0b3f      	lsrs	r7, r7, #12
10005596:	1c22      	adds	r2, r4, #0
10005598:	4b7c      	ldr	r3, [pc, #496]	; (1000578c <__aeabi_ddiv+0x634>)
1000559a:	e645      	b.n	10005228 <__aeabi_ddiv+0xd0>
1000559c:	f7fd fcae 	bl	10002efc <__clzsi2>
100055a0:	1c03      	adds	r3, r0, #0
100055a2:	3020      	adds	r0, #32
100055a4:	2827      	cmp	r0, #39	; 0x27
100055a6:	dc00      	bgt.n	100055aa <__aeabi_ddiv+0x452>
100055a8:	e65e      	b.n	10005268 <__aeabi_ddiv+0x110>
100055aa:	3b08      	subs	r3, #8
100055ac:	409e      	lsls	r6, r3
100055ae:	2300      	movs	r3, #0
100055b0:	46b3      	mov	fp, r6
100055b2:	4699      	mov	r9, r3
100055b4:	e665      	b.n	10005282 <__aeabi_ddiv+0x12a>
100055b6:	4650      	mov	r0, sl
100055b8:	f7fd fca0 	bl	10002efc <__clzsi2>
100055bc:	1c02      	adds	r2, r0, #0
100055be:	3220      	adds	r2, #32
100055c0:	2a27      	cmp	r2, #39	; 0x27
100055c2:	dc00      	bgt.n	100055c6 <__aeabi_ddiv+0x46e>
100055c4:	e675      	b.n	100052b2 <__aeabi_ddiv+0x15a>
100055c6:	4657      	mov	r7, sl
100055c8:	3808      	subs	r0, #8
100055ca:	4087      	lsls	r7, r0
100055cc:	2300      	movs	r3, #0
100055ce:	e67b      	b.n	100052c8 <__aeabi_ddiv+0x170>
100055d0:	4599      	cmp	r9, r3
100055d2:	d200      	bcs.n	100055d6 <__aeabi_ddiv+0x47e>
100055d4:	e6af      	b.n	10005336 <__aeabi_ddiv+0x1de>
100055d6:	465a      	mov	r2, fp
100055d8:	4659      	mov	r1, fp
100055da:	0854      	lsrs	r4, r2, #1
100055dc:	464a      	mov	r2, r9
100055de:	07c8      	lsls	r0, r1, #31
100055e0:	0852      	lsrs	r2, r2, #1
100055e2:	4302      	orrs	r2, r0
100055e4:	9203      	str	r2, [sp, #12]
100055e6:	464a      	mov	r2, r9
100055e8:	07d2      	lsls	r2, r2, #31
100055ea:	4690      	mov	r8, r2
100055ec:	e6a9      	b.n	10005342 <__aeabi_ddiv+0x1ea>
100055ee:	2700      	movs	r7, #0
100055f0:	4588      	cmp	r8, r1
100055f2:	d300      	bcc.n	100055f6 <__aeabi_ddiv+0x49e>
100055f4:	e71c      	b.n	10005430 <__aeabi_ddiv+0x2d8>
100055f6:	9f01      	ldr	r7, [sp, #4]
100055f8:	465a      	mov	r2, fp
100055fa:	46bc      	mov	ip, r7
100055fc:	44e0      	add	r8, ip
100055fe:	45b8      	cmp	r8, r7
10005600:	41bf      	sbcs	r7, r7
10005602:	427f      	negs	r7, r7
10005604:	19bf      	adds	r7, r7, r6
10005606:	18ff      	adds	r7, r7, r3
10005608:	3a01      	subs	r2, #1
1000560a:	42be      	cmp	r6, r7
1000560c:	d206      	bcs.n	1000561c <__aeabi_ddiv+0x4c4>
1000560e:	42bc      	cmp	r4, r7
10005610:	d85f      	bhi.n	100056d2 <__aeabi_ddiv+0x57a>
10005612:	d100      	bne.n	10005616 <__aeabi_ddiv+0x4be>
10005614:	e09f      	b.n	10005756 <__aeabi_ddiv+0x5fe>
10005616:	1b3f      	subs	r7, r7, r4
10005618:	4693      	mov	fp, r2
1000561a:	e709      	b.n	10005430 <__aeabi_ddiv+0x2d8>
1000561c:	42b7      	cmp	r7, r6
1000561e:	d1fa      	bne.n	10005616 <__aeabi_ddiv+0x4be>
10005620:	9b01      	ldr	r3, [sp, #4]
10005622:	4543      	cmp	r3, r8
10005624:	d9f3      	bls.n	1000560e <__aeabi_ddiv+0x4b6>
10005626:	1b37      	subs	r7, r6, r4
10005628:	4693      	mov	fp, r2
1000562a:	e701      	b.n	10005430 <__aeabi_ddiv+0x2d8>
1000562c:	4693      	mov	fp, r2
1000562e:	e6d4      	b.n	100053da <__aeabi_ddiv+0x282>
10005630:	9302      	str	r3, [sp, #8]
10005632:	e6b1      	b.n	10005398 <__aeabi_ddiv+0x240>
10005634:	464a      	mov	r2, r9
10005636:	1989      	adds	r1, r1, r6
10005638:	3a01      	subs	r2, #1
1000563a:	428e      	cmp	r6, r1
1000563c:	d918      	bls.n	10005670 <__aeabi_ddiv+0x518>
1000563e:	4691      	mov	r9, r2
10005640:	4281      	cmp	r1, r0
10005642:	d000      	beq.n	10005646 <__aeabi_ddiv+0x4ee>
10005644:	e761      	b.n	1000550a <__aeabi_ddiv+0x3b2>
10005646:	9a01      	ldr	r2, [sp, #4]
10005648:	429a      	cmp	r2, r3
1000564a:	d000      	beq.n	1000564e <__aeabi_ddiv+0x4f6>
1000564c:	e75d      	b.n	1000550a <__aeabi_ddiv+0x3b2>
1000564e:	e760      	b.n	10005512 <__aeabi_ddiv+0x3ba>
10005650:	4f4f      	ldr	r7, [pc, #316]	; (10005790 <__aeabi_ddiv+0x638>)
10005652:	1b7f      	subs	r7, r7, r5
10005654:	2f38      	cmp	r7, #56	; 0x38
10005656:	dd13      	ble.n	10005680 <__aeabi_ddiv+0x528>
10005658:	2201      	movs	r2, #1
1000565a:	4653      	mov	r3, sl
1000565c:	401a      	ands	r2, r3
1000565e:	e64f      	b.n	10005300 <__aeabi_ddiv+0x1a8>
10005660:	2301      	movs	r3, #1
10005662:	425b      	negs	r3, r3
10005664:	4699      	mov	r9, r3
10005666:	e754      	b.n	10005512 <__aeabi_ddiv+0x3ba>
10005668:	9302      	str	r3, [sp, #8]
1000566a:	e708      	b.n	1000547e <__aeabi_ddiv+0x326>
1000566c:	9303      	str	r3, [sp, #12]
1000566e:	e727      	b.n	100054c0 <__aeabi_ddiv+0x368>
10005670:	4288      	cmp	r0, r1
10005672:	d83c      	bhi.n	100056ee <__aeabi_ddiv+0x596>
10005674:	d074      	beq.n	10005760 <__aeabi_ddiv+0x608>
10005676:	4691      	mov	r9, r2
10005678:	e747      	b.n	1000550a <__aeabi_ddiv+0x3b2>
1000567a:	9b01      	ldr	r3, [sp, #4]
1000567c:	469a      	mov	sl, r3
1000567e:	e748      	b.n	10005512 <__aeabi_ddiv+0x3ba>
10005680:	2f1f      	cmp	r7, #31
10005682:	dc44      	bgt.n	1000570e <__aeabi_ddiv+0x5b6>
10005684:	4b43      	ldr	r3, [pc, #268]	; (10005794 <__aeabi_ddiv+0x63c>)
10005686:	464a      	mov	r2, r9
10005688:	469c      	mov	ip, r3
1000568a:	465b      	mov	r3, fp
1000568c:	4465      	add	r5, ip
1000568e:	40fa      	lsrs	r2, r7
10005690:	40ab      	lsls	r3, r5
10005692:	4313      	orrs	r3, r2
10005694:	464a      	mov	r2, r9
10005696:	40aa      	lsls	r2, r5
10005698:	1c15      	adds	r5, r2, #0
1000569a:	1e6a      	subs	r2, r5, #1
1000569c:	4195      	sbcs	r5, r2
1000569e:	465a      	mov	r2, fp
100056a0:	40fa      	lsrs	r2, r7
100056a2:	432b      	orrs	r3, r5
100056a4:	1c17      	adds	r7, r2, #0
100056a6:	075a      	lsls	r2, r3, #29
100056a8:	d009      	beq.n	100056be <__aeabi_ddiv+0x566>
100056aa:	220f      	movs	r2, #15
100056ac:	401a      	ands	r2, r3
100056ae:	2a04      	cmp	r2, #4
100056b0:	d005      	beq.n	100056be <__aeabi_ddiv+0x566>
100056b2:	1d1a      	adds	r2, r3, #4
100056b4:	429a      	cmp	r2, r3
100056b6:	419b      	sbcs	r3, r3
100056b8:	425b      	negs	r3, r3
100056ba:	18ff      	adds	r7, r7, r3
100056bc:	1c13      	adds	r3, r2, #0
100056be:	023a      	lsls	r2, r7, #8
100056c0:	d53e      	bpl.n	10005740 <__aeabi_ddiv+0x5e8>
100056c2:	4653      	mov	r3, sl
100056c4:	2201      	movs	r2, #1
100056c6:	2100      	movs	r1, #0
100056c8:	401a      	ands	r2, r3
100056ca:	2700      	movs	r7, #0
100056cc:	2301      	movs	r3, #1
100056ce:	4689      	mov	r9, r1
100056d0:	e5aa      	b.n	10005228 <__aeabi_ddiv+0xd0>
100056d2:	2302      	movs	r3, #2
100056d4:	425b      	negs	r3, r3
100056d6:	469c      	mov	ip, r3
100056d8:	9a01      	ldr	r2, [sp, #4]
100056da:	44e3      	add	fp, ip
100056dc:	4694      	mov	ip, r2
100056de:	44e0      	add	r8, ip
100056e0:	4590      	cmp	r8, r2
100056e2:	419b      	sbcs	r3, r3
100056e4:	425b      	negs	r3, r3
100056e6:	199b      	adds	r3, r3, r6
100056e8:	19df      	adds	r7, r3, r7
100056ea:	1b3f      	subs	r7, r7, r4
100056ec:	e6a0      	b.n	10005430 <__aeabi_ddiv+0x2d8>
100056ee:	9f01      	ldr	r7, [sp, #4]
100056f0:	464a      	mov	r2, r9
100056f2:	007c      	lsls	r4, r7, #1
100056f4:	42bc      	cmp	r4, r7
100056f6:	41bf      	sbcs	r7, r7
100056f8:	427f      	negs	r7, r7
100056fa:	19bf      	adds	r7, r7, r6
100056fc:	3a02      	subs	r2, #2
100056fe:	19c9      	adds	r1, r1, r7
10005700:	9401      	str	r4, [sp, #4]
10005702:	e79c      	b.n	1000563e <__aeabi_ddiv+0x4e6>
10005704:	2b00      	cmp	r3, #0
10005706:	d195      	bne.n	10005634 <__aeabi_ddiv+0x4dc>
10005708:	2200      	movs	r2, #0
1000570a:	9201      	str	r2, [sp, #4]
1000570c:	e79b      	b.n	10005646 <__aeabi_ddiv+0x4ee>
1000570e:	465a      	mov	r2, fp
10005710:	4b21      	ldr	r3, [pc, #132]	; (10005798 <__aeabi_ddiv+0x640>)
10005712:	1b5b      	subs	r3, r3, r5
10005714:	40da      	lsrs	r2, r3
10005716:	2f20      	cmp	r7, #32
10005718:	d027      	beq.n	1000576a <__aeabi_ddiv+0x612>
1000571a:	4b20      	ldr	r3, [pc, #128]	; (1000579c <__aeabi_ddiv+0x644>)
1000571c:	469c      	mov	ip, r3
1000571e:	465b      	mov	r3, fp
10005720:	4465      	add	r5, ip
10005722:	40ab      	lsls	r3, r5
10005724:	4649      	mov	r1, r9
10005726:	430b      	orrs	r3, r1
10005728:	1e59      	subs	r1, r3, #1
1000572a:	418b      	sbcs	r3, r1
1000572c:	4313      	orrs	r3, r2
1000572e:	2207      	movs	r2, #7
10005730:	2700      	movs	r7, #0
10005732:	401a      	ands	r2, r3
10005734:	d007      	beq.n	10005746 <__aeabi_ddiv+0x5ee>
10005736:	220f      	movs	r2, #15
10005738:	2700      	movs	r7, #0
1000573a:	401a      	ands	r2, r3
1000573c:	2a04      	cmp	r2, #4
1000573e:	d1b8      	bne.n	100056b2 <__aeabi_ddiv+0x55a>
10005740:	077a      	lsls	r2, r7, #29
10005742:	027f      	lsls	r7, r7, #9
10005744:	0b3f      	lsrs	r7, r7, #12
10005746:	08db      	lsrs	r3, r3, #3
10005748:	4313      	orrs	r3, r2
1000574a:	4699      	mov	r9, r3
1000574c:	2201      	movs	r2, #1
1000574e:	4653      	mov	r3, sl
10005750:	401a      	ands	r2, r3
10005752:	2300      	movs	r3, #0
10005754:	e568      	b.n	10005228 <__aeabi_ddiv+0xd0>
10005756:	4541      	cmp	r1, r8
10005758:	d8bb      	bhi.n	100056d2 <__aeabi_ddiv+0x57a>
1000575a:	4693      	mov	fp, r2
1000575c:	2700      	movs	r7, #0
1000575e:	e667      	b.n	10005430 <__aeabi_ddiv+0x2d8>
10005760:	9c01      	ldr	r4, [sp, #4]
10005762:	429c      	cmp	r4, r3
10005764:	d3c3      	bcc.n	100056ee <__aeabi_ddiv+0x596>
10005766:	4691      	mov	r9, r2
10005768:	e76d      	b.n	10005646 <__aeabi_ddiv+0x4ee>
1000576a:	2300      	movs	r3, #0
1000576c:	e7da      	b.n	10005724 <__aeabi_ddiv+0x5cc>
1000576e:	2780      	movs	r7, #128	; 0x80
10005770:	465b      	mov	r3, fp
10005772:	033f      	lsls	r7, r7, #12
10005774:	431f      	orrs	r7, r3
10005776:	033f      	lsls	r7, r7, #12
10005778:	0b3f      	lsrs	r7, r7, #12
1000577a:	9a01      	ldr	r2, [sp, #4]
1000577c:	4b03      	ldr	r3, [pc, #12]	; (1000578c <__aeabi_ddiv+0x634>)
1000577e:	e553      	b.n	10005228 <__aeabi_ddiv+0xd0>
10005780:	000003ff 	.word	0x000003ff
10005784:	feffffff 	.word	0xfeffffff
10005788:	000007fe 	.word	0x000007fe
1000578c:	000007ff 	.word	0x000007ff
10005790:	fffffc02 	.word	0xfffffc02
10005794:	0000041e 	.word	0x0000041e
10005798:	fffffbe2 	.word	0xfffffbe2
1000579c:	0000043e 	.word	0x0000043e

100057a0 <__eqdf2>:
100057a0:	b5f0      	push	{r4, r5, r6, r7, lr}
100057a2:	465f      	mov	r7, fp
100057a4:	464d      	mov	r5, r9
100057a6:	4644      	mov	r4, r8
100057a8:	4656      	mov	r6, sl
100057aa:	b4f0      	push	{r4, r5, r6, r7}
100057ac:	031f      	lsls	r7, r3, #12
100057ae:	005c      	lsls	r4, r3, #1
100057b0:	0fdb      	lsrs	r3, r3, #31
100057b2:	4699      	mov	r9, r3
100057b4:	4b1b      	ldr	r3, [pc, #108]	; (10005824 <__eqdf2+0x84>)
100057b6:	030e      	lsls	r6, r1, #12
100057b8:	004d      	lsls	r5, r1, #1
100057ba:	0fc9      	lsrs	r1, r1, #31
100057bc:	4684      	mov	ip, r0
100057be:	0b36      	lsrs	r6, r6, #12
100057c0:	0d6d      	lsrs	r5, r5, #21
100057c2:	468b      	mov	fp, r1
100057c4:	4690      	mov	r8, r2
100057c6:	0b3f      	lsrs	r7, r7, #12
100057c8:	0d64      	lsrs	r4, r4, #21
100057ca:	429d      	cmp	r5, r3
100057cc:	d00c      	beq.n	100057e8 <__eqdf2+0x48>
100057ce:	4b15      	ldr	r3, [pc, #84]	; (10005824 <__eqdf2+0x84>)
100057d0:	429c      	cmp	r4, r3
100057d2:	d010      	beq.n	100057f6 <__eqdf2+0x56>
100057d4:	2301      	movs	r3, #1
100057d6:	42a5      	cmp	r5, r4
100057d8:	d014      	beq.n	10005804 <__eqdf2+0x64>
100057da:	1c18      	adds	r0, r3, #0
100057dc:	bc3c      	pop	{r2, r3, r4, r5}
100057de:	4690      	mov	r8, r2
100057e0:	4699      	mov	r9, r3
100057e2:	46a2      	mov	sl, r4
100057e4:	46ab      	mov	fp, r5
100057e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100057e8:	1c31      	adds	r1, r6, #0
100057ea:	2301      	movs	r3, #1
100057ec:	4301      	orrs	r1, r0
100057ee:	d1f4      	bne.n	100057da <__eqdf2+0x3a>
100057f0:	4b0c      	ldr	r3, [pc, #48]	; (10005824 <__eqdf2+0x84>)
100057f2:	429c      	cmp	r4, r3
100057f4:	d1ee      	bne.n	100057d4 <__eqdf2+0x34>
100057f6:	433a      	orrs	r2, r7
100057f8:	2301      	movs	r3, #1
100057fa:	2a00      	cmp	r2, #0
100057fc:	d1ed      	bne.n	100057da <__eqdf2+0x3a>
100057fe:	2301      	movs	r3, #1
10005800:	42a5      	cmp	r5, r4
10005802:	d1ea      	bne.n	100057da <__eqdf2+0x3a>
10005804:	42be      	cmp	r6, r7
10005806:	d1e8      	bne.n	100057da <__eqdf2+0x3a>
10005808:	45c4      	cmp	ip, r8
1000580a:	d1e6      	bne.n	100057da <__eqdf2+0x3a>
1000580c:	45cb      	cmp	fp, r9
1000580e:	d006      	beq.n	1000581e <__eqdf2+0x7e>
10005810:	2d00      	cmp	r5, #0
10005812:	d1e2      	bne.n	100057da <__eqdf2+0x3a>
10005814:	4330      	orrs	r0, r6
10005816:	1c03      	adds	r3, r0, #0
10005818:	1e58      	subs	r0, r3, #1
1000581a:	4183      	sbcs	r3, r0
1000581c:	e7dd      	b.n	100057da <__eqdf2+0x3a>
1000581e:	2300      	movs	r3, #0
10005820:	e7db      	b.n	100057da <__eqdf2+0x3a>
10005822:	46c0      	nop			; (mov r8, r8)
10005824:	000007ff 	.word	0x000007ff

10005828 <__gedf2>:
10005828:	b5f0      	push	{r4, r5, r6, r7, lr}
1000582a:	4657      	mov	r7, sl
1000582c:	4645      	mov	r5, r8
1000582e:	464e      	mov	r6, r9
10005830:	b4e0      	push	{r5, r6, r7}
10005832:	030f      	lsls	r7, r1, #12
10005834:	004e      	lsls	r6, r1, #1
10005836:	0fc9      	lsrs	r1, r1, #31
10005838:	468a      	mov	sl, r1
1000583a:	4932      	ldr	r1, [pc, #200]	; (10005904 <__gedf2+0xdc>)
1000583c:	031d      	lsls	r5, r3, #12
1000583e:	005c      	lsls	r4, r3, #1
10005840:	4684      	mov	ip, r0
10005842:	0b3f      	lsrs	r7, r7, #12
10005844:	0d76      	lsrs	r6, r6, #21
10005846:	4690      	mov	r8, r2
10005848:	0b2d      	lsrs	r5, r5, #12
1000584a:	0d64      	lsrs	r4, r4, #21
1000584c:	0fdb      	lsrs	r3, r3, #31
1000584e:	428e      	cmp	r6, r1
10005850:	d00f      	beq.n	10005872 <__gedf2+0x4a>
10005852:	428c      	cmp	r4, r1
10005854:	d039      	beq.n	100058ca <__gedf2+0xa2>
10005856:	2e00      	cmp	r6, #0
10005858:	d110      	bne.n	1000587c <__gedf2+0x54>
1000585a:	4338      	orrs	r0, r7
1000585c:	4241      	negs	r1, r0
1000585e:	4141      	adcs	r1, r0
10005860:	4689      	mov	r9, r1
10005862:	2c00      	cmp	r4, #0
10005864:	d127      	bne.n	100058b6 <__gedf2+0x8e>
10005866:	432a      	orrs	r2, r5
10005868:	d125      	bne.n	100058b6 <__gedf2+0x8e>
1000586a:	2000      	movs	r0, #0
1000586c:	2900      	cmp	r1, #0
1000586e:	d10e      	bne.n	1000588e <__gedf2+0x66>
10005870:	e008      	b.n	10005884 <__gedf2+0x5c>
10005872:	1c39      	adds	r1, r7, #0
10005874:	4301      	orrs	r1, r0
10005876:	d12e      	bne.n	100058d6 <__gedf2+0xae>
10005878:	42b4      	cmp	r4, r6
1000587a:	d026      	beq.n	100058ca <__gedf2+0xa2>
1000587c:	2c00      	cmp	r4, #0
1000587e:	d00b      	beq.n	10005898 <__gedf2+0x70>
10005880:	459a      	cmp	sl, r3
10005882:	d00d      	beq.n	100058a0 <__gedf2+0x78>
10005884:	4653      	mov	r3, sl
10005886:	4259      	negs	r1, r3
10005888:	2301      	movs	r3, #1
1000588a:	4319      	orrs	r1, r3
1000588c:	1c08      	adds	r0, r1, #0
1000588e:	bc1c      	pop	{r2, r3, r4}
10005890:	4690      	mov	r8, r2
10005892:	4699      	mov	r9, r3
10005894:	46a2      	mov	sl, r4
10005896:	bdf0      	pop	{r4, r5, r6, r7, pc}
10005898:	432a      	orrs	r2, r5
1000589a:	d0f3      	beq.n	10005884 <__gedf2+0x5c>
1000589c:	459a      	cmp	sl, r3
1000589e:	d1f1      	bne.n	10005884 <__gedf2+0x5c>
100058a0:	42a6      	cmp	r6, r4
100058a2:	dcef      	bgt.n	10005884 <__gedf2+0x5c>
100058a4:	da1a      	bge.n	100058dc <__gedf2+0xb4>
100058a6:	4650      	mov	r0, sl
100058a8:	4241      	negs	r1, r0
100058aa:	4148      	adcs	r0, r1
100058ac:	2301      	movs	r3, #1
100058ae:	4241      	negs	r1, r0
100058b0:	4319      	orrs	r1, r3
100058b2:	1c08      	adds	r0, r1, #0
100058b4:	e7eb      	b.n	1000588e <__gedf2+0x66>
100058b6:	464a      	mov	r2, r9
100058b8:	2a00      	cmp	r2, #0
100058ba:	d0e1      	beq.n	10005880 <__gedf2+0x58>
100058bc:	4258      	negs	r0, r3
100058be:	4158      	adcs	r0, r3
100058c0:	2201      	movs	r2, #1
100058c2:	4241      	negs	r1, r0
100058c4:	4311      	orrs	r1, r2
100058c6:	1c08      	adds	r0, r1, #0
100058c8:	e7e1      	b.n	1000588e <__gedf2+0x66>
100058ca:	1c29      	adds	r1, r5, #0
100058cc:	4311      	orrs	r1, r2
100058ce:	d102      	bne.n	100058d6 <__gedf2+0xae>
100058d0:	2e00      	cmp	r6, #0
100058d2:	d0c2      	beq.n	1000585a <__gedf2+0x32>
100058d4:	e7d4      	b.n	10005880 <__gedf2+0x58>
100058d6:	2002      	movs	r0, #2
100058d8:	4240      	negs	r0, r0
100058da:	e7d8      	b.n	1000588e <__gedf2+0x66>
100058dc:	42af      	cmp	r7, r5
100058de:	d8d1      	bhi.n	10005884 <__gedf2+0x5c>
100058e0:	d009      	beq.n	100058f6 <__gedf2+0xce>
100058e2:	2000      	movs	r0, #0
100058e4:	42af      	cmp	r7, r5
100058e6:	d2d2      	bcs.n	1000588e <__gedf2+0x66>
100058e8:	4650      	mov	r0, sl
100058ea:	4241      	negs	r1, r0
100058ec:	4148      	adcs	r0, r1
100058ee:	2301      	movs	r3, #1
100058f0:	4240      	negs	r0, r0
100058f2:	4318      	orrs	r0, r3
100058f4:	e7cb      	b.n	1000588e <__gedf2+0x66>
100058f6:	45c4      	cmp	ip, r8
100058f8:	d8c4      	bhi.n	10005884 <__gedf2+0x5c>
100058fa:	2000      	movs	r0, #0
100058fc:	45c4      	cmp	ip, r8
100058fe:	d3f3      	bcc.n	100058e8 <__gedf2+0xc0>
10005900:	e7c5      	b.n	1000588e <__gedf2+0x66>
10005902:	46c0      	nop			; (mov r8, r8)
10005904:	000007ff 	.word	0x000007ff

10005908 <__ledf2>:
10005908:	b5f0      	push	{r4, r5, r6, r7, lr}
1000590a:	465f      	mov	r7, fp
1000590c:	464d      	mov	r5, r9
1000590e:	4644      	mov	r4, r8
10005910:	4656      	mov	r6, sl
10005912:	4680      	mov	r8, r0
10005914:	b4f0      	push	{r4, r5, r6, r7}
10005916:	1c06      	adds	r6, r0, #0
10005918:	0308      	lsls	r0, r1, #12
1000591a:	0b00      	lsrs	r0, r0, #12
1000591c:	4684      	mov	ip, r0
1000591e:	482c      	ldr	r0, [pc, #176]	; (100059d0 <__ledf2+0xc8>)
10005920:	004c      	lsls	r4, r1, #1
10005922:	031f      	lsls	r7, r3, #12
10005924:	005d      	lsls	r5, r3, #1
10005926:	0fc9      	lsrs	r1, r1, #31
10005928:	0d64      	lsrs	r4, r4, #21
1000592a:	468b      	mov	fp, r1
1000592c:	4691      	mov	r9, r2
1000592e:	0b3f      	lsrs	r7, r7, #12
10005930:	0d6d      	lsrs	r5, r5, #21
10005932:	0fdb      	lsrs	r3, r3, #31
10005934:	4284      	cmp	r4, r0
10005936:	d012      	beq.n	1000595e <__ledf2+0x56>
10005938:	4285      	cmp	r5, r0
1000593a:	d025      	beq.n	10005988 <__ledf2+0x80>
1000593c:	2c00      	cmp	r4, #0
1000593e:	d114      	bne.n	1000596a <__ledf2+0x62>
10005940:	4661      	mov	r1, ip
10005942:	430e      	orrs	r6, r1
10005944:	4270      	negs	r0, r6
10005946:	4146      	adcs	r6, r0
10005948:	2d00      	cmp	r5, #0
1000594a:	d035      	beq.n	100059b8 <__ledf2+0xb0>
1000594c:	2e00      	cmp	r6, #0
1000594e:	d021      	beq.n	10005994 <__ledf2+0x8c>
10005950:	4258      	negs	r0, r3
10005952:	4158      	adcs	r0, r3
10005954:	2101      	movs	r1, #1
10005956:	4243      	negs	r3, r0
10005958:	430b      	orrs	r3, r1
1000595a:	1c18      	adds	r0, r3, #0
1000595c:	e00e      	b.n	1000597c <__ledf2+0x74>
1000595e:	4661      	mov	r1, ip
10005960:	2002      	movs	r0, #2
10005962:	4331      	orrs	r1, r6
10005964:	d10a      	bne.n	1000597c <__ledf2+0x74>
10005966:	42a5      	cmp	r5, r4
10005968:	d00e      	beq.n	10005988 <__ledf2+0x80>
1000596a:	2d00      	cmp	r5, #0
1000596c:	d112      	bne.n	10005994 <__ledf2+0x8c>
1000596e:	433a      	orrs	r2, r7
10005970:	d110      	bne.n	10005994 <__ledf2+0x8c>
10005972:	465b      	mov	r3, fp
10005974:	4259      	negs	r1, r3
10005976:	2301      	movs	r3, #1
10005978:	4319      	orrs	r1, r3
1000597a:	1c08      	adds	r0, r1, #0
1000597c:	bc3c      	pop	{r2, r3, r4, r5}
1000597e:	4690      	mov	r8, r2
10005980:	4699      	mov	r9, r3
10005982:	46a2      	mov	sl, r4
10005984:	46ab      	mov	fp, r5
10005986:	bdf0      	pop	{r4, r5, r6, r7, pc}
10005988:	1c39      	adds	r1, r7, #0
1000598a:	2002      	movs	r0, #2
1000598c:	4311      	orrs	r1, r2
1000598e:	d1f5      	bne.n	1000597c <__ledf2+0x74>
10005990:	2c00      	cmp	r4, #0
10005992:	d0d5      	beq.n	10005940 <__ledf2+0x38>
10005994:	459b      	cmp	fp, r3
10005996:	d1ec      	bne.n	10005972 <__ledf2+0x6a>
10005998:	42ac      	cmp	r4, r5
1000599a:	dcea      	bgt.n	10005972 <__ledf2+0x6a>
1000599c:	db05      	blt.n	100059aa <__ledf2+0xa2>
1000599e:	45bc      	cmp	ip, r7
100059a0:	d8e7      	bhi.n	10005972 <__ledf2+0x6a>
100059a2:	d00f      	beq.n	100059c4 <__ledf2+0xbc>
100059a4:	2000      	movs	r0, #0
100059a6:	45bc      	cmp	ip, r7
100059a8:	d2e8      	bcs.n	1000597c <__ledf2+0x74>
100059aa:	4658      	mov	r0, fp
100059ac:	4241      	negs	r1, r0
100059ae:	4148      	adcs	r0, r1
100059b0:	4241      	negs	r1, r0
100059b2:	2001      	movs	r0, #1
100059b4:	4308      	orrs	r0, r1
100059b6:	e7e1      	b.n	1000597c <__ledf2+0x74>
100059b8:	433a      	orrs	r2, r7
100059ba:	d1c7      	bne.n	1000594c <__ledf2+0x44>
100059bc:	2000      	movs	r0, #0
100059be:	2e00      	cmp	r6, #0
100059c0:	d1dc      	bne.n	1000597c <__ledf2+0x74>
100059c2:	e7d6      	b.n	10005972 <__ledf2+0x6a>
100059c4:	45c8      	cmp	r8, r9
100059c6:	d8d4      	bhi.n	10005972 <__ledf2+0x6a>
100059c8:	2000      	movs	r0, #0
100059ca:	45c8      	cmp	r8, r9
100059cc:	d3ed      	bcc.n	100059aa <__ledf2+0xa2>
100059ce:	e7d5      	b.n	1000597c <__ledf2+0x74>
100059d0:	000007ff 	.word	0x000007ff

100059d4 <__aeabi_dmul>:
100059d4:	b5f0      	push	{r4, r5, r6, r7, lr}
100059d6:	465f      	mov	r7, fp
100059d8:	4656      	mov	r6, sl
100059da:	464d      	mov	r5, r9
100059dc:	4644      	mov	r4, r8
100059de:	b4f0      	push	{r4, r5, r6, r7}
100059e0:	1c05      	adds	r5, r0, #0
100059e2:	1c06      	adds	r6, r0, #0
100059e4:	0308      	lsls	r0, r1, #12
100059e6:	b087      	sub	sp, #28
100059e8:	4699      	mov	r9, r3
100059ea:	004f      	lsls	r7, r1, #1
100059ec:	0b03      	lsrs	r3, r0, #12
100059ee:	0fcc      	lsrs	r4, r1, #31
100059f0:	4692      	mov	sl, r2
100059f2:	469b      	mov	fp, r3
100059f4:	0d7f      	lsrs	r7, r7, #21
100059f6:	9401      	str	r4, [sp, #4]
100059f8:	d067      	beq.n	10005aca <__aeabi_dmul+0xf6>
100059fa:	4b6c      	ldr	r3, [pc, #432]	; (10005bac <__aeabi_dmul+0x1d8>)
100059fc:	429f      	cmp	r7, r3
100059fe:	d036      	beq.n	10005a6e <__aeabi_dmul+0x9a>
10005a00:	2080      	movs	r0, #128	; 0x80
10005a02:	465b      	mov	r3, fp
10005a04:	0340      	lsls	r0, r0, #13
10005a06:	4318      	orrs	r0, r3
10005a08:	00c0      	lsls	r0, r0, #3
10005a0a:	0f6b      	lsrs	r3, r5, #29
10005a0c:	4318      	orrs	r0, r3
10005a0e:	4b68      	ldr	r3, [pc, #416]	; (10005bb0 <__aeabi_dmul+0x1dc>)
10005a10:	4683      	mov	fp, r0
10005a12:	469c      	mov	ip, r3
10005a14:	2300      	movs	r3, #0
10005a16:	4698      	mov	r8, r3
10005a18:	00ee      	lsls	r6, r5, #3
10005a1a:	4467      	add	r7, ip
10005a1c:	9300      	str	r3, [sp, #0]
10005a1e:	464b      	mov	r3, r9
10005a20:	4649      	mov	r1, r9
10005a22:	031d      	lsls	r5, r3, #12
10005a24:	0fc9      	lsrs	r1, r1, #31
10005a26:	005b      	lsls	r3, r3, #1
10005a28:	4652      	mov	r2, sl
10005a2a:	0b2d      	lsrs	r5, r5, #12
10005a2c:	0d5b      	lsrs	r3, r3, #21
10005a2e:	4689      	mov	r9, r1
10005a30:	d100      	bne.n	10005a34 <__aeabi_dmul+0x60>
10005a32:	e06e      	b.n	10005b12 <__aeabi_dmul+0x13e>
10005a34:	495d      	ldr	r1, [pc, #372]	; (10005bac <__aeabi_dmul+0x1d8>)
10005a36:	428b      	cmp	r3, r1
10005a38:	d064      	beq.n	10005b04 <__aeabi_dmul+0x130>
10005a3a:	2080      	movs	r0, #128	; 0x80
10005a3c:	495c      	ldr	r1, [pc, #368]	; (10005bb0 <__aeabi_dmul+0x1dc>)
10005a3e:	0340      	lsls	r0, r0, #13
10005a40:	468c      	mov	ip, r1
10005a42:	2100      	movs	r1, #0
10005a44:	4305      	orrs	r5, r0
10005a46:	00ed      	lsls	r5, r5, #3
10005a48:	0f50      	lsrs	r0, r2, #29
10005a4a:	4305      	orrs	r5, r0
10005a4c:	00d2      	lsls	r2, r2, #3
10005a4e:	4463      	add	r3, ip
10005a50:	4648      	mov	r0, r9
10005a52:	18ff      	adds	r7, r7, r3
10005a54:	1c7b      	adds	r3, r7, #1
10005a56:	469a      	mov	sl, r3
10005a58:	9b00      	ldr	r3, [sp, #0]
10005a5a:	4060      	eors	r0, r4
10005a5c:	9002      	str	r0, [sp, #8]
10005a5e:	430b      	orrs	r3, r1
10005a60:	2b0f      	cmp	r3, #15
10005a62:	d900      	bls.n	10005a66 <__aeabi_dmul+0x92>
10005a64:	e0ac      	b.n	10005bc0 <__aeabi_dmul+0x1ec>
10005a66:	4853      	ldr	r0, [pc, #332]	; (10005bb4 <__aeabi_dmul+0x1e0>)
10005a68:	009b      	lsls	r3, r3, #2
10005a6a:	58c3      	ldr	r3, [r0, r3]
10005a6c:	469f      	mov	pc, r3
10005a6e:	465b      	mov	r3, fp
10005a70:	431d      	orrs	r5, r3
10005a72:	d000      	beq.n	10005a76 <__aeabi_dmul+0xa2>
10005a74:	e082      	b.n	10005b7c <__aeabi_dmul+0x1a8>
10005a76:	2308      	movs	r3, #8
10005a78:	9300      	str	r3, [sp, #0]
10005a7a:	2300      	movs	r3, #0
10005a7c:	469b      	mov	fp, r3
10005a7e:	3302      	adds	r3, #2
10005a80:	2600      	movs	r6, #0
10005a82:	4698      	mov	r8, r3
10005a84:	e7cb      	b.n	10005a1e <__aeabi_dmul+0x4a>
10005a86:	9b02      	ldr	r3, [sp, #8]
10005a88:	9301      	str	r3, [sp, #4]
10005a8a:	4643      	mov	r3, r8
10005a8c:	2b02      	cmp	r3, #2
10005a8e:	d159      	bne.n	10005b44 <__aeabi_dmul+0x170>
10005a90:	2401      	movs	r4, #1
10005a92:	2500      	movs	r5, #0
10005a94:	2600      	movs	r6, #0
10005a96:	9b01      	ldr	r3, [sp, #4]
10005a98:	401c      	ands	r4, r3
10005a9a:	4b44      	ldr	r3, [pc, #272]	; (10005bac <__aeabi_dmul+0x1d8>)
10005a9c:	2100      	movs	r1, #0
10005a9e:	032d      	lsls	r5, r5, #12
10005aa0:	0d0a      	lsrs	r2, r1, #20
10005aa2:	0512      	lsls	r2, r2, #20
10005aa4:	0b2d      	lsrs	r5, r5, #12
10005aa6:	4315      	orrs	r5, r2
10005aa8:	4a43      	ldr	r2, [pc, #268]	; (10005bb8 <__aeabi_dmul+0x1e4>)
10005aaa:	051b      	lsls	r3, r3, #20
10005aac:	4015      	ands	r5, r2
10005aae:	431d      	orrs	r5, r3
10005ab0:	006d      	lsls	r5, r5, #1
10005ab2:	07e4      	lsls	r4, r4, #31
10005ab4:	086d      	lsrs	r5, r5, #1
10005ab6:	4325      	orrs	r5, r4
10005ab8:	1c30      	adds	r0, r6, #0
10005aba:	1c29      	adds	r1, r5, #0
10005abc:	b007      	add	sp, #28
10005abe:	bc3c      	pop	{r2, r3, r4, r5}
10005ac0:	4690      	mov	r8, r2
10005ac2:	4699      	mov	r9, r3
10005ac4:	46a2      	mov	sl, r4
10005ac6:	46ab      	mov	fp, r5
10005ac8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10005aca:	432b      	orrs	r3, r5
10005acc:	d04e      	beq.n	10005b6c <__aeabi_dmul+0x198>
10005ace:	465b      	mov	r3, fp
10005ad0:	2b00      	cmp	r3, #0
10005ad2:	d100      	bne.n	10005ad6 <__aeabi_dmul+0x102>
10005ad4:	e185      	b.n	10005de2 <__aeabi_dmul+0x40e>
10005ad6:	4658      	mov	r0, fp
10005ad8:	f7fd fa10 	bl	10002efc <__clzsi2>
10005adc:	1c02      	adds	r2, r0, #0
10005ade:	2328      	movs	r3, #40	; 0x28
10005ae0:	1c29      	adds	r1, r5, #0
10005ae2:	1a9b      	subs	r3, r3, r2
10005ae4:	1c16      	adds	r6, r2, #0
10005ae6:	4658      	mov	r0, fp
10005ae8:	40d9      	lsrs	r1, r3
10005aea:	3e08      	subs	r6, #8
10005aec:	40b0      	lsls	r0, r6
10005aee:	1c0b      	adds	r3, r1, #0
10005af0:	40b5      	lsls	r5, r6
10005af2:	4303      	orrs	r3, r0
10005af4:	469b      	mov	fp, r3
10005af6:	1c2e      	adds	r6, r5, #0
10005af8:	2300      	movs	r3, #0
10005afa:	4f30      	ldr	r7, [pc, #192]	; (10005bbc <__aeabi_dmul+0x1e8>)
10005afc:	9300      	str	r3, [sp, #0]
10005afe:	1abf      	subs	r7, r7, r2
10005b00:	4698      	mov	r8, r3
10005b02:	e78c      	b.n	10005a1e <__aeabi_dmul+0x4a>
10005b04:	4651      	mov	r1, sl
10005b06:	4329      	orrs	r1, r5
10005b08:	d12e      	bne.n	10005b68 <__aeabi_dmul+0x194>
10005b0a:	2500      	movs	r5, #0
10005b0c:	2200      	movs	r2, #0
10005b0e:	2102      	movs	r1, #2
10005b10:	e79e      	b.n	10005a50 <__aeabi_dmul+0x7c>
10005b12:	4651      	mov	r1, sl
10005b14:	4329      	orrs	r1, r5
10005b16:	d023      	beq.n	10005b60 <__aeabi_dmul+0x18c>
10005b18:	2d00      	cmp	r5, #0
10005b1a:	d100      	bne.n	10005b1e <__aeabi_dmul+0x14a>
10005b1c:	e154      	b.n	10005dc8 <__aeabi_dmul+0x3f4>
10005b1e:	1c28      	adds	r0, r5, #0
10005b20:	f7fd f9ec 	bl	10002efc <__clzsi2>
10005b24:	1c03      	adds	r3, r0, #0
10005b26:	2128      	movs	r1, #40	; 0x28
10005b28:	4650      	mov	r0, sl
10005b2a:	1ac9      	subs	r1, r1, r3
10005b2c:	1c1a      	adds	r2, r3, #0
10005b2e:	40c8      	lsrs	r0, r1
10005b30:	4651      	mov	r1, sl
10005b32:	3a08      	subs	r2, #8
10005b34:	4091      	lsls	r1, r2
10005b36:	4095      	lsls	r5, r2
10005b38:	1c0a      	adds	r2, r1, #0
10005b3a:	4305      	orrs	r5, r0
10005b3c:	481f      	ldr	r0, [pc, #124]	; (10005bbc <__aeabi_dmul+0x1e8>)
10005b3e:	2100      	movs	r1, #0
10005b40:	1ac3      	subs	r3, r0, r3
10005b42:	e785      	b.n	10005a50 <__aeabi_dmul+0x7c>
10005b44:	2b03      	cmp	r3, #3
10005b46:	d100      	bne.n	10005b4a <__aeabi_dmul+0x176>
10005b48:	e1c2      	b.n	10005ed0 <__aeabi_dmul+0x4fc>
10005b4a:	2b01      	cmp	r3, #1
10005b4c:	d000      	beq.n	10005b50 <__aeabi_dmul+0x17c>
10005b4e:	e16d      	b.n	10005e2c <__aeabi_dmul+0x458>
10005b50:	4644      	mov	r4, r8
10005b52:	9b01      	ldr	r3, [sp, #4]
10005b54:	2500      	movs	r5, #0
10005b56:	401c      	ands	r4, r3
10005b58:	b2e4      	uxtb	r4, r4
10005b5a:	2300      	movs	r3, #0
10005b5c:	2600      	movs	r6, #0
10005b5e:	e79d      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005b60:	2500      	movs	r5, #0
10005b62:	2200      	movs	r2, #0
10005b64:	2101      	movs	r1, #1
10005b66:	e773      	b.n	10005a50 <__aeabi_dmul+0x7c>
10005b68:	2103      	movs	r1, #3
10005b6a:	e771      	b.n	10005a50 <__aeabi_dmul+0x7c>
10005b6c:	2304      	movs	r3, #4
10005b6e:	9300      	str	r3, [sp, #0]
10005b70:	2300      	movs	r3, #0
10005b72:	469b      	mov	fp, r3
10005b74:	3301      	adds	r3, #1
10005b76:	2600      	movs	r6, #0
10005b78:	4698      	mov	r8, r3
10005b7a:	e750      	b.n	10005a1e <__aeabi_dmul+0x4a>
10005b7c:	230c      	movs	r3, #12
10005b7e:	9300      	str	r3, [sp, #0]
10005b80:	3b09      	subs	r3, #9
10005b82:	4698      	mov	r8, r3
10005b84:	e74b      	b.n	10005a1e <__aeabi_dmul+0x4a>
10005b86:	2580      	movs	r5, #128	; 0x80
10005b88:	2400      	movs	r4, #0
10005b8a:	032d      	lsls	r5, r5, #12
10005b8c:	2600      	movs	r6, #0
10005b8e:	4b07      	ldr	r3, [pc, #28]	; (10005bac <__aeabi_dmul+0x1d8>)
10005b90:	e784      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005b92:	464b      	mov	r3, r9
10005b94:	46ab      	mov	fp, r5
10005b96:	1c16      	adds	r6, r2, #0
10005b98:	9301      	str	r3, [sp, #4]
10005b9a:	4688      	mov	r8, r1
10005b9c:	e775      	b.n	10005a8a <__aeabi_dmul+0xb6>
10005b9e:	9b02      	ldr	r3, [sp, #8]
10005ba0:	46ab      	mov	fp, r5
10005ba2:	1c16      	adds	r6, r2, #0
10005ba4:	9301      	str	r3, [sp, #4]
10005ba6:	4688      	mov	r8, r1
10005ba8:	e76f      	b.n	10005a8a <__aeabi_dmul+0xb6>
10005baa:	46c0      	nop			; (mov r8, r8)
10005bac:	000007ff 	.word	0x000007ff
10005bb0:	fffffc01 	.word	0xfffffc01
10005bb4:	10006994 	.word	0x10006994
10005bb8:	800fffff 	.word	0x800fffff
10005bbc:	fffffc0d 	.word	0xfffffc0d
10005bc0:	0c33      	lsrs	r3, r6, #16
10005bc2:	0436      	lsls	r6, r6, #16
10005bc4:	0c36      	lsrs	r6, r6, #16
10005bc6:	469c      	mov	ip, r3
10005bc8:	1c33      	adds	r3, r6, #0
10005bca:	0c14      	lsrs	r4, r2, #16
10005bcc:	0412      	lsls	r2, r2, #16
10005bce:	0c12      	lsrs	r2, r2, #16
10005bd0:	4353      	muls	r3, r2
10005bd2:	4698      	mov	r8, r3
10005bd4:	4663      	mov	r3, ip
10005bd6:	4353      	muls	r3, r2
10005bd8:	4699      	mov	r9, r3
10005bda:	4663      	mov	r3, ip
10005bdc:	4363      	muls	r3, r4
10005bde:	9301      	str	r3, [sp, #4]
10005be0:	1c33      	adds	r3, r6, #0
10005be2:	4641      	mov	r1, r8
10005be4:	4363      	muls	r3, r4
10005be6:	0c09      	lsrs	r1, r1, #16
10005be8:	444b      	add	r3, r9
10005bea:	185b      	adds	r3, r3, r1
10005bec:	4599      	cmp	r9, r3
10005bee:	d905      	bls.n	10005bfc <__aeabi_dmul+0x228>
10005bf0:	2080      	movs	r0, #128	; 0x80
10005bf2:	0240      	lsls	r0, r0, #9
10005bf4:	4681      	mov	r9, r0
10005bf6:	9901      	ldr	r1, [sp, #4]
10005bf8:	4449      	add	r1, r9
10005bfa:	9101      	str	r1, [sp, #4]
10005bfc:	0c19      	lsrs	r1, r3, #16
10005bfe:	9103      	str	r1, [sp, #12]
10005c00:	4641      	mov	r1, r8
10005c02:	0409      	lsls	r1, r1, #16
10005c04:	0c09      	lsrs	r1, r1, #16
10005c06:	041b      	lsls	r3, r3, #16
10005c08:	185b      	adds	r3, r3, r1
10005c0a:	9304      	str	r3, [sp, #16]
10005c0c:	0c2b      	lsrs	r3, r5, #16
10005c0e:	4698      	mov	r8, r3
10005c10:	1c33      	adds	r3, r6, #0
10005c12:	042d      	lsls	r5, r5, #16
10005c14:	0c29      	lsrs	r1, r5, #16
10005c16:	434b      	muls	r3, r1
10005c18:	4660      	mov	r0, ip
10005c1a:	9300      	str	r3, [sp, #0]
10005c1c:	4643      	mov	r3, r8
10005c1e:	4665      	mov	r5, ip
10005c20:	4358      	muls	r0, r3
10005c22:	435e      	muls	r6, r3
10005c24:	9b00      	ldr	r3, [sp, #0]
10005c26:	434d      	muls	r5, r1
10005c28:	0c1b      	lsrs	r3, r3, #16
10005c2a:	4699      	mov	r9, r3
10005c2c:	19ae      	adds	r6, r5, r6
10005c2e:	444e      	add	r6, r9
10005c30:	4684      	mov	ip, r0
10005c32:	42b5      	cmp	r5, r6
10005c34:	d903      	bls.n	10005c3e <__aeabi_dmul+0x26a>
10005c36:	2380      	movs	r3, #128	; 0x80
10005c38:	025b      	lsls	r3, r3, #9
10005c3a:	4699      	mov	r9, r3
10005c3c:	44cc      	add	ip, r9
10005c3e:	0c35      	lsrs	r5, r6, #16
10005c40:	1c2b      	adds	r3, r5, #0
10005c42:	9803      	ldr	r0, [sp, #12]
10005c44:	4463      	add	r3, ip
10005c46:	4684      	mov	ip, r0
10005c48:	9305      	str	r3, [sp, #20]
10005c4a:	9b00      	ldr	r3, [sp, #0]
10005c4c:	0436      	lsls	r6, r6, #16
10005c4e:	041b      	lsls	r3, r3, #16
10005c50:	0c1b      	lsrs	r3, r3, #16
10005c52:	18f3      	adds	r3, r6, r3
10005c54:	449c      	add	ip, r3
10005c56:	4660      	mov	r0, ip
10005c58:	9003      	str	r0, [sp, #12]
10005c5a:	4658      	mov	r0, fp
10005c5c:	0405      	lsls	r5, r0, #16
10005c5e:	0c06      	lsrs	r6, r0, #16
10005c60:	0c28      	lsrs	r0, r5, #16
10005c62:	4684      	mov	ip, r0
10005c64:	4350      	muls	r0, r2
10005c66:	1c35      	adds	r5, r6, #0
10005c68:	4681      	mov	r9, r0
10005c6a:	4660      	mov	r0, ip
10005c6c:	4365      	muls	r5, r4
10005c6e:	4344      	muls	r4, r0
10005c70:	4648      	mov	r0, r9
10005c72:	0c00      	lsrs	r0, r0, #16
10005c74:	4683      	mov	fp, r0
10005c76:	4372      	muls	r2, r6
10005c78:	1914      	adds	r4, r2, r4
10005c7a:	445c      	add	r4, fp
10005c7c:	42a2      	cmp	r2, r4
10005c7e:	d903      	bls.n	10005c88 <__aeabi_dmul+0x2b4>
10005c80:	2280      	movs	r2, #128	; 0x80
10005c82:	0252      	lsls	r2, r2, #9
10005c84:	4693      	mov	fp, r2
10005c86:	445d      	add	r5, fp
10005c88:	0c22      	lsrs	r2, r4, #16
10005c8a:	18ad      	adds	r5, r5, r2
10005c8c:	464a      	mov	r2, r9
10005c8e:	0412      	lsls	r2, r2, #16
10005c90:	0c12      	lsrs	r2, r2, #16
10005c92:	0424      	lsls	r4, r4, #16
10005c94:	4640      	mov	r0, r8
10005c96:	18a4      	adds	r4, r4, r2
10005c98:	4662      	mov	r2, ip
10005c9a:	434a      	muls	r2, r1
10005c9c:	4371      	muls	r1, r6
10005c9e:	4346      	muls	r6, r0
10005ca0:	4660      	mov	r0, ip
10005ca2:	9600      	str	r6, [sp, #0]
10005ca4:	4646      	mov	r6, r8
10005ca6:	4370      	muls	r0, r6
10005ca8:	4680      	mov	r8, r0
10005caa:	0c10      	lsrs	r0, r2, #16
10005cac:	4684      	mov	ip, r0
10005cae:	4488      	add	r8, r1
10005cb0:	44e0      	add	r8, ip
10005cb2:	4541      	cmp	r1, r8
10005cb4:	d905      	bls.n	10005cc2 <__aeabi_dmul+0x2ee>
10005cb6:	2180      	movs	r1, #128	; 0x80
10005cb8:	0249      	lsls	r1, r1, #9
10005cba:	468c      	mov	ip, r1
10005cbc:	9900      	ldr	r1, [sp, #0]
10005cbe:	4461      	add	r1, ip
10005cc0:	9100      	str	r1, [sp, #0]
10005cc2:	9801      	ldr	r0, [sp, #4]
10005cc4:	9903      	ldr	r1, [sp, #12]
10005cc6:	4684      	mov	ip, r0
10005cc8:	4461      	add	r1, ip
10005cca:	4299      	cmp	r1, r3
10005ccc:	419b      	sbcs	r3, r3
10005cce:	425b      	negs	r3, r3
10005cd0:	4699      	mov	r9, r3
10005cd2:	9805      	ldr	r0, [sp, #20]
10005cd4:	4643      	mov	r3, r8
10005cd6:	4684      	mov	ip, r0
10005cd8:	0412      	lsls	r2, r2, #16
10005cda:	0c12      	lsrs	r2, r2, #16
10005cdc:	041b      	lsls	r3, r3, #16
10005cde:	189b      	adds	r3, r3, r2
10005ce0:	4463      	add	r3, ip
10005ce2:	469c      	mov	ip, r3
10005ce4:	46ab      	mov	fp, r5
10005ce6:	4283      	cmp	r3, r0
10005ce8:	419b      	sbcs	r3, r3
10005cea:	4640      	mov	r0, r8
10005cec:	190a      	adds	r2, r1, r4
10005cee:	44cc      	add	ip, r9
10005cf0:	42a2      	cmp	r2, r4
10005cf2:	4189      	sbcs	r1, r1
10005cf4:	44e3      	add	fp, ip
10005cf6:	45cc      	cmp	ip, r9
10005cf8:	41b6      	sbcs	r6, r6
10005cfa:	465c      	mov	r4, fp
10005cfc:	0c00      	lsrs	r0, r0, #16
10005cfe:	4680      	mov	r8, r0
10005d00:	4249      	negs	r1, r1
10005d02:	4276      	negs	r6, r6
10005d04:	425b      	negs	r3, r3
10005d06:	1864      	adds	r4, r4, r1
10005d08:	4333      	orrs	r3, r6
10005d0a:	4498      	add	r8, r3
10005d0c:	428c      	cmp	r4, r1
10005d0e:	4189      	sbcs	r1, r1
10005d10:	45ab      	cmp	fp, r5
10005d12:	419b      	sbcs	r3, r3
10005d14:	4249      	negs	r1, r1
10005d16:	425b      	negs	r3, r3
10005d18:	4319      	orrs	r1, r3
10005d1a:	1c0d      	adds	r5, r1, #0
10005d1c:	9b00      	ldr	r3, [sp, #0]
10005d1e:	4445      	add	r5, r8
10005d20:	18ee      	adds	r6, r5, r3
10005d22:	0276      	lsls	r6, r6, #9
10005d24:	0de5      	lsrs	r5, r4, #23
10005d26:	432e      	orrs	r6, r5
10005d28:	46b3      	mov	fp, r6
10005d2a:	9b04      	ldr	r3, [sp, #16]
10005d2c:	0256      	lsls	r6, r2, #9
10005d2e:	431e      	orrs	r6, r3
10005d30:	1e73      	subs	r3, r6, #1
10005d32:	419e      	sbcs	r6, r3
10005d34:	465b      	mov	r3, fp
10005d36:	0dd2      	lsrs	r2, r2, #23
10005d38:	4332      	orrs	r2, r6
10005d3a:	0266      	lsls	r6, r4, #9
10005d3c:	4316      	orrs	r6, r2
10005d3e:	01db      	lsls	r3, r3, #7
10005d40:	d50a      	bpl.n	10005d58 <__aeabi_dmul+0x384>
10005d42:	2301      	movs	r3, #1
10005d44:	4033      	ands	r3, r6
10005d46:	0876      	lsrs	r6, r6, #1
10005d48:	431e      	orrs	r6, r3
10005d4a:	465b      	mov	r3, fp
10005d4c:	07db      	lsls	r3, r3, #31
10005d4e:	431e      	orrs	r6, r3
10005d50:	465b      	mov	r3, fp
10005d52:	085b      	lsrs	r3, r3, #1
10005d54:	469b      	mov	fp, r3
10005d56:	4657      	mov	r7, sl
10005d58:	4b63      	ldr	r3, [pc, #396]	; (10005ee8 <__aeabi_dmul+0x514>)
10005d5a:	18fb      	adds	r3, r7, r3
10005d5c:	2b00      	cmp	r3, #0
10005d5e:	dd5a      	ble.n	10005e16 <__aeabi_dmul+0x442>
10005d60:	0772      	lsls	r2, r6, #29
10005d62:	d009      	beq.n	10005d78 <__aeabi_dmul+0x3a4>
10005d64:	220f      	movs	r2, #15
10005d66:	4032      	ands	r2, r6
10005d68:	2a04      	cmp	r2, #4
10005d6a:	d005      	beq.n	10005d78 <__aeabi_dmul+0x3a4>
10005d6c:	1d32      	adds	r2, r6, #4
10005d6e:	42b2      	cmp	r2, r6
10005d70:	41b6      	sbcs	r6, r6
10005d72:	4276      	negs	r6, r6
10005d74:	44b3      	add	fp, r6
10005d76:	1c16      	adds	r6, r2, #0
10005d78:	465a      	mov	r2, fp
10005d7a:	01d2      	lsls	r2, r2, #7
10005d7c:	d506      	bpl.n	10005d8c <__aeabi_dmul+0x3b8>
10005d7e:	465a      	mov	r2, fp
10005d80:	4b5a      	ldr	r3, [pc, #360]	; (10005eec <__aeabi_dmul+0x518>)
10005d82:	401a      	ands	r2, r3
10005d84:	2380      	movs	r3, #128	; 0x80
10005d86:	4693      	mov	fp, r2
10005d88:	00db      	lsls	r3, r3, #3
10005d8a:	18fb      	adds	r3, r7, r3
10005d8c:	4a58      	ldr	r2, [pc, #352]	; (10005ef0 <__aeabi_dmul+0x51c>)
10005d8e:	4293      	cmp	r3, r2
10005d90:	dd34      	ble.n	10005dfc <__aeabi_dmul+0x428>
10005d92:	2401      	movs	r4, #1
10005d94:	9b02      	ldr	r3, [sp, #8]
10005d96:	2500      	movs	r5, #0
10005d98:	401c      	ands	r4, r3
10005d9a:	2600      	movs	r6, #0
10005d9c:	4b55      	ldr	r3, [pc, #340]	; (10005ef4 <__aeabi_dmul+0x520>)
10005d9e:	e67d      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005da0:	2080      	movs	r0, #128	; 0x80
10005da2:	465b      	mov	r3, fp
10005da4:	0300      	lsls	r0, r0, #12
10005da6:	4203      	tst	r3, r0
10005da8:	d008      	beq.n	10005dbc <__aeabi_dmul+0x3e8>
10005daa:	4205      	tst	r5, r0
10005dac:	d106      	bne.n	10005dbc <__aeabi_dmul+0x3e8>
10005dae:	4305      	orrs	r5, r0
10005db0:	032d      	lsls	r5, r5, #12
10005db2:	0b2d      	lsrs	r5, r5, #12
10005db4:	464c      	mov	r4, r9
10005db6:	1c16      	adds	r6, r2, #0
10005db8:	4b4e      	ldr	r3, [pc, #312]	; (10005ef4 <__aeabi_dmul+0x520>)
10005dba:	e66f      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005dbc:	465d      	mov	r5, fp
10005dbe:	4305      	orrs	r5, r0
10005dc0:	032d      	lsls	r5, r5, #12
10005dc2:	0b2d      	lsrs	r5, r5, #12
10005dc4:	4b4b      	ldr	r3, [pc, #300]	; (10005ef4 <__aeabi_dmul+0x520>)
10005dc6:	e669      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005dc8:	4650      	mov	r0, sl
10005dca:	f7fd f897 	bl	10002efc <__clzsi2>
10005dce:	1c03      	adds	r3, r0, #0
10005dd0:	3320      	adds	r3, #32
10005dd2:	2b27      	cmp	r3, #39	; 0x27
10005dd4:	dc00      	bgt.n	10005dd8 <__aeabi_dmul+0x404>
10005dd6:	e6a6      	b.n	10005b26 <__aeabi_dmul+0x152>
10005dd8:	4655      	mov	r5, sl
10005dda:	3808      	subs	r0, #8
10005ddc:	4085      	lsls	r5, r0
10005dde:	2200      	movs	r2, #0
10005de0:	e6ac      	b.n	10005b3c <__aeabi_dmul+0x168>
10005de2:	1c28      	adds	r0, r5, #0
10005de4:	f7fd f88a 	bl	10002efc <__clzsi2>
10005de8:	1c02      	adds	r2, r0, #0
10005dea:	3220      	adds	r2, #32
10005dec:	2a27      	cmp	r2, #39	; 0x27
10005dee:	dc00      	bgt.n	10005df2 <__aeabi_dmul+0x41e>
10005df0:	e675      	b.n	10005ade <__aeabi_dmul+0x10a>
10005df2:	3808      	subs	r0, #8
10005df4:	4085      	lsls	r5, r0
10005df6:	2600      	movs	r6, #0
10005df8:	46ab      	mov	fp, r5
10005dfa:	e67d      	b.n	10005af8 <__aeabi_dmul+0x124>
10005dfc:	465a      	mov	r2, fp
10005dfe:	08f6      	lsrs	r6, r6, #3
10005e00:	0752      	lsls	r2, r2, #29
10005e02:	4316      	orrs	r6, r2
10005e04:	465a      	mov	r2, fp
10005e06:	2401      	movs	r4, #1
10005e08:	0255      	lsls	r5, r2, #9
10005e0a:	9a02      	ldr	r2, [sp, #8]
10005e0c:	055b      	lsls	r3, r3, #21
10005e0e:	0b2d      	lsrs	r5, r5, #12
10005e10:	0d5b      	lsrs	r3, r3, #21
10005e12:	4014      	ands	r4, r2
10005e14:	e642      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005e16:	4d38      	ldr	r5, [pc, #224]	; (10005ef8 <__aeabi_dmul+0x524>)
10005e18:	1bed      	subs	r5, r5, r7
10005e1a:	2d38      	cmp	r5, #56	; 0x38
10005e1c:	dd0a      	ble.n	10005e34 <__aeabi_dmul+0x460>
10005e1e:	2401      	movs	r4, #1
10005e20:	9b02      	ldr	r3, [sp, #8]
10005e22:	2500      	movs	r5, #0
10005e24:	401c      	ands	r4, r3
10005e26:	2600      	movs	r6, #0
10005e28:	2300      	movs	r3, #0
10005e2a:	e637      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005e2c:	9b01      	ldr	r3, [sp, #4]
10005e2e:	4657      	mov	r7, sl
10005e30:	9302      	str	r3, [sp, #8]
10005e32:	e791      	b.n	10005d58 <__aeabi_dmul+0x384>
10005e34:	2d1f      	cmp	r5, #31
10005e36:	dc25      	bgt.n	10005e84 <__aeabi_dmul+0x4b0>
10005e38:	4b30      	ldr	r3, [pc, #192]	; (10005efc <__aeabi_dmul+0x528>)
10005e3a:	1c32      	adds	r2, r6, #0
10005e3c:	469c      	mov	ip, r3
10005e3e:	4467      	add	r7, ip
10005e40:	40be      	lsls	r6, r7
10005e42:	465b      	mov	r3, fp
10005e44:	40bb      	lsls	r3, r7
10005e46:	1c37      	adds	r7, r6, #0
10005e48:	40ea      	lsrs	r2, r5
10005e4a:	1e7e      	subs	r6, r7, #1
10005e4c:	41b7      	sbcs	r7, r6
10005e4e:	4313      	orrs	r3, r2
10005e50:	433b      	orrs	r3, r7
10005e52:	1c1e      	adds	r6, r3, #0
10005e54:	465b      	mov	r3, fp
10005e56:	40eb      	lsrs	r3, r5
10005e58:	1c1d      	adds	r5, r3, #0
10005e5a:	0773      	lsls	r3, r6, #29
10005e5c:	d009      	beq.n	10005e72 <__aeabi_dmul+0x49e>
10005e5e:	230f      	movs	r3, #15
10005e60:	4033      	ands	r3, r6
10005e62:	2b04      	cmp	r3, #4
10005e64:	d005      	beq.n	10005e72 <__aeabi_dmul+0x49e>
10005e66:	1d33      	adds	r3, r6, #4
10005e68:	42b3      	cmp	r3, r6
10005e6a:	41b6      	sbcs	r6, r6
10005e6c:	4276      	negs	r6, r6
10005e6e:	19ad      	adds	r5, r5, r6
10005e70:	1c1e      	adds	r6, r3, #0
10005e72:	022b      	lsls	r3, r5, #8
10005e74:	d520      	bpl.n	10005eb8 <__aeabi_dmul+0x4e4>
10005e76:	2401      	movs	r4, #1
10005e78:	9b02      	ldr	r3, [sp, #8]
10005e7a:	2500      	movs	r5, #0
10005e7c:	401c      	ands	r4, r3
10005e7e:	2600      	movs	r6, #0
10005e80:	2301      	movs	r3, #1
10005e82:	e60b      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005e84:	465a      	mov	r2, fp
10005e86:	4b1e      	ldr	r3, [pc, #120]	; (10005f00 <__aeabi_dmul+0x52c>)
10005e88:	1bdb      	subs	r3, r3, r7
10005e8a:	40da      	lsrs	r2, r3
10005e8c:	1c13      	adds	r3, r2, #0
10005e8e:	2d20      	cmp	r5, #32
10005e90:	d01c      	beq.n	10005ecc <__aeabi_dmul+0x4f8>
10005e92:	4a1c      	ldr	r2, [pc, #112]	; (10005f04 <__aeabi_dmul+0x530>)
10005e94:	4694      	mov	ip, r2
10005e96:	465a      	mov	r2, fp
10005e98:	4467      	add	r7, ip
10005e9a:	40ba      	lsls	r2, r7
10005e9c:	1c17      	adds	r7, r2, #0
10005e9e:	433e      	orrs	r6, r7
10005ea0:	1e72      	subs	r2, r6, #1
10005ea2:	4196      	sbcs	r6, r2
10005ea4:	431e      	orrs	r6, r3
10005ea6:	2307      	movs	r3, #7
10005ea8:	2500      	movs	r5, #0
10005eaa:	4033      	ands	r3, r6
10005eac:	d007      	beq.n	10005ebe <__aeabi_dmul+0x4ea>
10005eae:	230f      	movs	r3, #15
10005eb0:	2500      	movs	r5, #0
10005eb2:	4033      	ands	r3, r6
10005eb4:	2b04      	cmp	r3, #4
10005eb6:	d1d6      	bne.n	10005e66 <__aeabi_dmul+0x492>
10005eb8:	076b      	lsls	r3, r5, #29
10005eba:	026d      	lsls	r5, r5, #9
10005ebc:	0b2d      	lsrs	r5, r5, #12
10005ebe:	2401      	movs	r4, #1
10005ec0:	08f6      	lsrs	r6, r6, #3
10005ec2:	431e      	orrs	r6, r3
10005ec4:	9b02      	ldr	r3, [sp, #8]
10005ec6:	401c      	ands	r4, r3
10005ec8:	2300      	movs	r3, #0
10005eca:	e5e7      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005ecc:	2700      	movs	r7, #0
10005ece:	e7e6      	b.n	10005e9e <__aeabi_dmul+0x4ca>
10005ed0:	2580      	movs	r5, #128	; 0x80
10005ed2:	465b      	mov	r3, fp
10005ed4:	2401      	movs	r4, #1
10005ed6:	032d      	lsls	r5, r5, #12
10005ed8:	431d      	orrs	r5, r3
10005eda:	9b01      	ldr	r3, [sp, #4]
10005edc:	032d      	lsls	r5, r5, #12
10005ede:	4023      	ands	r3, r4
10005ee0:	1c1c      	adds	r4, r3, #0
10005ee2:	0b2d      	lsrs	r5, r5, #12
10005ee4:	4b03      	ldr	r3, [pc, #12]	; (10005ef4 <__aeabi_dmul+0x520>)
10005ee6:	e5d9      	b.n	10005a9c <__aeabi_dmul+0xc8>
10005ee8:	000003ff 	.word	0x000003ff
10005eec:	feffffff 	.word	0xfeffffff
10005ef0:	000007fe 	.word	0x000007fe
10005ef4:	000007ff 	.word	0x000007ff
10005ef8:	fffffc02 	.word	0xfffffc02
10005efc:	0000041e 	.word	0x0000041e
10005f00:	fffffbe2 	.word	0xfffffbe2
10005f04:	0000043e 	.word	0x0000043e

10005f08 <__aeabi_dsub>:
10005f08:	b5f0      	push	{r4, r5, r6, r7, lr}
10005f0a:	464d      	mov	r5, r9
10005f0c:	4644      	mov	r4, r8
10005f0e:	465f      	mov	r7, fp
10005f10:	4656      	mov	r6, sl
10005f12:	b4f0      	push	{r4, r5, r6, r7}
10005f14:	1c0e      	adds	r6, r1, #0
10005f16:	1c11      	adds	r1, r2, #0
10005f18:	0332      	lsls	r2, r6, #12
10005f1a:	0a52      	lsrs	r2, r2, #9
10005f1c:	0f47      	lsrs	r7, r0, #29
10005f1e:	4317      	orrs	r7, r2
10005f20:	00c5      	lsls	r5, r0, #3
10005f22:	031a      	lsls	r2, r3, #12
10005f24:	0058      	lsls	r0, r3, #1
10005f26:	0fdb      	lsrs	r3, r3, #31
10005f28:	4699      	mov	r9, r3
10005f2a:	0a52      	lsrs	r2, r2, #9
10005f2c:	0f4b      	lsrs	r3, r1, #29
10005f2e:	b083      	sub	sp, #12
10005f30:	431a      	orrs	r2, r3
10005f32:	00cb      	lsls	r3, r1, #3
10005f34:	9301      	str	r3, [sp, #4]
10005f36:	4bcf      	ldr	r3, [pc, #828]	; (10006274 <__aeabi_dsub+0x36c>)
10005f38:	0074      	lsls	r4, r6, #1
10005f3a:	0ff6      	lsrs	r6, r6, #31
10005f3c:	0d64      	lsrs	r4, r4, #21
10005f3e:	46b0      	mov	r8, r6
10005f40:	0d40      	lsrs	r0, r0, #21
10005f42:	4298      	cmp	r0, r3
10005f44:	d100      	bne.n	10005f48 <__aeabi_dsub+0x40>
10005f46:	e0e8      	b.n	1000611a <__aeabi_dsub+0x212>
10005f48:	2301      	movs	r3, #1
10005f4a:	4649      	mov	r1, r9
10005f4c:	4059      	eors	r1, r3
10005f4e:	1c0b      	adds	r3, r1, #0
10005f50:	429e      	cmp	r6, r3
10005f52:	d100      	bne.n	10005f56 <__aeabi_dsub+0x4e>
10005f54:	e0b1      	b.n	100060ba <__aeabi_dsub+0x1b2>
10005f56:	1a26      	subs	r6, r4, r0
10005f58:	2e00      	cmp	r6, #0
10005f5a:	dc00      	bgt.n	10005f5e <__aeabi_dsub+0x56>
10005f5c:	e11c      	b.n	10006198 <__aeabi_dsub+0x290>
10005f5e:	2800      	cmp	r0, #0
10005f60:	d142      	bne.n	10005fe8 <__aeabi_dsub+0xe0>
10005f62:	1c13      	adds	r3, r2, #0
10005f64:	9901      	ldr	r1, [sp, #4]
10005f66:	430b      	orrs	r3, r1
10005f68:	d000      	beq.n	10005f6c <__aeabi_dsub+0x64>
10005f6a:	e0e6      	b.n	1000613a <__aeabi_dsub+0x232>
10005f6c:	076b      	lsls	r3, r5, #29
10005f6e:	d100      	bne.n	10005f72 <__aeabi_dsub+0x6a>
10005f70:	e08e      	b.n	10006090 <__aeabi_dsub+0x188>
10005f72:	230f      	movs	r3, #15
10005f74:	402b      	ands	r3, r5
10005f76:	2b04      	cmp	r3, #4
10005f78:	d100      	bne.n	10005f7c <__aeabi_dsub+0x74>
10005f7a:	e089      	b.n	10006090 <__aeabi_dsub+0x188>
10005f7c:	1d2a      	adds	r2, r5, #4
10005f7e:	42aa      	cmp	r2, r5
10005f80:	41ad      	sbcs	r5, r5
10005f82:	2380      	movs	r3, #128	; 0x80
10005f84:	2601      	movs	r6, #1
10005f86:	4641      	mov	r1, r8
10005f88:	426d      	negs	r5, r5
10005f8a:	197f      	adds	r7, r7, r5
10005f8c:	041b      	lsls	r3, r3, #16
10005f8e:	403b      	ands	r3, r7
10005f90:	400e      	ands	r6, r1
10005f92:	1c15      	adds	r5, r2, #0
10005f94:	2b00      	cmp	r3, #0
10005f96:	d100      	bne.n	10005f9a <__aeabi_dsub+0x92>
10005f98:	e083      	b.n	100060a2 <__aeabi_dsub+0x19a>
10005f9a:	4bb6      	ldr	r3, [pc, #728]	; (10006274 <__aeabi_dsub+0x36c>)
10005f9c:	3401      	adds	r4, #1
10005f9e:	429c      	cmp	r4, r3
10005fa0:	d100      	bne.n	10005fa4 <__aeabi_dsub+0x9c>
10005fa2:	e116      	b.n	100061d2 <__aeabi_dsub+0x2ca>
10005fa4:	1c3a      	adds	r2, r7, #0
10005fa6:	4bb4      	ldr	r3, [pc, #720]	; (10006278 <__aeabi_dsub+0x370>)
10005fa8:	08ed      	lsrs	r5, r5, #3
10005faa:	401a      	ands	r2, r3
10005fac:	0750      	lsls	r0, r2, #29
10005fae:	0564      	lsls	r4, r4, #21
10005fb0:	0252      	lsls	r2, r2, #9
10005fb2:	4305      	orrs	r5, r0
10005fb4:	0b12      	lsrs	r2, r2, #12
10005fb6:	0d64      	lsrs	r4, r4, #21
10005fb8:	2100      	movs	r1, #0
10005fba:	0312      	lsls	r2, r2, #12
10005fbc:	0d0b      	lsrs	r3, r1, #20
10005fbe:	051b      	lsls	r3, r3, #20
10005fc0:	0564      	lsls	r4, r4, #21
10005fc2:	0b12      	lsrs	r2, r2, #12
10005fc4:	431a      	orrs	r2, r3
10005fc6:	0863      	lsrs	r3, r4, #1
10005fc8:	4cac      	ldr	r4, [pc, #688]	; (1000627c <__aeabi_dsub+0x374>)
10005fca:	07f6      	lsls	r6, r6, #31
10005fcc:	4014      	ands	r4, r2
10005fce:	431c      	orrs	r4, r3
10005fd0:	0064      	lsls	r4, r4, #1
10005fd2:	0864      	lsrs	r4, r4, #1
10005fd4:	4334      	orrs	r4, r6
10005fd6:	1c28      	adds	r0, r5, #0
10005fd8:	1c21      	adds	r1, r4, #0
10005fda:	b003      	add	sp, #12
10005fdc:	bc3c      	pop	{r2, r3, r4, r5}
10005fde:	4690      	mov	r8, r2
10005fe0:	4699      	mov	r9, r3
10005fe2:	46a2      	mov	sl, r4
10005fe4:	46ab      	mov	fp, r5
10005fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
10005fe8:	4ba2      	ldr	r3, [pc, #648]	; (10006274 <__aeabi_dsub+0x36c>)
10005fea:	429c      	cmp	r4, r3
10005fec:	d0be      	beq.n	10005f6c <__aeabi_dsub+0x64>
10005fee:	2380      	movs	r3, #128	; 0x80
10005ff0:	041b      	lsls	r3, r3, #16
10005ff2:	431a      	orrs	r2, r3
10005ff4:	2e38      	cmp	r6, #56	; 0x38
10005ff6:	dd00      	ble.n	10005ffa <__aeabi_dsub+0xf2>
10005ff8:	e103      	b.n	10006202 <__aeabi_dsub+0x2fa>
10005ffa:	2e1f      	cmp	r6, #31
10005ffc:	dd00      	ble.n	10006000 <__aeabi_dsub+0xf8>
10005ffe:	e13f      	b.n	10006280 <__aeabi_dsub+0x378>
10006000:	2020      	movs	r0, #32
10006002:	1b83      	subs	r3, r0, r6
10006004:	4699      	mov	r9, r3
10006006:	1c13      	adds	r3, r2, #0
10006008:	4649      	mov	r1, r9
1000600a:	408b      	lsls	r3, r1
1000600c:	469c      	mov	ip, r3
1000600e:	9b01      	ldr	r3, [sp, #4]
10006010:	4660      	mov	r0, ip
10006012:	40f3      	lsrs	r3, r6
10006014:	4303      	orrs	r3, r0
10006016:	9801      	ldr	r0, [sp, #4]
10006018:	40f2      	lsrs	r2, r6
1000601a:	4088      	lsls	r0, r1
1000601c:	1c01      	adds	r1, r0, #0
1000601e:	1e48      	subs	r0, r1, #1
10006020:	4181      	sbcs	r1, r0
10006022:	430b      	orrs	r3, r1
10006024:	1aeb      	subs	r3, r5, r3
10006026:	429d      	cmp	r5, r3
10006028:	4180      	sbcs	r0, r0
1000602a:	1c1d      	adds	r5, r3, #0
1000602c:	1aba      	subs	r2, r7, r2
1000602e:	4240      	negs	r0, r0
10006030:	1a17      	subs	r7, r2, r0
10006032:	023b      	lsls	r3, r7, #8
10006034:	d400      	bmi.n	10006038 <__aeabi_dsub+0x130>
10006036:	e0a8      	b.n	1000618a <__aeabi_dsub+0x282>
10006038:	027a      	lsls	r2, r7, #9
1000603a:	0a56      	lsrs	r6, r2, #9
1000603c:	2e00      	cmp	r6, #0
1000603e:	d100      	bne.n	10006042 <__aeabi_dsub+0x13a>
10006040:	e0ca      	b.n	100061d8 <__aeabi_dsub+0x2d0>
10006042:	1c30      	adds	r0, r6, #0
10006044:	f7fc ff5a 	bl	10002efc <__clzsi2>
10006048:	1c03      	adds	r3, r0, #0
1000604a:	3b08      	subs	r3, #8
1000604c:	2b1f      	cmp	r3, #31
1000604e:	dd00      	ble.n	10006052 <__aeabi_dsub+0x14a>
10006050:	e0cb      	b.n	100061ea <__aeabi_dsub+0x2e2>
10006052:	2228      	movs	r2, #40	; 0x28
10006054:	1c29      	adds	r1, r5, #0
10006056:	1a12      	subs	r2, r2, r0
10006058:	40d1      	lsrs	r1, r2
1000605a:	409e      	lsls	r6, r3
1000605c:	1c0a      	adds	r2, r1, #0
1000605e:	409d      	lsls	r5, r3
10006060:	4332      	orrs	r2, r6
10006062:	429c      	cmp	r4, r3
10006064:	dd00      	ble.n	10006068 <__aeabi_dsub+0x160>
10006066:	e0c8      	b.n	100061fa <__aeabi_dsub+0x2f2>
10006068:	1b1c      	subs	r4, r3, r4
1000606a:	1c67      	adds	r7, r4, #1
1000606c:	2f1f      	cmp	r7, #31
1000606e:	dd00      	ble.n	10006072 <__aeabi_dsub+0x16a>
10006070:	e0ed      	b.n	1000624e <__aeabi_dsub+0x346>
10006072:	231f      	movs	r3, #31
10006074:	1c29      	adds	r1, r5, #0
10006076:	1b1c      	subs	r4, r3, r4
10006078:	1c13      	adds	r3, r2, #0
1000607a:	40a5      	lsls	r5, r4
1000607c:	40a3      	lsls	r3, r4
1000607e:	40f9      	lsrs	r1, r7
10006080:	1e6c      	subs	r4, r5, #1
10006082:	41a5      	sbcs	r5, r4
10006084:	40fa      	lsrs	r2, r7
10006086:	4319      	orrs	r1, r3
10006088:	430d      	orrs	r5, r1
1000608a:	1c17      	adds	r7, r2, #0
1000608c:	2400      	movs	r4, #0
1000608e:	e76d      	b.n	10005f6c <__aeabi_dsub+0x64>
10006090:	2380      	movs	r3, #128	; 0x80
10006092:	2601      	movs	r6, #1
10006094:	4642      	mov	r2, r8
10006096:	041b      	lsls	r3, r3, #16
10006098:	403b      	ands	r3, r7
1000609a:	4016      	ands	r6, r2
1000609c:	2b00      	cmp	r3, #0
1000609e:	d000      	beq.n	100060a2 <__aeabi_dsub+0x19a>
100060a0:	e77b      	b.n	10005f9a <__aeabi_dsub+0x92>
100060a2:	4b74      	ldr	r3, [pc, #464]	; (10006274 <__aeabi_dsub+0x36c>)
100060a4:	08ed      	lsrs	r5, r5, #3
100060a6:	0778      	lsls	r0, r7, #29
100060a8:	4305      	orrs	r5, r0
100060aa:	08fa      	lsrs	r2, r7, #3
100060ac:	429c      	cmp	r4, r3
100060ae:	d03b      	beq.n	10006128 <__aeabi_dsub+0x220>
100060b0:	0312      	lsls	r2, r2, #12
100060b2:	0564      	lsls	r4, r4, #21
100060b4:	0b12      	lsrs	r2, r2, #12
100060b6:	0d64      	lsrs	r4, r4, #21
100060b8:	e77e      	b.n	10005fb8 <__aeabi_dsub+0xb0>
100060ba:	1a23      	subs	r3, r4, r0
100060bc:	469a      	mov	sl, r3
100060be:	2b00      	cmp	r3, #0
100060c0:	dc00      	bgt.n	100060c4 <__aeabi_dsub+0x1bc>
100060c2:	e0a5      	b.n	10006210 <__aeabi_dsub+0x308>
100060c4:	2800      	cmp	r0, #0
100060c6:	d044      	beq.n	10006152 <__aeabi_dsub+0x24a>
100060c8:	486a      	ldr	r0, [pc, #424]	; (10006274 <__aeabi_dsub+0x36c>)
100060ca:	4284      	cmp	r4, r0
100060cc:	d100      	bne.n	100060d0 <__aeabi_dsub+0x1c8>
100060ce:	e74d      	b.n	10005f6c <__aeabi_dsub+0x64>
100060d0:	2080      	movs	r0, #128	; 0x80
100060d2:	0400      	lsls	r0, r0, #16
100060d4:	4302      	orrs	r2, r0
100060d6:	4653      	mov	r3, sl
100060d8:	2b38      	cmp	r3, #56	; 0x38
100060da:	dc00      	bgt.n	100060de <__aeabi_dsub+0x1d6>
100060dc:	e11c      	b.n	10006318 <__aeabi_dsub+0x410>
100060de:	9b01      	ldr	r3, [sp, #4]
100060e0:	431a      	orrs	r2, r3
100060e2:	1e51      	subs	r1, r2, #1
100060e4:	418a      	sbcs	r2, r1
100060e6:	b2d1      	uxtb	r1, r2
100060e8:	2200      	movs	r2, #0
100060ea:	1949      	adds	r1, r1, r5
100060ec:	42a9      	cmp	r1, r5
100060ee:	4180      	sbcs	r0, r0
100060f0:	1c0d      	adds	r5, r1, #0
100060f2:	19d2      	adds	r2, r2, r7
100060f4:	4240      	negs	r0, r0
100060f6:	1817      	adds	r7, r2, r0
100060f8:	023b      	lsls	r3, r7, #8
100060fa:	d546      	bpl.n	1000618a <__aeabi_dsub+0x282>
100060fc:	4b5d      	ldr	r3, [pc, #372]	; (10006274 <__aeabi_dsub+0x36c>)
100060fe:	3401      	adds	r4, #1
10006100:	429c      	cmp	r4, r3
10006102:	d100      	bne.n	10006106 <__aeabi_dsub+0x1fe>
10006104:	e169      	b.n	100063da <__aeabi_dsub+0x4d2>
10006106:	2001      	movs	r0, #1
10006108:	4a5b      	ldr	r2, [pc, #364]	; (10006278 <__aeabi_dsub+0x370>)
1000610a:	086b      	lsrs	r3, r5, #1
1000610c:	403a      	ands	r2, r7
1000610e:	4028      	ands	r0, r5
10006110:	4318      	orrs	r0, r3
10006112:	07d5      	lsls	r5, r2, #31
10006114:	4305      	orrs	r5, r0
10006116:	0857      	lsrs	r7, r2, #1
10006118:	e728      	b.n	10005f6c <__aeabi_dsub+0x64>
1000611a:	1c13      	adds	r3, r2, #0
1000611c:	9901      	ldr	r1, [sp, #4]
1000611e:	430b      	orrs	r3, r1
10006120:	d100      	bne.n	10006124 <__aeabi_dsub+0x21c>
10006122:	e711      	b.n	10005f48 <__aeabi_dsub+0x40>
10006124:	464b      	mov	r3, r9
10006126:	e713      	b.n	10005f50 <__aeabi_dsub+0x48>
10006128:	1c2b      	adds	r3, r5, #0
1000612a:	4313      	orrs	r3, r2
1000612c:	d051      	beq.n	100061d2 <__aeabi_dsub+0x2ca>
1000612e:	2380      	movs	r3, #128	; 0x80
10006130:	031b      	lsls	r3, r3, #12
10006132:	431a      	orrs	r2, r3
10006134:	0312      	lsls	r2, r2, #12
10006136:	0b12      	lsrs	r2, r2, #12
10006138:	e73e      	b.n	10005fb8 <__aeabi_dsub+0xb0>
1000613a:	3e01      	subs	r6, #1
1000613c:	2e00      	cmp	r6, #0
1000613e:	d000      	beq.n	10006142 <__aeabi_dsub+0x23a>
10006140:	e080      	b.n	10006244 <__aeabi_dsub+0x33c>
10006142:	1a69      	subs	r1, r5, r1
10006144:	428d      	cmp	r5, r1
10006146:	419b      	sbcs	r3, r3
10006148:	1aba      	subs	r2, r7, r2
1000614a:	425b      	negs	r3, r3
1000614c:	1ad7      	subs	r7, r2, r3
1000614e:	1c0d      	adds	r5, r1, #0
10006150:	e76f      	b.n	10006032 <__aeabi_dsub+0x12a>
10006152:	1c10      	adds	r0, r2, #0
10006154:	9b01      	ldr	r3, [sp, #4]
10006156:	4318      	orrs	r0, r3
10006158:	d100      	bne.n	1000615c <__aeabi_dsub+0x254>
1000615a:	e707      	b.n	10005f6c <__aeabi_dsub+0x64>
1000615c:	2301      	movs	r3, #1
1000615e:	425b      	negs	r3, r3
10006160:	469c      	mov	ip, r3
10006162:	44e2      	add	sl, ip
10006164:	4653      	mov	r3, sl
10006166:	2b00      	cmp	r3, #0
10006168:	d000      	beq.n	1000616c <__aeabi_dsub+0x264>
1000616a:	e102      	b.n	10006372 <__aeabi_dsub+0x46a>
1000616c:	9b01      	ldr	r3, [sp, #4]
1000616e:	19d2      	adds	r2, r2, r7
10006170:	1959      	adds	r1, r3, r5
10006172:	42a9      	cmp	r1, r5
10006174:	419b      	sbcs	r3, r3
10006176:	425b      	negs	r3, r3
10006178:	18d7      	adds	r7, r2, r3
1000617a:	1c0d      	adds	r5, r1, #0
1000617c:	e7bc      	b.n	100060f8 <__aeabi_dsub+0x1f0>
1000617e:	4663      	mov	r3, ip
10006180:	4303      	orrs	r3, r0
10006182:	d100      	bne.n	10006186 <__aeabi_dsub+0x27e>
10006184:	e128      	b.n	100063d8 <__aeabi_dsub+0x4d0>
10006186:	1c07      	adds	r7, r0, #0
10006188:	4665      	mov	r5, ip
1000618a:	076b      	lsls	r3, r5, #29
1000618c:	d000      	beq.n	10006190 <__aeabi_dsub+0x288>
1000618e:	e6f0      	b.n	10005f72 <__aeabi_dsub+0x6a>
10006190:	2601      	movs	r6, #1
10006192:	4643      	mov	r3, r8
10006194:	401e      	ands	r6, r3
10006196:	e784      	b.n	100060a2 <__aeabi_dsub+0x19a>
10006198:	2e00      	cmp	r6, #0
1000619a:	d000      	beq.n	1000619e <__aeabi_dsub+0x296>
1000619c:	e081      	b.n	100062a2 <__aeabi_dsub+0x39a>
1000619e:	1c60      	adds	r0, r4, #1
100061a0:	0540      	lsls	r0, r0, #21
100061a2:	0d40      	lsrs	r0, r0, #21
100061a4:	2801      	cmp	r0, #1
100061a6:	dc00      	bgt.n	100061aa <__aeabi_dsub+0x2a2>
100061a8:	e107      	b.n	100063ba <__aeabi_dsub+0x4b2>
100061aa:	9901      	ldr	r1, [sp, #4]
100061ac:	1a68      	subs	r0, r5, r1
100061ae:	4684      	mov	ip, r0
100061b0:	4565      	cmp	r5, ip
100061b2:	41b6      	sbcs	r6, r6
100061b4:	1ab8      	subs	r0, r7, r2
100061b6:	4276      	negs	r6, r6
100061b8:	1b86      	subs	r6, r0, r6
100061ba:	0230      	lsls	r0, r6, #8
100061bc:	d400      	bmi.n	100061c0 <__aeabi_dsub+0x2b8>
100061be:	e0a1      	b.n	10006304 <__aeabi_dsub+0x3fc>
100061c0:	468c      	mov	ip, r1
100061c2:	1b4d      	subs	r5, r1, r5
100061c4:	45ac      	cmp	ip, r5
100061c6:	4189      	sbcs	r1, r1
100061c8:	1bd2      	subs	r2, r2, r7
100061ca:	4249      	negs	r1, r1
100061cc:	1a56      	subs	r6, r2, r1
100061ce:	4698      	mov	r8, r3
100061d0:	e734      	b.n	1000603c <__aeabi_dsub+0x134>
100061d2:	2200      	movs	r2, #0
100061d4:	2500      	movs	r5, #0
100061d6:	e6ef      	b.n	10005fb8 <__aeabi_dsub+0xb0>
100061d8:	1c28      	adds	r0, r5, #0
100061da:	f7fc fe8f 	bl	10002efc <__clzsi2>
100061de:	3020      	adds	r0, #32
100061e0:	1c03      	adds	r3, r0, #0
100061e2:	3b08      	subs	r3, #8
100061e4:	2b1f      	cmp	r3, #31
100061e6:	dc00      	bgt.n	100061ea <__aeabi_dsub+0x2e2>
100061e8:	e733      	b.n	10006052 <__aeabi_dsub+0x14a>
100061ea:	1c02      	adds	r2, r0, #0
100061ec:	3a28      	subs	r2, #40	; 0x28
100061ee:	4095      	lsls	r5, r2
100061f0:	1c2a      	adds	r2, r5, #0
100061f2:	2500      	movs	r5, #0
100061f4:	429c      	cmp	r4, r3
100061f6:	dc00      	bgt.n	100061fa <__aeabi_dsub+0x2f2>
100061f8:	e736      	b.n	10006068 <__aeabi_dsub+0x160>
100061fa:	4f1f      	ldr	r7, [pc, #124]	; (10006278 <__aeabi_dsub+0x370>)
100061fc:	1ae4      	subs	r4, r4, r3
100061fe:	4017      	ands	r7, r2
10006200:	e6b4      	b.n	10005f6c <__aeabi_dsub+0x64>
10006202:	9b01      	ldr	r3, [sp, #4]
10006204:	431a      	orrs	r2, r3
10006206:	1e51      	subs	r1, r2, #1
10006208:	418a      	sbcs	r2, r1
1000620a:	b2d3      	uxtb	r3, r2
1000620c:	2200      	movs	r2, #0
1000620e:	e709      	b.n	10006024 <__aeabi_dsub+0x11c>
10006210:	2b00      	cmp	r3, #0
10006212:	d000      	beq.n	10006216 <__aeabi_dsub+0x30e>
10006214:	e101      	b.n	1000641a <__aeabi_dsub+0x512>
10006216:	1c60      	adds	r0, r4, #1
10006218:	0543      	lsls	r3, r0, #21
1000621a:	0d5b      	lsrs	r3, r3, #21
1000621c:	2b01      	cmp	r3, #1
1000621e:	dc00      	bgt.n	10006222 <__aeabi_dsub+0x31a>
10006220:	e0b0      	b.n	10006384 <__aeabi_dsub+0x47c>
10006222:	4b14      	ldr	r3, [pc, #80]	; (10006274 <__aeabi_dsub+0x36c>)
10006224:	4298      	cmp	r0, r3
10006226:	d100      	bne.n	1000622a <__aeabi_dsub+0x322>
10006228:	e11e      	b.n	10006468 <__aeabi_dsub+0x560>
1000622a:	9b01      	ldr	r3, [sp, #4]
1000622c:	19d2      	adds	r2, r2, r7
1000622e:	1959      	adds	r1, r3, r5
10006230:	42a9      	cmp	r1, r5
10006232:	419b      	sbcs	r3, r3
10006234:	425b      	negs	r3, r3
10006236:	18d2      	adds	r2, r2, r3
10006238:	0849      	lsrs	r1, r1, #1
1000623a:	07d5      	lsls	r5, r2, #31
1000623c:	430d      	orrs	r5, r1
1000623e:	0857      	lsrs	r7, r2, #1
10006240:	1c04      	adds	r4, r0, #0
10006242:	e693      	b.n	10005f6c <__aeabi_dsub+0x64>
10006244:	4b0b      	ldr	r3, [pc, #44]	; (10006274 <__aeabi_dsub+0x36c>)
10006246:	429c      	cmp	r4, r3
10006248:	d000      	beq.n	1000624c <__aeabi_dsub+0x344>
1000624a:	e6d3      	b.n	10005ff4 <__aeabi_dsub+0xec>
1000624c:	e68e      	b.n	10005f6c <__aeabi_dsub+0x64>
1000624e:	1c21      	adds	r1, r4, #0
10006250:	1c13      	adds	r3, r2, #0
10006252:	391f      	subs	r1, #31
10006254:	40cb      	lsrs	r3, r1
10006256:	1c19      	adds	r1, r3, #0
10006258:	2f20      	cmp	r7, #32
1000625a:	d100      	bne.n	1000625e <__aeabi_dsub+0x356>
1000625c:	e08e      	b.n	1000637c <__aeabi_dsub+0x474>
1000625e:	233f      	movs	r3, #63	; 0x3f
10006260:	1b1c      	subs	r4, r3, r4
10006262:	40a2      	lsls	r2, r4
10006264:	4315      	orrs	r5, r2
10006266:	1e6a      	subs	r2, r5, #1
10006268:	4195      	sbcs	r5, r2
1000626a:	2700      	movs	r7, #0
1000626c:	430d      	orrs	r5, r1
1000626e:	2400      	movs	r4, #0
10006270:	e78b      	b.n	1000618a <__aeabi_dsub+0x282>
10006272:	46c0      	nop			; (mov r8, r8)
10006274:	000007ff 	.word	0x000007ff
10006278:	ff7fffff 	.word	0xff7fffff
1000627c:	800fffff 	.word	0x800fffff
10006280:	1c33      	adds	r3, r6, #0
10006282:	1c10      	adds	r0, r2, #0
10006284:	3b20      	subs	r3, #32
10006286:	40d8      	lsrs	r0, r3
10006288:	2e20      	cmp	r6, #32
1000628a:	d079      	beq.n	10006380 <__aeabi_dsub+0x478>
1000628c:	2340      	movs	r3, #64	; 0x40
1000628e:	1b9b      	subs	r3, r3, r6
10006290:	409a      	lsls	r2, r3
10006292:	1c13      	adds	r3, r2, #0
10006294:	9a01      	ldr	r2, [sp, #4]
10006296:	4313      	orrs	r3, r2
10006298:	1e59      	subs	r1, r3, #1
1000629a:	418b      	sbcs	r3, r1
1000629c:	2200      	movs	r2, #0
1000629e:	4303      	orrs	r3, r0
100062a0:	e6c0      	b.n	10006024 <__aeabi_dsub+0x11c>
100062a2:	2c00      	cmp	r4, #0
100062a4:	d053      	beq.n	1000634e <__aeabi_dsub+0x446>
100062a6:	4cc7      	ldr	r4, [pc, #796]	; (100065c4 <__aeabi_dsub+0x6bc>)
100062a8:	42a0      	cmp	r0, r4
100062aa:	d100      	bne.n	100062ae <__aeabi_dsub+0x3a6>
100062ac:	e0b0      	b.n	10006410 <__aeabi_dsub+0x508>
100062ae:	2480      	movs	r4, #128	; 0x80
100062b0:	4271      	negs	r1, r6
100062b2:	4689      	mov	r9, r1
100062b4:	0424      	lsls	r4, r4, #16
100062b6:	4327      	orrs	r7, r4
100062b8:	4649      	mov	r1, r9
100062ba:	2938      	cmp	r1, #56	; 0x38
100062bc:	dd00      	ble.n	100062c0 <__aeabi_dsub+0x3b8>
100062be:	e0cd      	b.n	1000645c <__aeabi_dsub+0x554>
100062c0:	291f      	cmp	r1, #31
100062c2:	dd00      	ble.n	100062c6 <__aeabi_dsub+0x3be>
100062c4:	e159      	b.n	1000657a <__aeabi_dsub+0x672>
100062c6:	2420      	movs	r4, #32
100062c8:	1c3e      	adds	r6, r7, #0
100062ca:	1a61      	subs	r1, r4, r1
100062cc:	408e      	lsls	r6, r1
100062ce:	468a      	mov	sl, r1
100062d0:	46b0      	mov	r8, r6
100062d2:	4649      	mov	r1, r9
100062d4:	1c2e      	adds	r6, r5, #0
100062d6:	40ce      	lsrs	r6, r1
100062d8:	4651      	mov	r1, sl
100062da:	46b4      	mov	ip, r6
100062dc:	408d      	lsls	r5, r1
100062de:	4664      	mov	r4, ip
100062e0:	4646      	mov	r6, r8
100062e2:	4649      	mov	r1, r9
100062e4:	4326      	orrs	r6, r4
100062e6:	1e6c      	subs	r4, r5, #1
100062e8:	41a5      	sbcs	r5, r4
100062ea:	40cf      	lsrs	r7, r1
100062ec:	4335      	orrs	r5, r6
100062ee:	9901      	ldr	r1, [sp, #4]
100062f0:	1bd7      	subs	r7, r2, r7
100062f2:	468c      	mov	ip, r1
100062f4:	1b4d      	subs	r5, r1, r5
100062f6:	45ac      	cmp	ip, r5
100062f8:	4192      	sbcs	r2, r2
100062fa:	4252      	negs	r2, r2
100062fc:	1abf      	subs	r7, r7, r2
100062fe:	1c04      	adds	r4, r0, #0
10006300:	4698      	mov	r8, r3
10006302:	e696      	b.n	10006032 <__aeabi_dsub+0x12a>
10006304:	4663      	mov	r3, ip
10006306:	4665      	mov	r5, ip
10006308:	4333      	orrs	r3, r6
1000630a:	d000      	beq.n	1000630e <__aeabi_dsub+0x406>
1000630c:	e696      	b.n	1000603c <__aeabi_dsub+0x134>
1000630e:	2600      	movs	r6, #0
10006310:	2700      	movs	r7, #0
10006312:	2400      	movs	r4, #0
10006314:	2500      	movs	r5, #0
10006316:	e6c4      	b.n	100060a2 <__aeabi_dsub+0x19a>
10006318:	2b1f      	cmp	r3, #31
1000631a:	dc61      	bgt.n	100063e0 <__aeabi_dsub+0x4d8>
1000631c:	2020      	movs	r0, #32
1000631e:	1ac3      	subs	r3, r0, r3
10006320:	469b      	mov	fp, r3
10006322:	1c13      	adds	r3, r2, #0
10006324:	4659      	mov	r1, fp
10006326:	408b      	lsls	r3, r1
10006328:	4651      	mov	r1, sl
1000632a:	4699      	mov	r9, r3
1000632c:	9b01      	ldr	r3, [sp, #4]
1000632e:	40cb      	lsrs	r3, r1
10006330:	469c      	mov	ip, r3
10006332:	464b      	mov	r3, r9
10006334:	4660      	mov	r0, ip
10006336:	4303      	orrs	r3, r0
10006338:	469c      	mov	ip, r3
1000633a:	465b      	mov	r3, fp
1000633c:	9901      	ldr	r1, [sp, #4]
1000633e:	4099      	lsls	r1, r3
10006340:	4663      	mov	r3, ip
10006342:	1e48      	subs	r0, r1, #1
10006344:	4181      	sbcs	r1, r0
10006346:	4319      	orrs	r1, r3
10006348:	4653      	mov	r3, sl
1000634a:	40da      	lsrs	r2, r3
1000634c:	e6cd      	b.n	100060ea <__aeabi_dsub+0x1e2>
1000634e:	1c3c      	adds	r4, r7, #0
10006350:	432c      	orrs	r4, r5
10006352:	d05d      	beq.n	10006410 <__aeabi_dsub+0x508>
10006354:	43f1      	mvns	r1, r6
10006356:	4689      	mov	r9, r1
10006358:	2900      	cmp	r1, #0
1000635a:	d155      	bne.n	10006408 <__aeabi_dsub+0x500>
1000635c:	9901      	ldr	r1, [sp, #4]
1000635e:	1bd2      	subs	r2, r2, r7
10006360:	468c      	mov	ip, r1
10006362:	1b4d      	subs	r5, r1, r5
10006364:	45ac      	cmp	ip, r5
10006366:	4189      	sbcs	r1, r1
10006368:	4249      	negs	r1, r1
1000636a:	1a57      	subs	r7, r2, r1
1000636c:	1c04      	adds	r4, r0, #0
1000636e:	4698      	mov	r8, r3
10006370:	e65f      	b.n	10006032 <__aeabi_dsub+0x12a>
10006372:	4894      	ldr	r0, [pc, #592]	; (100065c4 <__aeabi_dsub+0x6bc>)
10006374:	4284      	cmp	r4, r0
10006376:	d000      	beq.n	1000637a <__aeabi_dsub+0x472>
10006378:	e6ad      	b.n	100060d6 <__aeabi_dsub+0x1ce>
1000637a:	e5f7      	b.n	10005f6c <__aeabi_dsub+0x64>
1000637c:	2200      	movs	r2, #0
1000637e:	e771      	b.n	10006264 <__aeabi_dsub+0x35c>
10006380:	2300      	movs	r3, #0
10006382:	e787      	b.n	10006294 <__aeabi_dsub+0x38c>
10006384:	1c3b      	adds	r3, r7, #0
10006386:	432b      	orrs	r3, r5
10006388:	2c00      	cmp	r4, #0
1000638a:	d000      	beq.n	1000638e <__aeabi_dsub+0x486>
1000638c:	e0da      	b.n	10006544 <__aeabi_dsub+0x63c>
1000638e:	2b00      	cmp	r3, #0
10006390:	d100      	bne.n	10006394 <__aeabi_dsub+0x48c>
10006392:	e113      	b.n	100065bc <__aeabi_dsub+0x6b4>
10006394:	1c13      	adds	r3, r2, #0
10006396:	9901      	ldr	r1, [sp, #4]
10006398:	430b      	orrs	r3, r1
1000639a:	d100      	bne.n	1000639e <__aeabi_dsub+0x496>
1000639c:	e5e6      	b.n	10005f6c <__aeabi_dsub+0x64>
1000639e:	1949      	adds	r1, r1, r5
100063a0:	42a9      	cmp	r1, r5
100063a2:	419b      	sbcs	r3, r3
100063a4:	19d2      	adds	r2, r2, r7
100063a6:	425b      	negs	r3, r3
100063a8:	18d7      	adds	r7, r2, r3
100063aa:	023b      	lsls	r3, r7, #8
100063ac:	d400      	bmi.n	100063b0 <__aeabi_dsub+0x4a8>
100063ae:	e121      	b.n	100065f4 <__aeabi_dsub+0x6ec>
100063b0:	4b85      	ldr	r3, [pc, #532]	; (100065c8 <__aeabi_dsub+0x6c0>)
100063b2:	1c0d      	adds	r5, r1, #0
100063b4:	401f      	ands	r7, r3
100063b6:	1c04      	adds	r4, r0, #0
100063b8:	e5d8      	b.n	10005f6c <__aeabi_dsub+0x64>
100063ba:	1c38      	adds	r0, r7, #0
100063bc:	4328      	orrs	r0, r5
100063be:	2c00      	cmp	r4, #0
100063c0:	d140      	bne.n	10006444 <__aeabi_dsub+0x53c>
100063c2:	2800      	cmp	r0, #0
100063c4:	d000      	beq.n	100063c8 <__aeabi_dsub+0x4c0>
100063c6:	e083      	b.n	100064d0 <__aeabi_dsub+0x5c8>
100063c8:	1c10      	adds	r0, r2, #0
100063ca:	9901      	ldr	r1, [sp, #4]
100063cc:	4308      	orrs	r0, r1
100063ce:	d003      	beq.n	100063d8 <__aeabi_dsub+0x4d0>
100063d0:	1c17      	adds	r7, r2, #0
100063d2:	1c0d      	adds	r5, r1, #0
100063d4:	4698      	mov	r8, r3
100063d6:	e5c9      	b.n	10005f6c <__aeabi_dsub+0x64>
100063d8:	2600      	movs	r6, #0
100063da:	2700      	movs	r7, #0
100063dc:	2500      	movs	r5, #0
100063de:	e660      	b.n	100060a2 <__aeabi_dsub+0x19a>
100063e0:	4650      	mov	r0, sl
100063e2:	1c13      	adds	r3, r2, #0
100063e4:	3820      	subs	r0, #32
100063e6:	40c3      	lsrs	r3, r0
100063e8:	1c18      	adds	r0, r3, #0
100063ea:	4653      	mov	r3, sl
100063ec:	2b20      	cmp	r3, #32
100063ee:	d100      	bne.n	100063f2 <__aeabi_dsub+0x4ea>
100063f0:	e0c1      	b.n	10006576 <__aeabi_dsub+0x66e>
100063f2:	2340      	movs	r3, #64	; 0x40
100063f4:	4651      	mov	r1, sl
100063f6:	1a5b      	subs	r3, r3, r1
100063f8:	409a      	lsls	r2, r3
100063fa:	9901      	ldr	r1, [sp, #4]
100063fc:	4311      	orrs	r1, r2
100063fe:	1e4a      	subs	r2, r1, #1
10006400:	4191      	sbcs	r1, r2
10006402:	2200      	movs	r2, #0
10006404:	4301      	orrs	r1, r0
10006406:	e670      	b.n	100060ea <__aeabi_dsub+0x1e2>
10006408:	4c6e      	ldr	r4, [pc, #440]	; (100065c4 <__aeabi_dsub+0x6bc>)
1000640a:	42a0      	cmp	r0, r4
1000640c:	d000      	beq.n	10006410 <__aeabi_dsub+0x508>
1000640e:	e753      	b.n	100062b8 <__aeabi_dsub+0x3b0>
10006410:	1c17      	adds	r7, r2, #0
10006412:	9d01      	ldr	r5, [sp, #4]
10006414:	1c04      	adds	r4, r0, #0
10006416:	4698      	mov	r8, r3
10006418:	e5a8      	b.n	10005f6c <__aeabi_dsub+0x64>
1000641a:	2c00      	cmp	r4, #0
1000641c:	d128      	bne.n	10006470 <__aeabi_dsub+0x568>
1000641e:	1c3c      	adds	r4, r7, #0
10006420:	432c      	orrs	r4, r5
10006422:	d100      	bne.n	10006426 <__aeabi_dsub+0x51e>
10006424:	e08a      	b.n	1000653c <__aeabi_dsub+0x634>
10006426:	43db      	mvns	r3, r3
10006428:	469a      	mov	sl, r3
1000642a:	2b00      	cmp	r3, #0
1000642c:	d000      	beq.n	10006430 <__aeabi_dsub+0x528>
1000642e:	e082      	b.n	10006536 <__aeabi_dsub+0x62e>
10006430:	9b01      	ldr	r3, [sp, #4]
10006432:	19d2      	adds	r2, r2, r7
10006434:	469c      	mov	ip, r3
10006436:	4465      	add	r5, ip
10006438:	429d      	cmp	r5, r3
1000643a:	4189      	sbcs	r1, r1
1000643c:	4249      	negs	r1, r1
1000643e:	1857      	adds	r7, r2, r1
10006440:	1c04      	adds	r4, r0, #0
10006442:	e659      	b.n	100060f8 <__aeabi_dsub+0x1f0>
10006444:	2800      	cmp	r0, #0
10006446:	d15b      	bne.n	10006500 <__aeabi_dsub+0x5f8>
10006448:	1c10      	adds	r0, r2, #0
1000644a:	9901      	ldr	r1, [sp, #4]
1000644c:	4308      	orrs	r0, r1
1000644e:	d100      	bne.n	10006452 <__aeabi_dsub+0x54a>
10006450:	e0a4      	b.n	1000659c <__aeabi_dsub+0x694>
10006452:	1c17      	adds	r7, r2, #0
10006454:	1c0d      	adds	r5, r1, #0
10006456:	4698      	mov	r8, r3
10006458:	4c5a      	ldr	r4, [pc, #360]	; (100065c4 <__aeabi_dsub+0x6bc>)
1000645a:	e587      	b.n	10005f6c <__aeabi_dsub+0x64>
1000645c:	433d      	orrs	r5, r7
1000645e:	1e6f      	subs	r7, r5, #1
10006460:	41bd      	sbcs	r5, r7
10006462:	2700      	movs	r7, #0
10006464:	b2ed      	uxtb	r5, r5
10006466:	e742      	b.n	100062ee <__aeabi_dsub+0x3e6>
10006468:	1c04      	adds	r4, r0, #0
1000646a:	2700      	movs	r7, #0
1000646c:	2500      	movs	r5, #0
1000646e:	e618      	b.n	100060a2 <__aeabi_dsub+0x19a>
10006470:	4c54      	ldr	r4, [pc, #336]	; (100065c4 <__aeabi_dsub+0x6bc>)
10006472:	42a0      	cmp	r0, r4
10006474:	d062      	beq.n	1000653c <__aeabi_dsub+0x634>
10006476:	4653      	mov	r3, sl
10006478:	2480      	movs	r4, #128	; 0x80
1000647a:	425b      	negs	r3, r3
1000647c:	469a      	mov	sl, r3
1000647e:	0424      	lsls	r4, r4, #16
10006480:	4327      	orrs	r7, r4
10006482:	4653      	mov	r3, sl
10006484:	2b38      	cmp	r3, #56	; 0x38
10006486:	dd00      	ble.n	1000648a <__aeabi_dsub+0x582>
10006488:	e08e      	b.n	100065a8 <__aeabi_dsub+0x6a0>
1000648a:	2b1f      	cmp	r3, #31
1000648c:	dd00      	ble.n	10006490 <__aeabi_dsub+0x588>
1000648e:	e09d      	b.n	100065cc <__aeabi_dsub+0x6c4>
10006490:	2420      	movs	r4, #32
10006492:	1ae3      	subs	r3, r4, r3
10006494:	469b      	mov	fp, r3
10006496:	1c3b      	adds	r3, r7, #0
10006498:	4659      	mov	r1, fp
1000649a:	408b      	lsls	r3, r1
1000649c:	4651      	mov	r1, sl
1000649e:	4699      	mov	r9, r3
100064a0:	1c2b      	adds	r3, r5, #0
100064a2:	40cb      	lsrs	r3, r1
100064a4:	469c      	mov	ip, r3
100064a6:	464b      	mov	r3, r9
100064a8:	4664      	mov	r4, ip
100064aa:	4323      	orrs	r3, r4
100064ac:	469c      	mov	ip, r3
100064ae:	465b      	mov	r3, fp
100064b0:	409d      	lsls	r5, r3
100064b2:	4663      	mov	r3, ip
100064b4:	1e6c      	subs	r4, r5, #1
100064b6:	41a5      	sbcs	r5, r4
100064b8:	40cf      	lsrs	r7, r1
100064ba:	431d      	orrs	r5, r3
100064bc:	9b01      	ldr	r3, [sp, #4]
100064be:	18bf      	adds	r7, r7, r2
100064c0:	469c      	mov	ip, r3
100064c2:	4465      	add	r5, ip
100064c4:	429d      	cmp	r5, r3
100064c6:	4192      	sbcs	r2, r2
100064c8:	4252      	negs	r2, r2
100064ca:	18bf      	adds	r7, r7, r2
100064cc:	1c04      	adds	r4, r0, #0
100064ce:	e613      	b.n	100060f8 <__aeabi_dsub+0x1f0>
100064d0:	1c10      	adds	r0, r2, #0
100064d2:	9901      	ldr	r1, [sp, #4]
100064d4:	4308      	orrs	r0, r1
100064d6:	d100      	bne.n	100064da <__aeabi_dsub+0x5d2>
100064d8:	e548      	b.n	10005f6c <__aeabi_dsub+0x64>
100064da:	1a68      	subs	r0, r5, r1
100064dc:	4684      	mov	ip, r0
100064de:	4285      	cmp	r5, r0
100064e0:	4180      	sbcs	r0, r0
100064e2:	1abe      	subs	r6, r7, r2
100064e4:	4240      	negs	r0, r0
100064e6:	1a30      	subs	r0, r6, r0
100064e8:	0206      	lsls	r6, r0, #8
100064ea:	d400      	bmi.n	100064ee <__aeabi_dsub+0x5e6>
100064ec:	e647      	b.n	1000617e <__aeabi_dsub+0x276>
100064ee:	468c      	mov	ip, r1
100064f0:	1b4d      	subs	r5, r1, r5
100064f2:	45ac      	cmp	ip, r5
100064f4:	4189      	sbcs	r1, r1
100064f6:	1bd2      	subs	r2, r2, r7
100064f8:	4249      	negs	r1, r1
100064fa:	1a57      	subs	r7, r2, r1
100064fc:	4698      	mov	r8, r3
100064fe:	e535      	b.n	10005f6c <__aeabi_dsub+0x64>
10006500:	1c10      	adds	r0, r2, #0
10006502:	9901      	ldr	r1, [sp, #4]
10006504:	4308      	orrs	r0, r1
10006506:	d034      	beq.n	10006572 <__aeabi_dsub+0x66a>
10006508:	2480      	movs	r4, #128	; 0x80
1000650a:	0778      	lsls	r0, r7, #29
1000650c:	08ed      	lsrs	r5, r5, #3
1000650e:	08ff      	lsrs	r7, r7, #3
10006510:	0324      	lsls	r4, r4, #12
10006512:	4328      	orrs	r0, r5
10006514:	4227      	tst	r7, r4
10006516:	d008      	beq.n	1000652a <__aeabi_dsub+0x622>
10006518:	08d6      	lsrs	r6, r2, #3
1000651a:	4226      	tst	r6, r4
1000651c:	d105      	bne.n	1000652a <__aeabi_dsub+0x622>
1000651e:	08c9      	lsrs	r1, r1, #3
10006520:	0752      	lsls	r2, r2, #29
10006522:	430a      	orrs	r2, r1
10006524:	1c10      	adds	r0, r2, #0
10006526:	1c37      	adds	r7, r6, #0
10006528:	4698      	mov	r8, r3
1000652a:	00ff      	lsls	r7, r7, #3
1000652c:	0f42      	lsrs	r2, r0, #29
1000652e:	4317      	orrs	r7, r2
10006530:	00c5      	lsls	r5, r0, #3
10006532:	4c24      	ldr	r4, [pc, #144]	; (100065c4 <__aeabi_dsub+0x6bc>)
10006534:	e51a      	b.n	10005f6c <__aeabi_dsub+0x64>
10006536:	4c23      	ldr	r4, [pc, #140]	; (100065c4 <__aeabi_dsub+0x6bc>)
10006538:	42a0      	cmp	r0, r4
1000653a:	d1a2      	bne.n	10006482 <__aeabi_dsub+0x57a>
1000653c:	1c17      	adds	r7, r2, #0
1000653e:	9d01      	ldr	r5, [sp, #4]
10006540:	1c04      	adds	r4, r0, #0
10006542:	e513      	b.n	10005f6c <__aeabi_dsub+0x64>
10006544:	2b00      	cmp	r3, #0
10006546:	d035      	beq.n	100065b4 <__aeabi_dsub+0x6ac>
10006548:	1c13      	adds	r3, r2, #0
1000654a:	9901      	ldr	r1, [sp, #4]
1000654c:	430b      	orrs	r3, r1
1000654e:	d010      	beq.n	10006572 <__aeabi_dsub+0x66a>
10006550:	2480      	movs	r4, #128	; 0x80
10006552:	0778      	lsls	r0, r7, #29
10006554:	08ed      	lsrs	r5, r5, #3
10006556:	08ff      	lsrs	r7, r7, #3
10006558:	0324      	lsls	r4, r4, #12
1000655a:	4328      	orrs	r0, r5
1000655c:	4227      	tst	r7, r4
1000655e:	d0e4      	beq.n	1000652a <__aeabi_dsub+0x622>
10006560:	08d3      	lsrs	r3, r2, #3
10006562:	4223      	tst	r3, r4
10006564:	d1e1      	bne.n	1000652a <__aeabi_dsub+0x622>
10006566:	08c9      	lsrs	r1, r1, #3
10006568:	0752      	lsls	r2, r2, #29
1000656a:	430a      	orrs	r2, r1
1000656c:	1c10      	adds	r0, r2, #0
1000656e:	1c1f      	adds	r7, r3, #0
10006570:	e7db      	b.n	1000652a <__aeabi_dsub+0x622>
10006572:	4c14      	ldr	r4, [pc, #80]	; (100065c4 <__aeabi_dsub+0x6bc>)
10006574:	e4fa      	b.n	10005f6c <__aeabi_dsub+0x64>
10006576:	2200      	movs	r2, #0
10006578:	e73f      	b.n	100063fa <__aeabi_dsub+0x4f2>
1000657a:	464c      	mov	r4, r9
1000657c:	1c3e      	adds	r6, r7, #0
1000657e:	3c20      	subs	r4, #32
10006580:	40e6      	lsrs	r6, r4
10006582:	4649      	mov	r1, r9
10006584:	1c34      	adds	r4, r6, #0
10006586:	2920      	cmp	r1, #32
10006588:	d032      	beq.n	100065f0 <__aeabi_dsub+0x6e8>
1000658a:	2640      	movs	r6, #64	; 0x40
1000658c:	1a76      	subs	r6, r6, r1
1000658e:	40b7      	lsls	r7, r6
10006590:	433d      	orrs	r5, r7
10006592:	1e6f      	subs	r7, r5, #1
10006594:	41bd      	sbcs	r5, r7
10006596:	2700      	movs	r7, #0
10006598:	4325      	orrs	r5, r4
1000659a:	e6a8      	b.n	100062ee <__aeabi_dsub+0x3e6>
1000659c:	2780      	movs	r7, #128	; 0x80
1000659e:	2600      	movs	r6, #0
100065a0:	03ff      	lsls	r7, r7, #15
100065a2:	4c08      	ldr	r4, [pc, #32]	; (100065c4 <__aeabi_dsub+0x6bc>)
100065a4:	2500      	movs	r5, #0
100065a6:	e57c      	b.n	100060a2 <__aeabi_dsub+0x19a>
100065a8:	433d      	orrs	r5, r7
100065aa:	1e6f      	subs	r7, r5, #1
100065ac:	41bd      	sbcs	r5, r7
100065ae:	2700      	movs	r7, #0
100065b0:	b2ed      	uxtb	r5, r5
100065b2:	e783      	b.n	100064bc <__aeabi_dsub+0x5b4>
100065b4:	1c17      	adds	r7, r2, #0
100065b6:	9d01      	ldr	r5, [sp, #4]
100065b8:	4c02      	ldr	r4, [pc, #8]	; (100065c4 <__aeabi_dsub+0x6bc>)
100065ba:	e4d7      	b.n	10005f6c <__aeabi_dsub+0x64>
100065bc:	1c17      	adds	r7, r2, #0
100065be:	9d01      	ldr	r5, [sp, #4]
100065c0:	e4d4      	b.n	10005f6c <__aeabi_dsub+0x64>
100065c2:	46c0      	nop			; (mov r8, r8)
100065c4:	000007ff 	.word	0x000007ff
100065c8:	ff7fffff 	.word	0xff7fffff
100065cc:	4654      	mov	r4, sl
100065ce:	1c3b      	adds	r3, r7, #0
100065d0:	3c20      	subs	r4, #32
100065d2:	40e3      	lsrs	r3, r4
100065d4:	1c1c      	adds	r4, r3, #0
100065d6:	4653      	mov	r3, sl
100065d8:	2b20      	cmp	r3, #32
100065da:	d00d      	beq.n	100065f8 <__aeabi_dsub+0x6f0>
100065dc:	2340      	movs	r3, #64	; 0x40
100065de:	4651      	mov	r1, sl
100065e0:	1a5b      	subs	r3, r3, r1
100065e2:	409f      	lsls	r7, r3
100065e4:	433d      	orrs	r5, r7
100065e6:	1e6f      	subs	r7, r5, #1
100065e8:	41bd      	sbcs	r5, r7
100065ea:	2700      	movs	r7, #0
100065ec:	4325      	orrs	r5, r4
100065ee:	e765      	b.n	100064bc <__aeabi_dsub+0x5b4>
100065f0:	2700      	movs	r7, #0
100065f2:	e7cd      	b.n	10006590 <__aeabi_dsub+0x688>
100065f4:	1c0d      	adds	r5, r1, #0
100065f6:	e5c8      	b.n	1000618a <__aeabi_dsub+0x282>
100065f8:	2700      	movs	r7, #0
100065fa:	e7f3      	b.n	100065e4 <__aeabi_dsub+0x6dc>

100065fc <__aeabi_d2iz>:
100065fc:	030b      	lsls	r3, r1, #12
100065fe:	b530      	push	{r4, r5, lr}
10006600:	4c13      	ldr	r4, [pc, #76]	; (10006650 <__aeabi_d2iz+0x54>)
10006602:	0b1a      	lsrs	r2, r3, #12
10006604:	004b      	lsls	r3, r1, #1
10006606:	1c05      	adds	r5, r0, #0
10006608:	0d5b      	lsrs	r3, r3, #21
1000660a:	0fc9      	lsrs	r1, r1, #31
1000660c:	2000      	movs	r0, #0
1000660e:	42a3      	cmp	r3, r4
10006610:	dd10      	ble.n	10006634 <__aeabi_d2iz+0x38>
10006612:	4810      	ldr	r0, [pc, #64]	; (10006654 <__aeabi_d2iz+0x58>)
10006614:	4283      	cmp	r3, r0
10006616:	dc0e      	bgt.n	10006636 <__aeabi_d2iz+0x3a>
10006618:	2080      	movs	r0, #128	; 0x80
1000661a:	4c0f      	ldr	r4, [pc, #60]	; (10006658 <__aeabi_d2iz+0x5c>)
1000661c:	0340      	lsls	r0, r0, #13
1000661e:	4302      	orrs	r2, r0
10006620:	1ae4      	subs	r4, r4, r3
10006622:	2c1f      	cmp	r4, #31
10006624:	dd0a      	ble.n	1000663c <__aeabi_d2iz+0x40>
10006626:	480d      	ldr	r0, [pc, #52]	; (1000665c <__aeabi_d2iz+0x60>)
10006628:	1ac3      	subs	r3, r0, r3
1000662a:	40da      	lsrs	r2, r3
1000662c:	1c13      	adds	r3, r2, #0
1000662e:	4248      	negs	r0, r1
10006630:	4043      	eors	r3, r0
10006632:	1858      	adds	r0, r3, r1
10006634:	bd30      	pop	{r4, r5, pc}
10006636:	4b0a      	ldr	r3, [pc, #40]	; (10006660 <__aeabi_d2iz+0x64>)
10006638:	18c8      	adds	r0, r1, r3
1000663a:	e7fb      	b.n	10006634 <__aeabi_d2iz+0x38>
1000663c:	1c28      	adds	r0, r5, #0
1000663e:	40e0      	lsrs	r0, r4
10006640:	4c08      	ldr	r4, [pc, #32]	; (10006664 <__aeabi_d2iz+0x68>)
10006642:	46a4      	mov	ip, r4
10006644:	4463      	add	r3, ip
10006646:	409a      	lsls	r2, r3
10006648:	1c13      	adds	r3, r2, #0
1000664a:	4303      	orrs	r3, r0
1000664c:	e7ef      	b.n	1000662e <__aeabi_d2iz+0x32>
1000664e:	46c0      	nop			; (mov r8, r8)
10006650:	000003fe 	.word	0x000003fe
10006654:	0000041d 	.word	0x0000041d
10006658:	00000433 	.word	0x00000433
1000665c:	00000413 	.word	0x00000413
10006660:	7fffffff 	.word	0x7fffffff
10006664:	fffffbed 	.word	0xfffffbed

10006668 <__aeabi_i2d>:
10006668:	b538      	push	{r3, r4, r5, lr}
1000666a:	1e04      	subs	r4, r0, #0
1000666c:	d016      	beq.n	1000669c <__aeabi_i2d+0x34>
1000666e:	0fc5      	lsrs	r5, r0, #31
10006670:	d000      	beq.n	10006674 <__aeabi_i2d+0xc>
10006672:	4244      	negs	r4, r0
10006674:	1c20      	adds	r0, r4, #0
10006676:	f7fc fc41 	bl	10002efc <__clzsi2>
1000667a:	4b17      	ldr	r3, [pc, #92]	; (100066d8 <__aeabi_i2d+0x70>)
1000667c:	1a1b      	subs	r3, r3, r0
1000667e:	280a      	cmp	r0, #10
10006680:	dc21      	bgt.n	100066c6 <__aeabi_i2d+0x5e>
10006682:	1c02      	adds	r2, r0, #0
10006684:	1c21      	adds	r1, r4, #0
10006686:	3215      	adds	r2, #21
10006688:	4091      	lsls	r1, r2
1000668a:	1c0a      	adds	r2, r1, #0
1000668c:	210b      	movs	r1, #11
1000668e:	1a08      	subs	r0, r1, r0
10006690:	40c4      	lsrs	r4, r0
10006692:	055b      	lsls	r3, r3, #21
10006694:	0324      	lsls	r4, r4, #12
10006696:	0b24      	lsrs	r4, r4, #12
10006698:	0d5b      	lsrs	r3, r3, #21
1000669a:	e003      	b.n	100066a4 <__aeabi_i2d+0x3c>
1000669c:	2500      	movs	r5, #0
1000669e:	2300      	movs	r3, #0
100066a0:	2400      	movs	r4, #0
100066a2:	2200      	movs	r2, #0
100066a4:	2100      	movs	r1, #0
100066a6:	1c10      	adds	r0, r2, #0
100066a8:	0324      	lsls	r4, r4, #12
100066aa:	0d0a      	lsrs	r2, r1, #20
100066ac:	0512      	lsls	r2, r2, #20
100066ae:	0b24      	lsrs	r4, r4, #12
100066b0:	4314      	orrs	r4, r2
100066b2:	4a0a      	ldr	r2, [pc, #40]	; (100066dc <__aeabi_i2d+0x74>)
100066b4:	051b      	lsls	r3, r3, #20
100066b6:	4014      	ands	r4, r2
100066b8:	431c      	orrs	r4, r3
100066ba:	0064      	lsls	r4, r4, #1
100066bc:	07ed      	lsls	r5, r5, #31
100066be:	0864      	lsrs	r4, r4, #1
100066c0:	432c      	orrs	r4, r5
100066c2:	1c21      	adds	r1, r4, #0
100066c4:	bd38      	pop	{r3, r4, r5, pc}
100066c6:	380b      	subs	r0, #11
100066c8:	4084      	lsls	r4, r0
100066ca:	055b      	lsls	r3, r3, #21
100066cc:	0324      	lsls	r4, r4, #12
100066ce:	0b24      	lsrs	r4, r4, #12
100066d0:	0d5b      	lsrs	r3, r3, #21
100066d2:	2200      	movs	r2, #0
100066d4:	e7e6      	b.n	100066a4 <__aeabi_i2d+0x3c>
100066d6:	46c0      	nop			; (mov r8, r8)
100066d8:	0000041e 	.word	0x0000041e
100066dc:	800fffff 	.word	0x800fffff

100066e0 <__aeabi_ui2d>:
100066e0:	b510      	push	{r4, lr}
100066e2:	1e04      	subs	r4, r0, #0
100066e4:	d010      	beq.n	10006708 <__aeabi_ui2d+0x28>
100066e6:	f7fc fc09 	bl	10002efc <__clzsi2>
100066ea:	4a14      	ldr	r2, [pc, #80]	; (1000673c <__aeabi_ui2d+0x5c>)
100066ec:	1a12      	subs	r2, r2, r0
100066ee:	280a      	cmp	r0, #10
100066f0:	dc1a      	bgt.n	10006728 <__aeabi_ui2d+0x48>
100066f2:	230b      	movs	r3, #11
100066f4:	1c21      	adds	r1, r4, #0
100066f6:	1a1b      	subs	r3, r3, r0
100066f8:	40d9      	lsrs	r1, r3
100066fa:	3015      	adds	r0, #21
100066fc:	030b      	lsls	r3, r1, #12
100066fe:	0552      	lsls	r2, r2, #21
10006700:	4084      	lsls	r4, r0
10006702:	0b1b      	lsrs	r3, r3, #12
10006704:	0d52      	lsrs	r2, r2, #21
10006706:	e001      	b.n	1000670c <__aeabi_ui2d+0x2c>
10006708:	2200      	movs	r2, #0
1000670a:	2300      	movs	r3, #0
1000670c:	2100      	movs	r1, #0
1000670e:	031b      	lsls	r3, r3, #12
10006710:	1c20      	adds	r0, r4, #0
10006712:	0b1c      	lsrs	r4, r3, #12
10006714:	0d0b      	lsrs	r3, r1, #20
10006716:	051b      	lsls	r3, r3, #20
10006718:	4323      	orrs	r3, r4
1000671a:	4c09      	ldr	r4, [pc, #36]	; (10006740 <__aeabi_ui2d+0x60>)
1000671c:	0512      	lsls	r2, r2, #20
1000671e:	4023      	ands	r3, r4
10006720:	4313      	orrs	r3, r2
10006722:	005b      	lsls	r3, r3, #1
10006724:	0859      	lsrs	r1, r3, #1
10006726:	bd10      	pop	{r4, pc}
10006728:	1c03      	adds	r3, r0, #0
1000672a:	3b0b      	subs	r3, #11
1000672c:	409c      	lsls	r4, r3
1000672e:	0552      	lsls	r2, r2, #21
10006730:	0323      	lsls	r3, r4, #12
10006732:	0b1b      	lsrs	r3, r3, #12
10006734:	0d52      	lsrs	r2, r2, #21
10006736:	2400      	movs	r4, #0
10006738:	e7e8      	b.n	1000670c <__aeabi_ui2d+0x2c>
1000673a:	46c0      	nop			; (mov r8, r8)
1000673c:	0000041e 	.word	0x0000041e
10006740:	800fffff 	.word	0x800fffff

10006744 <global_config>:
	...

10006758 <IO_USB_SI>:
10006758:	40040200 00000080 00010000 00000000     ...@............

10006768 <IO_USB_OE>:
10006768:	40040000 00000080 00010000 00000009     ...@............

10006778 <IO_LED_RELAY>:
10006778:	40040000 00000080 00010000 00000006     ...@............

10006788 <IO_SW_USB>:
10006788:	40040000 00000010 00000000 00000008     ...@............

10006798 <IO_SW_UP>:
10006798:	40040200 00000010 00000000 00000007     ...@............

100067a8 <IO_SW_DOWN>:
100067a8:	40040200 00000010 00000000 00000009     ...@............

100067b8 <IO_USBPWR_2>:
100067b8:	40040000 00000080 00010000 00000005     ...@............

100067c8 <IO_USBPWR_1>:
100067c8:	40040200 00000080 00010000 0000000a     ...@............

100067d8 <IO_RELAY>:
100067d8:	40040000 00000080 00010000 00000007     ...@............

100067e8 <IO_LED_USB2>:
100067e8:	40040000 00000080 00010000 00000000     ...@............

100067f8 <IO_LED_USB1>:
100067f8:	40040200 00000080 00010000 0000000b     ...@............
10006808:	00000100 00010000 00000000              ............

10006814 <global_iclass_config>:
10006814:	0000001f                                ....

10006818 <global_result_intr_handle>:
10006818:	0000000f 00000003                       ........

10006820 <backgnd_config>:
10006820:	00000005 00000000 00000000 4e490043     ............C.IN
10006830:	6e690046 414e0066 616e004e 0030006e     F.inf.NAN.nan.0.
10006840:	69666e49 7974696e 4e614e00 534f5000     Infinity.NaN.POS
10006850:	2e005849 00000000                       IX......

10006858 <__mprec_tens>:
10006858:	00000000 3ff00000 00000000 40240000     .......?......$@
10006868:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
10006878:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
10006888:	00000000 412e8480 00000000 416312d0     .......A......cA
10006898:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
100068a8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
100068b8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
100068c8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
100068d8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
100068e8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
100068f8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
10006908:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
10006918:	79d99db4 44ea7843                       ...yCx.D

10006920 <__mprec_bigtens>:
10006920:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
10006930:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
10006940:	7f73bf3c 75154fdd                       <.s..O.u

10006948 <p05.5277>:
10006948:	00000005 00000019 0000007d 1000532c     ........}...,S..
10006958:	1000521a 10005300 10005206 10005300     .R...S...R...S..
10006968:	1000530a 10005300 10005206 1000521a     .S...S...R...R..
10006978:	1000521a 1000530a 10005206 10005210     .R...S...R...R..
10006988:	10005210 10005210 10005572 10005bc0     .R...R..rU...[..
10006998:	10005b9e 10005b9e 10005b92 10005a86     .[...[...[...Z..
100069a8:	10005a86 10005b86 10005b92 10005a86     .Z...[...[...Z..
100069b8:	10005b86 10005a86 10005b92 10005a8a     .[...Z...[...Z..
100069c8:	10005a8a 10005a8a 10005da0              .Z...Z...]..

Disassembly of section .VENEER_Code:

2000000c <HardFault_Veneer>:
    
    .align 1
    
    .globl HardFault_Veneer
HardFault_Veneer:
    LDR R0, =HardFault_Handler
2000000c:	482c      	ldr	r0, [pc, #176]	; (200000c0 <CCU40_3_Veneer+0x20>)
    MOV PC,R0
2000000e:	4687      	mov	pc, r0
	...

2000002c <SVC_Veneer>:
    .long 0
    
/* ======================================================================== */
    .globl SVC_Veneer
SVC_Veneer:
    LDR R0, =SVC_Handler
2000002c:	4825      	ldr	r0, [pc, #148]	; (200000c4 <CCU40_3_Veneer+0x24>)
    MOV PC,R0
2000002e:	4687      	mov	pc, r0
	...

20000038 <PendSV_Veneer>:
    .long 0
    .long 0
/* ======================================================================== */
    .globl PendSV_Veneer
PendSV_Veneer:
    LDR R0, =PendSV_Handler
20000038:	4823      	ldr	r0, [pc, #140]	; (200000c8 <CCU40_3_Veneer+0x28>)
    MOV PC,R0
2000003a:	4687      	mov	pc, r0

2000003c <SysTick_Veneer>:
/* ======================================================================== */
    .globl SysTick_Veneer 
SysTick_Veneer:
    LDR R0, =SysTick_Handler
2000003c:	4823      	ldr	r0, [pc, #140]	; (200000cc <CCU40_3_Veneer+0x2c>)
    MOV PC,R0
2000003e:	4687      	mov	pc, r0

20000040 <SCU_0_Veneer>:
/* ======================================================================== */
    .globl SCU_0_Veneer 
SCU_0_Veneer:
    LDR R0, =SCU_0_IRQHandler
20000040:	4823      	ldr	r0, [pc, #140]	; (200000d0 <CCU40_3_Veneer+0x30>)
    MOV PC,R0
20000042:	4687      	mov	pc, r0

20000044 <SCU_1_Veneer>:
/* ======================================================================== */
    .globl SCU_1_Veneer 
SCU_1_Veneer:
    LDR R0, =SCU_1_IRQHandler
20000044:	4823      	ldr	r0, [pc, #140]	; (200000d4 <CCU40_3_Veneer+0x34>)
    MOV PC,R0
20000046:	4687      	mov	pc, r0

20000048 <SCU_2_Veneer>:
/* ======================================================================== */
    .globl SCU_2_Veneer
SCU_2_Veneer:
    LDR R0, =SCU_2_IRQHandler
20000048:	4823      	ldr	r0, [pc, #140]	; (200000d8 <CCU40_3_Veneer+0x38>)
    MOV PC,R0
2000004a:	4687      	mov	pc, r0

2000004c <SCU_3_Veneer>:
/* ======================================================================== */
    .globl SCU_3_Veneer 
SCU_3_Veneer:
    LDR R0, =ERU0_0_IRQHandler
2000004c:	4823      	ldr	r0, [pc, #140]	; (200000dc <CCU40_3_Veneer+0x3c>)
    MOV PC,R0
2000004e:	4687      	mov	pc, r0

20000050 <SCU_4_Veneer>:
/* ======================================================================== */
    .globl SCU_4_Veneer 
SCU_4_Veneer:
    LDR R0, =ERU0_1_IRQHandler
20000050:	4823      	ldr	r0, [pc, #140]	; (200000e0 <CCU40_3_Veneer+0x40>)
    MOV PC,R0
20000052:	4687      	mov	pc, r0

20000054 <SCU_5_Veneer>:
/* ======================================================================== */
    .globl SCU_5_Veneer 
SCU_5_Veneer:
    LDR R0, =ERU0_2_IRQHandler
20000054:	4823      	ldr	r0, [pc, #140]	; (200000e4 <CCU40_3_Veneer+0x44>)
    MOV PC,R0
20000056:	4687      	mov	pc, r0

20000058 <SCU_6_Veneer>:
/* ======================================================================== */
    .globl SCU_6_Veneer 
SCU_6_Veneer:
    LDR R0, =ERU0_3_IRQHandler
20000058:	4823      	ldr	r0, [pc, #140]	; (200000e8 <CCU40_3_Veneer+0x48>)
    MOV PC,R0
2000005a:	4687      	mov	pc, r0
	...

20000064 <USIC0_0_Veneer>:
    .long 0
    .long 0
/* ======================================================================== */
    .globl USIC0_0_Veneer
USIC0_0_Veneer:
    LDR R0, =USIC0_0_IRQHandler
20000064:	4821      	ldr	r0, [pc, #132]	; (200000ec <CCU40_3_Veneer+0x4c>)
    MOV PC,R0
20000066:	4687      	mov	pc, r0

20000068 <USIC0_1_Veneer>:
/* ======================================================================== */
    .globl USIC0_1_Veneer
USIC0_1_Veneer:
    LDR R0, =USIC0_1_IRQHandler
20000068:	4821      	ldr	r0, [pc, #132]	; (200000f0 <CCU40_3_Veneer+0x50>)
    MOV PC,R0
2000006a:	4687      	mov	pc, r0

2000006c <USIC0_2_Veneer>:
/* ======================================================================== */
    .globl USIC0_2_Veneer
USIC0_2_Veneer:
    LDR R0, =USIC0_2_IRQHandler
2000006c:	4821      	ldr	r0, [pc, #132]	; (200000f4 <CCU40_3_Veneer+0x54>)
    MOV PC,R0
2000006e:	4687      	mov	pc, r0

20000070 <USIC0_3_Veneer>:
/* ======================================================================== */
    .globl USIC0_3_Veneer
USIC0_3_Veneer:
    LDR R0, =USIC0_3_IRQHandler
20000070:	4821      	ldr	r0, [pc, #132]	; (200000f8 <CCU40_3_Veneer+0x58>)
    MOV PC,R0
20000072:	4687      	mov	pc, r0

20000074 <USIC0_4_Veneer>:
/* ======================================================================== */
    .globl USIC0_4_Veneer
USIC0_4_Veneer:
    LDR R0, =USIC0_4_IRQHandler
20000074:	4821      	ldr	r0, [pc, #132]	; (200000fc <CCU40_3_Veneer+0x5c>)
    MOV PC,R0
20000076:	4687      	mov	pc, r0

20000078 <USIC0_5_Veneer>:
/* ======================================================================== */
    .globl USIC0_5_Veneer
USIC0_5_Veneer:
    LDR R0, =USIC0_5_IRQHandler
20000078:	4821      	ldr	r0, [pc, #132]	; (20000100 <CCU40_3_Veneer+0x60>)
    MOV PC,R0
2000007a:	4687      	mov	pc, r0

2000007c <VADC0_C0_0_Veneer>:
/* ======================================================================== */
    .globl VADC0_C0_0_Veneer 
VADC0_C0_0_Veneer:
    LDR R0, =VADC0_C0_0_IRQHandler
2000007c:	4821      	ldr	r0, [pc, #132]	; (20000104 <CCU40_3_Veneer+0x64>)
    MOV PC,R0
2000007e:	4687      	mov	pc, r0

20000080 <VADC0_C0_1_Veneer>:
/* ======================================================================== */
    .globl VADC0_C0_1_Veneer
VADC0_C0_1_Veneer:
    LDR R0, =VADC0_C0_1_IRQHandler
20000080:	4821      	ldr	r0, [pc, #132]	; (20000108 <CCU40_3_Veneer+0x68>)
    MOV PC,R0
20000082:	4687      	mov	pc, r0
	...

20000094 <CCU40_0_Veneer>:
    .long 0
    .long 0
/* ======================================================================== */
    .globl CCU40_0_Veneer
CCU40_0_Veneer:
    LDR R0, =CCU40_0_IRQHandler
20000094:	481d      	ldr	r0, [pc, #116]	; (2000010c <CCU40_3_Veneer+0x6c>)
    MOV PC,R0
20000096:	4687      	mov	pc, r0

20000098 <CCU40_1_Veneer>:
/* ======================================================================== */
    .globl CCU40_1_Veneer
CCU40_1_Veneer:
    LDR R0, =CCU40_1_IRQHandler
20000098:	481d      	ldr	r0, [pc, #116]	; (20000110 <CCU40_3_Veneer+0x70>)
    MOV PC,R0
2000009a:	4687      	mov	pc, r0

2000009c <CCU40_2_Veneer>:
/* ======================================================================== */
    .globl CCU40_2_Veneer
CCU40_2_Veneer:
    LDR R0, =CCU40_2_IRQHandler
2000009c:	481d      	ldr	r0, [pc, #116]	; (20000114 <CCU40_3_Veneer+0x74>)
    MOV PC,R0
2000009e:	4687      	mov	pc, r0

200000a0 <CCU40_3_Veneer>:
/* ======================================================================== */
    .globl CCU40_3_Veneer
CCU40_3_Veneer:
    LDR R0, =CCU40_3_IRQHandler
200000a0:	481d      	ldr	r0, [pc, #116]	; (20000118 <CCU40_3_Veneer+0x78>)
    MOV PC,R0
200000a2:	4687      	mov	pc, r0
	...
    
    .align 1
    
    .globl HardFault_Veneer
HardFault_Veneer:
    LDR R0, =HardFault_Handler
200000c0:	10001099 	.word	0x10001099
    .long 0
    
/* ======================================================================== */
    .globl SVC_Veneer
SVC_Veneer:
    LDR R0, =SVC_Handler
200000c4:	10001099 	.word	0x10001099
    .long 0
    .long 0
/* ======================================================================== */
    .globl PendSV_Veneer
PendSV_Veneer:
    LDR R0, =PendSV_Handler
200000c8:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl SysTick_Veneer 
SysTick_Veneer:
    LDR R0, =SysTick_Handler
200000cc:	10001bd9 	.word	0x10001bd9
    MOV PC,R0
/* ======================================================================== */
    .globl SCU_0_Veneer 
SCU_0_Veneer:
    LDR R0, =SCU_0_IRQHandler
200000d0:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl SCU_1_Veneer 
SCU_1_Veneer:
    LDR R0, =SCU_1_IRQHandler
200000d4:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl SCU_2_Veneer
SCU_2_Veneer:
    LDR R0, =SCU_2_IRQHandler
200000d8:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl SCU_3_Veneer 
SCU_3_Veneer:
    LDR R0, =ERU0_0_IRQHandler
200000dc:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl SCU_4_Veneer 
SCU_4_Veneer:
    LDR R0, =ERU0_1_IRQHandler
200000e0:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl SCU_5_Veneer 
SCU_5_Veneer:
    LDR R0, =ERU0_2_IRQHandler
200000e4:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl SCU_6_Veneer 
SCU_6_Veneer:
    LDR R0, =ERU0_3_IRQHandler
200000e8:	10001099 	.word	0x10001099
    .long 0
    .long 0
/* ======================================================================== */
    .globl USIC0_0_Veneer
USIC0_0_Veneer:
    LDR R0, =USIC0_0_IRQHandler
200000ec:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl USIC0_1_Veneer
USIC0_1_Veneer:
    LDR R0, =USIC0_1_IRQHandler
200000f0:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl USIC0_2_Veneer
USIC0_2_Veneer:
    LDR R0, =USIC0_2_IRQHandler
200000f4:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl USIC0_3_Veneer
USIC0_3_Veneer:
    LDR R0, =USIC0_3_IRQHandler
200000f8:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl USIC0_4_Veneer
USIC0_4_Veneer:
    LDR R0, =USIC0_4_IRQHandler
200000fc:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl USIC0_5_Veneer
USIC0_5_Veneer:
    LDR R0, =USIC0_5_IRQHandler
20000100:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl VADC0_C0_0_Veneer 
VADC0_C0_0_Veneer:
    LDR R0, =VADC0_C0_0_IRQHandler
20000104:	10002bad 	.word	0x10002bad
    MOV PC,R0
/* ======================================================================== */
    .globl VADC0_C0_1_Veneer
VADC0_C0_1_Veneer:
    LDR R0, =VADC0_C0_1_IRQHandler
20000108:	10001099 	.word	0x10001099
    .long 0
    .long 0
/* ======================================================================== */
    .globl CCU40_0_Veneer
CCU40_0_Veneer:
    LDR R0, =CCU40_0_IRQHandler
2000010c:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl CCU40_1_Veneer
CCU40_1_Veneer:
    LDR R0, =CCU40_1_IRQHandler
20000110:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl CCU40_2_Veneer
CCU40_2_Veneer:
    LDR R0, =CCU40_2_IRQHandler
20000114:	10001099 	.word	0x10001099
    MOV PC,R0
/* ======================================================================== */
    .globl CCU40_3_Veneer
CCU40_3_Veneer:
    LDR R0, =CCU40_3_IRQHandler
20000118:	10001099 	.word	0x10001099
